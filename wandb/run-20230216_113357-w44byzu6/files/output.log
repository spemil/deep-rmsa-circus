WARNING:tensorflow:From /Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/compat/v2_compat.py:107: disable_resource_variables (from tensorflow.python.ops.variable_scope) is deprecated and will be removed in a future version.
Instructions for updating:
non-resource variables are not supported in the long term
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/keras/engine/base_layer_v1.py:1694: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  warnings.warn('`layer.apply` is deprecated and '
defaultdict(<function <lambda> at 0x7fcbe278b520>, {1: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe278b5b0>, {2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe278b640>, {0: [1, 2], 1: [1, 3, 2], 2: [1, 8, 7, 5, 4, 2], 3: [1, 3, 6, 5, 4, 2], 4: [1, 8, 9, 12, 11, 4, 2], 5: [1, 8, 9, 13, 11, 4, 2], 6: [1, 8, 9, 10, 7, 5, 4, 2], 7: [1, 8, 9, 13, 14, 12, 11, 4, 2], 8: [1, 8, 7, 5, 6, 3, 2], 9: [1, 8, 9, 12, 14, 13, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e9e0>, {0: [1, 3], 1: [1, 2, 3], 2: [1, 2, 4, 5, 6, 3], 3: [1, 8, 7, 5, 4, 2, 3], 4: [1, 8, 9, 10, 6, 3], 5: [1, 8, 7, 5, 6, 3], 6: [1, 2, 4, 5, 7, 10, 6, 3], 7: [1, 8, 9, 13, 14, 6, 3], 8: [1, 8, 7, 10, 6, 3], 9: [1, 8, 9, 12, 14, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e950>, {0: [1, 2, 4], 1: [1, 3, 2, 4], 2: [1, 8, 7, 5, 4], 3: [1, 3, 6, 5, 4], 4: [1, 2, 3, 6, 5, 4], 5: [1, 8, 9, 12, 11, 4], 6: [1, 8, 9, 13, 11, 4], 7: [1, 8, 9, 10, 7, 5, 4], 8: [1, 8, 9, 13, 14, 12, 11, 4], 9: [1, 8, 9, 12, 14, 13, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e8c0>, {0: [1, 2, 4, 5], 1: [1, 3, 2, 4, 5], 2: [1, 8, 7, 5], 3: [1, 3, 6, 5], 4: [1, 2, 3, 6, 5], 5: [1, 8, 9, 10, 7, 5], 6: [1, 8, 9, 10, 6, 5], 7: [1, 3, 6, 10, 7, 5], 8: [1, 2, 3, 6, 10, 7, 5], 9: [1, 8, 9, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e830>, {0: [1, 3, 6], 1: [1, 2, 3, 6], 2: [1, 2, 4, 5, 6], 3: [1, 3, 2, 4, 5, 6], 4: [1, 8, 7, 5, 6], 5: [1, 8, 9, 10, 6], 6: [1, 2, 4, 5, 7, 10, 6], 7: [1, 8, 9, 13, 14, 6], 8: [1, 8, 7, 10, 6], 9: [1, 8, 9, 12, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e7a0>, {0: [1, 2, 4, 5, 7], 1: [1, 8, 7], 2: [1, 3, 2, 4, 5, 7], 3: [1, 3, 6, 5, 7], 4: [1, 2, 3, 6, 5, 7], 5: [1, 8, 9, 10, 7], 6: [1, 3, 6, 10, 7], 7: [1, 2, 3, 6, 10, 7], 8: [1, 2, 4, 5, 6, 10, 7], 9: [1, 2, 4, 11, 12, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e710>, {0: [1, 8], 1: [1, 2, 4, 5, 7, 8], 2: [1, 3, 2, 4, 5, 7, 8], 3: [1, 2, 4, 11, 12, 9, 8], 4: [1, 2, 4, 11, 13, 9, 8], 5: [1, 2, 4, 5, 7, 10, 9, 8], 6: [1, 3, 6, 5, 7, 8], 7: [1, 2, 4, 11, 12, 14, 13, 9, 8], 8: [1, 3, 6, 10, 9, 8], 9: [1, 2, 3, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e680>, {0: [1, 8, 9], 1: [1, 2, 4, 5, 7, 8, 9], 2: [1, 2, 4, 11, 12, 9], 3: [1, 2, 4, 11, 13, 9], 4: [1, 3, 6, 10, 9], 5: [1, 2, 4, 5, 7, 10, 9], 6: [1, 2, 4, 11, 12, 14, 13, 9], 7: [1, 8, 7, 10, 9], 8: [1, 2, 3, 6, 10, 9], 9: [1, 2, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e5f0>, {0: [1, 8, 9, 10], 1: [1, 2, 4, 5, 7, 10], 2: [1, 3, 6, 10], 3: [1, 8, 7, 10], 4: [1, 2, 3, 6, 10], 5: [1, 2, 4, 5, 6, 10], 6: [1, 2, 4, 5, 7, 8, 9, 10], 7: [1, 2, 4, 11, 12, 9, 10], 8: [1, 3, 2, 4, 5, 7, 10], 9: [1, 2, 4, 11, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e560>, {0: [1, 2, 4, 11], 1: [1, 8, 9, 12, 11], 2: [1, 8, 9, 13, 11], 3: [1, 8, 9, 13, 14, 12, 11], 4: [1, 8, 9, 12, 14, 13, 11], 5: [1, 3, 2, 4, 11], 6: [1, 2, 4, 5, 7, 8, 9, 12, 11], 7: [1, 2, 4, 5, 7, 8, 9, 13, 11], 8: [1, 2, 4, 5, 7, 8, 9, 13, 14, 12, 11], 9: [1, 3, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e4d0>, {0: [1, 8, 9, 12], 1: [1, 8, 9, 13, 14, 12], 2: [1, 2, 4, 11, 12], 3: [1, 8, 9, 13, 11, 12], 4: [1, 2, 4, 5, 7, 8, 9, 12], 5: [1, 2, 4, 11, 13, 14, 12], 6: [1, 2, 4, 11, 13, 9, 12], 7: [1, 2, 4, 5, 7, 8, 9, 13, 14, 12], 8: [1, 3, 2, 4, 11, 12], 9: [1, 2, 4, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e440>, {0: [1, 8, 9, 13], 1: [1, 8, 9, 12, 14, 13], 2: [1, 2, 4, 11, 13], 3: [1, 8, 9, 12, 11, 13], 4: [1, 2, 4, 5, 7, 8, 9, 13], 5: [1, 2, 4, 11, 12, 14, 13], 6: [1, 2, 4, 11, 12, 9, 13], 7: [1, 3, 6, 14, 13], 8: [1, 2, 4, 5, 7, 8, 9, 12, 14, 13], 9: [1, 2, 3, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e290>, {0: [1, 8, 9, 13, 14], 1: [1, 8, 9, 12, 14], 2: [1, 2, 4, 11, 12, 14], 3: [1, 2, 4, 11, 13, 14], 4: [1, 8, 9, 12, 11, 13, 14], 5: [1, 2, 4, 5, 7, 8, 9, 13, 14], 6: [1, 8, 9, 13, 11, 12, 14], 7: [1, 3, 6, 14], 8: [1, 2, 4, 11, 12, 9, 13, 14], 9: [1, 2, 4, 5, 7, 8, 9, 12, 14]})}), 2: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe468e200>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e170>, {0: [2, 1], 1: [2, 3, 1], 2: [2, 4, 5, 7, 8, 1], 3: [2, 4, 5, 6, 3, 1], 4: [2, 4, 11, 12, 9, 8, 1], 5: [2, 4, 11, 13, 9, 8, 1], 6: [2, 4, 5, 7, 10, 9, 8, 1], 7: [2, 4, 11, 12, 14, 13, 9, 8, 1], 8: [2, 3, 6, 5, 7, 8, 1], 9: [2, 4, 11, 13, 14, 12, 9, 8, 1]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468ff40>, {0: [2, 3], 1: [2, 1, 3], 2: [2, 4, 5, 6, 3], 3: [2, 4, 5, 7, 10, 6, 3], 4: [2, 4, 5, 7, 8, 1, 3], 5: [2, 4, 5, 7, 8, 9, 10, 6, 3], 6: [2, 4, 11, 12, 14, 6, 3], 7: [2, 4, 11, 13, 14, 6, 3], 8: [2, 4, 11, 12, 9, 10, 6, 3], 9: [2, 4, 11, 13, 9, 10, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e0e0>, {0: [2, 4], 1: [2, 3, 6, 5, 4], 2: [2, 1, 8, 7, 5, 4], 3: [2, 3, 6, 10, 7, 5, 4], 4: [2, 1, 3, 6, 5, 4], 5: [2, 3, 1, 8, 7, 5, 4], 6: [2, 3, 6, 10, 9, 8, 7, 5, 4], 7: [2, 1, 8, 9, 12, 11, 4], 8: [2, 3, 6, 14, 13, 11, 4], 9: [2, 3, 6, 10, 9, 12, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468feb0>, {0: [2, 4, 5], 1: [2, 3, 6, 5], 2: [2, 1, 8, 7, 5], 3: [2, 3, 6, 10, 7, 5], 4: [2, 1, 3, 6, 5], 5: [2, 4, 11, 12, 9, 8, 7, 5], 6: [2, 3, 1, 8, 7, 5], 7: [2, 4, 11, 13, 9, 8, 7, 5], 8: [2, 4, 11, 12, 14, 13, 9, 8, 7, 5], 9: [2, 3, 6, 10, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468fe20>, {0: [2, 3, 6], 1: [2, 4, 5, 6], 2: [2, 1, 3, 6], 3: [2, 4, 5, 7, 10, 6], 4: [2, 4, 5, 7, 8, 9, 10, 6], 5: [2, 4, 11, 12, 14, 6], 6: [2, 4, 11, 13, 14, 6], 7: [2, 4, 11, 12, 9, 10, 6], 8: [2, 4, 11, 13, 9, 10, 6], 9: [2, 4, 5, 7, 8, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468fd90>, {0: [2, 4, 5, 7], 1: [2, 1, 8, 7], 2: [2, 3, 6, 5, 7], 3: [2, 3, 6, 10, 7], 4: [2, 4, 5, 6, 10, 7], 5: [2, 4, 11, 12, 9, 8, 7], 6: [2, 3, 1, 8, 7], 7: [2, 4, 11, 13, 9, 8, 7], 8: [2, 4, 11, 12, 14, 13, 9, 8, 7], 9: [2, 3, 6, 10, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e320>, {0: [2, 4, 5, 7, 8], 1: [2, 1, 8], 2: [2, 4, 11, 12, 9, 8], 3: [2, 3, 1, 8], 4: [2, 4, 11, 13, 9, 8], 5: [2, 4, 5, 7, 10, 9, 8], 6: [2, 4, 11, 12, 14, 13, 9, 8], 7: [2, 3, 6, 5, 7, 8], 8: [2, 4, 11, 13, 14, 12, 9, 8], 9: [2, 3, 6, 10, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468fd00>, {0: [2, 4, 5, 7, 8, 9], 1: [2, 4, 11, 12, 9], 2: [2, 4, 11, 13, 9], 3: [2, 4, 5, 7, 10, 9], 4: [2, 4, 11, 12, 14, 13, 9], 5: [2, 1, 8, 9], 6: [2, 4, 11, 13, 14, 12, 9], 7: [2, 3, 6, 10, 9], 8: [2, 4, 5, 6, 10, 9], 9: [2, 3, 6, 14, 13, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e3b0>, {0: [2, 4, 5, 7, 10], 1: [2, 3, 6, 10], 2: [2, 4, 5, 6, 10], 3: [2, 4, 5, 7, 8, 9, 10], 4: [2, 4, 11, 12, 9, 10], 5: [2, 4, 11, 13, 9, 10], 6: [2, 4, 11, 12, 14, 13, 9, 10], 7: [2, 1, 8, 9, 10], 8: [2, 4, 11, 13, 14, 12, 9, 10], 9: [2, 3, 6, 14, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468fc70>, {0: [2, 4, 11], 1: [2, 4, 5, 7, 8, 9, 12, 11], 2: [2, 4, 5, 7, 8, 9, 13, 11], 3: [2, 4, 5, 7, 8, 9, 13, 14, 12, 11], 4: [2, 4, 5, 7, 10, 9, 12, 11], 5: [2, 4, 5, 7, 8, 9, 12, 14, 13, 11], 6: [2, 3, 6, 14, 13, 11], 7: [2, 4, 5, 7, 10, 9, 13, 11], 8: [2, 1, 8, 9, 12, 11], 9: [2, 3, 6, 10, 9, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468fbe0>, {0: [2, 4, 11, 12], 1: [2, 4, 5, 7, 8, 9, 12], 2: [2, 4, 11, 13, 14, 12], 3: [2, 4, 11, 13, 9, 12], 4: [2, 4, 5, 7, 8, 9, 13, 14, 12], 5: [2, 4, 5, 7, 10, 9, 12], 6: [2, 1, 8, 9, 12], 7: [2, 3, 6, 10, 9, 12], 8: [2, 3, 6, 14, 12], 9: [2, 4, 5, 6, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468fb50>, {0: [2, 4, 11, 13], 1: [2, 4, 5, 7, 8, 9, 13], 2: [2, 4, 11, 12, 14, 13], 3: [2, 4, 11, 12, 9, 13], 4: [2, 4, 5, 7, 8, 9, 12, 14, 13], 5: [2, 3, 6, 14, 13], 6: [2, 4, 5, 7, 10, 9, 13], 7: [2, 4, 5, 6, 14, 13], 8: [2, 1, 8, 9, 13], 9: [2, 3, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468fac0>, {0: [2, 4, 11, 12, 14], 1: [2, 4, 11, 13, 14], 2: [2, 4, 5, 7, 8, 9, 13, 14], 3: [2, 4, 11, 12, 9, 13, 14], 4: [2, 4, 5, 7, 8, 9, 12, 14], 5: [2, 3, 6, 14], 6: [2, 4, 11, 13, 9, 12, 14], 7: [2, 4, 5, 6, 14], 8: [2, 4, 5, 7, 10, 9, 13, 14], 9: [2, 1, 8, 9, 13, 14]})}), 3: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe468fa30>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468f9a0>, {0: [3, 1], 1: [3, 2, 1], 2: [3, 6, 5, 4, 2, 1], 3: [3, 2, 4, 5, 7, 8, 1], 4: [3, 6, 10, 9, 8, 1], 5: [3, 6, 5, 7, 8, 1], 6: [3, 6, 14, 13, 9, 8, 1], 7: [3, 6, 10, 7, 5, 4, 2, 1], 8: [3, 2, 4, 11, 12, 9, 8, 1], 9: [3, 6, 14, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468f910>, {0: [3, 2], 1: [3, 1, 2], 2: [3, 6, 5, 4, 2], 3: [3, 6, 10, 7, 5, 4, 2], 4: [3, 1, 8, 7, 5, 4, 2], 5: [3, 6, 10, 9, 8, 7, 5, 4, 2], 6: [3, 6, 14, 13, 11, 4, 2], 7: [3, 6, 10, 9, 12, 11, 4, 2], 8: [3, 6, 14, 12, 11, 4, 2], 9: [3, 6, 10, 9, 13, 11, 4, 2]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468e050>, {0: [3, 2, 4], 1: [3, 1, 2, 4], 2: [3, 6, 5, 4], 3: [3, 6, 10, 7, 5, 4], 4: [3, 1, 8, 7, 5, 4], 5: [3, 2, 1, 8, 7, 5, 4], 6: [3, 6, 10, 9, 8, 7, 5, 4], 7: [3, 6, 14, 13, 11, 4], 8: [3, 6, 10, 9, 12, 11, 4], 9: [3, 6, 14, 12, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468f880>, {0: [3, 2, 4, 5], 1: [3, 6, 5], 2: [3, 1, 2, 4, 5], 3: [3, 6, 10, 7, 5], 4: [3, 1, 8, 7, 5], 5: [3, 2, 1, 8, 7, 5], 6: [3, 6, 10, 9, 8, 7, 5], 7: [3, 6, 14, 13, 9, 8, 7, 5], 8: [3, 2, 4, 11, 12, 9, 8, 7, 5], 9: [3, 6, 14, 12, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468f7f0>, {0: [3, 6], 1: [3, 2, 4, 5, 6], 2: [3, 2, 4, 5, 7, 10, 6], 3: [3, 1, 2, 4, 5, 6], 4: [3, 2, 4, 5, 7, 8, 9, 10, 6], 5: [3, 2, 4, 11, 12, 14, 6], 6: [3, 2, 4, 11, 13, 14, 6], 7: [3, 2, 4, 11, 12, 9, 10, 6], 8: [3, 2, 4, 11, 13, 9, 10, 6], 9: [3, 2, 4, 5, 7, 8, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468dfc0>, {0: [3, 2, 4, 5, 7], 1: [3, 6, 5, 7], 2: [3, 6, 10, 7], 3: [3, 1, 2, 4, 5, 7], 4: [3, 1, 8, 7], 5: [3, 2, 1, 8, 7], 6: [3, 6, 10, 9, 8, 7], 7: [3, 2, 4, 5, 6, 10, 7], 8: [3, 6, 14, 13, 9, 8, 7], 9: [3, 2, 4, 11, 12, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468f760>, {0: [3, 2, 4, 5, 7, 8], 1: [3, 1, 8], 2: [3, 2, 1, 8], 3: [3, 6, 5, 7, 8], 4: [3, 6, 10, 9, 8], 5: [3, 6, 14, 13, 9, 8], 6: [3, 2, 4, 11, 12, 9, 8], 7: [3, 6, 10, 7, 8], 8: [3, 6, 14, 12, 9, 8], 9: [3, 2, 4, 11, 13, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468f6d0>, {0: [3, 6, 10, 9], 1: [3, 2, 4, 5, 7, 8, 9], 2: [3, 6, 14, 13, 9], 3: [3, 2, 4, 11, 12, 9], 4: [3, 6, 14, 12, 9], 5: [3, 2, 4, 11, 13, 9], 6: [3, 1, 8, 9], 7: [3, 2, 4, 5, 7, 10, 9], 8: [3, 2, 4, 11, 12, 14, 13, 9], 9: [3, 2, 1, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe468f640>, {0: [3, 6, 10], 1: [3, 2, 4, 5, 7, 10], 2: [3, 2, 4, 5, 6, 10], 3: [3, 6, 14, 13, 9, 10], 4: [3, 2, 4, 5, 7, 8, 9, 10], 5: [3, 2, 4, 11, 12, 9, 10], 6: [3, 6, 5, 7, 10], 7: [3, 6, 14, 12, 9, 10], 8: [3, 2, 4, 11, 13, 9, 10], 9: [3, 1, 8, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1630>, {0: [3, 2, 4, 11], 1: [3, 6, 14, 13, 11], 2: [3, 6, 10, 9, 12, 11], 3: [3, 6, 14, 12, 11], 4: [3, 6, 10, 9, 13, 11], 5: [3, 2, 4, 5, 7, 8, 9, 12, 11], 6: [3, 6, 14, 13, 9, 12, 11], 7: [3, 6, 10, 9, 13, 14, 12, 11], 8: [3, 6, 10, 9, 12, 14, 13, 11], 9: [3, 2, 4, 5, 7, 8, 9, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1510>, {0: [3, 2, 4, 11, 12], 1: [3, 6, 10, 9, 12], 2: [3, 6, 14, 12], 3: [3, 2, 4, 5, 7, 8, 9, 12], 4: [3, 6, 10, 9, 13, 14, 12], 5: [3, 6, 14, 13, 9, 12], 6: [3, 2, 4, 11, 13, 14, 12], 7: [3, 2, 4, 11, 13, 9, 12], 8: [3, 2, 4, 5, 7, 8, 9, 13, 14, 12], 9: [3, 1, 8, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b16c0>, {0: [3, 6, 14, 13], 1: [3, 6, 10, 9, 13], 2: [3, 2, 4, 11, 13], 3: [3, 6, 10, 9, 12, 14, 13], 4: [3, 2, 4, 5, 7, 8, 9, 13], 5: [3, 2, 4, 11, 12, 14, 13], 6: [3, 6, 14, 12, 9, 13], 7: [3, 2, 4, 11, 12, 9, 13], 8: [3, 2, 4, 5, 7, 8, 9, 12, 14, 13], 9: [3, 1, 8, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1750>, {0: [3, 6, 14], 1: [3, 6, 10, 9, 13, 14], 2: [3, 2, 4, 11, 12, 14], 3: [3, 6, 10, 9, 12, 14], 4: [3, 2, 4, 11, 13, 14], 5: [3, 2, 4, 5, 7, 8, 9, 13, 14], 6: [3, 2, 4, 11, 12, 9, 13, 14], 7: [3, 2, 4, 5, 7, 8, 9, 12, 14], 8: [3, 2, 4, 11, 13, 9, 12, 14], 9: [3, 2, 4, 5, 6, 14]})}), 4: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe46b0280>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b09d0>, {0: [4, 2, 1], 1: [4, 2, 3, 1], 2: [4, 5, 7, 8, 1], 3: [4, 5, 6, 3, 1], 4: [4, 5, 6, 3, 2, 1], 5: [4, 11, 12, 9, 8, 1], 6: [4, 11, 13, 9, 8, 1], 7: [4, 5, 7, 10, 9, 8, 1], 8: [4, 11, 12, 14, 13, 9, 8, 1], 9: [4, 11, 13, 14, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b0a60>, {0: [4, 2], 1: [4, 5, 6, 3, 2], 2: [4, 5, 7, 8, 1, 2], 3: [4, 5, 7, 10, 6, 3, 2], 4: [4, 5, 6, 3, 1, 2], 5: [4, 5, 7, 8, 1, 3, 2], 6: [4, 5, 7, 8, 9, 10, 6, 3, 2], 7: [4, 11, 12, 9, 8, 1, 2], 8: [4, 11, 13, 14, 6, 3, 2], 9: [4, 11, 12, 14, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b15a0>, {0: [4, 2, 3], 1: [4, 2, 1, 3], 2: [4, 5, 6, 3], 3: [4, 5, 7, 10, 6, 3], 4: [4, 5, 7, 8, 1, 3], 5: [4, 5, 7, 8, 1, 2, 3], 6: [4, 5, 7, 8, 9, 10, 6, 3], 7: [4, 11, 12, 14, 6, 3], 8: [4, 11, 13, 14, 6, 3], 9: [4, 11, 12, 9, 10, 6, 3]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b0ca0>, {0: [4, 5], 1: [4, 2, 3, 6, 5], 2: [4, 11, 12, 9, 8, 7, 5], 3: [4, 11, 13, 9, 8, 7, 5], 4: [4, 11, 12, 14, 13, 9, 8, 7, 5], 5: [4, 2, 1, 8, 7, 5], 6: [4, 11, 12, 9, 10, 7, 5], 7: [4, 11, 13, 14, 12, 9, 8, 7, 5], 8: [4, 11, 13, 9, 10, 7, 5], 9: [4, 11, 12, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b0d30>, {0: [4, 5, 6], 1: [4, 2, 3, 6], 2: [4, 5, 7, 10, 6], 3: [4, 5, 7, 8, 9, 10, 6], 4: [4, 11, 12, 14, 6], 5: [4, 11, 13, 14, 6], 6: [4, 11, 12, 9, 10, 6], 7: [4, 11, 13, 9, 10, 6], 8: [4, 5, 7, 8, 9, 13, 14, 6], 9: [4, 2, 1, 3, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b01f0>, {0: [4, 5, 7], 1: [4, 5, 6, 10, 7], 2: [4, 11, 12, 9, 8, 7], 3: [4, 11, 13, 9, 8, 7], 4: [4, 11, 12, 14, 13, 9, 8, 7], 5: [4, 2, 1, 8, 7], 6: [4, 11, 12, 9, 10, 7], 7: [4, 11, 13, 14, 12, 9, 8, 7], 8: [4, 2, 3, 6, 5, 7], 9: [4, 5, 6, 10, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b0160>, {0: [4, 5, 7, 8], 1: [4, 11, 12, 9, 8], 2: [4, 11, 13, 9, 8], 3: [4, 5, 7, 10, 9, 8], 4: [4, 11, 12, 14, 13, 9, 8], 5: [4, 2, 1, 8], 6: [4, 11, 13, 14, 12, 9, 8], 7: [4, 5, 6, 10, 9, 8], 8: [4, 5, 6, 14, 13, 9, 8], 9: [4, 5, 6, 10, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b00d0>, {0: [4, 5, 7, 8, 9], 1: [4, 11, 12, 9], 2: [4, 11, 13, 9], 3: [4, 5, 7, 10, 9], 4: [4, 11, 12, 14, 13, 9], 5: [4, 11, 13, 14, 12, 9], 6: [4, 5, 6, 10, 9], 7: [4, 5, 6, 14, 13, 9], 8: [4, 5, 6, 14, 12, 9], 9: [4, 2, 1, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b0040>, {0: [4, 5, 7, 10], 1: [4, 5, 6, 10], 2: [4, 5, 7, 8, 9, 10], 3: [4, 11, 12, 9, 10], 4: [4, 11, 13, 9, 10], 5: [4, 11, 12, 14, 13, 9, 10], 6: [4, 2, 3, 6, 10], 7: [4, 11, 13, 14, 12, 9, 10], 8: [4, 5, 6, 14, 13, 9, 10], 9: [4, 5, 6, 14, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1900>, {0: [4, 11], 1: [4, 5, 7, 8, 9, 12, 11], 2: [4, 5, 7, 8, 9, 13, 11], 3: [4, 5, 7, 8, 9, 13, 14, 12, 11], 4: [4, 5, 7, 10, 9, 12, 11], 5: [4, 5, 7, 8, 9, 12, 14, 13, 11], 6: [4, 5, 7, 10, 9, 13, 11], 7: [4, 5, 6, 14, 13, 11], 8: [4, 5, 6, 10, 9, 12, 11], 9: [4, 5, 6, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1990>, {0: [4, 11, 12], 1: [4, 5, 7, 8, 9, 12], 2: [4, 11, 13, 14, 12], 3: [4, 11, 13, 9, 12], 4: [4, 5, 7, 8, 9, 13, 14, 12], 5: [4, 5, 7, 10, 9, 12], 6: [4, 5, 6, 10, 9, 12], 7: [4, 5, 6, 14, 12], 8: [4, 5, 7, 10, 9, 13, 14, 12], 9: [4, 5, 7, 8, 9, 13, 11, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1a20>, {0: [4, 11, 13], 1: [4, 5, 7, 8, 9, 13], 2: [4, 11, 12, 14, 13], 3: [4, 11, 12, 9, 13], 4: [4, 5, 7, 8, 9, 12, 14, 13], 5: [4, 5, 7, 10, 9, 13], 6: [4, 5, 6, 14, 13], 7: [4, 5, 6, 10, 9, 13], 8: [4, 5, 7, 10, 9, 12, 14, 13], 9: [4, 5, 7, 8, 9, 12, 11, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1ab0>, {0: [4, 11, 12, 14], 1: [4, 11, 13, 14], 2: [4, 5, 7, 8, 9, 13, 14], 3: [4, 11, 12, 9, 13, 14], 4: [4, 5, 7, 8, 9, 12, 14], 5: [4, 11, 13, 9, 12, 14], 6: [4, 5, 6, 14], 7: [4, 5, 7, 10, 9, 13, 14], 8: [4, 5, 7, 10, 9, 12, 14], 9: [4, 5, 6, 10, 9, 13, 14]})}), 5: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe46b1b40>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1bd0>, {0: [5, 4, 2, 1], 1: [5, 4, 2, 3, 1], 2: [5, 7, 8, 1], 3: [5, 6, 3, 1], 4: [5, 6, 3, 2, 1], 5: [5, 7, 10, 9, 8, 1], 6: [5, 6, 10, 9, 8, 1], 7: [5, 7, 10, 6, 3, 1], 8: [5, 7, 10, 6, 3, 2, 1], 9: [5, 4, 11, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1c60>, {0: [5, 4, 2], 1: [5, 6, 3, 2], 2: [5, 7, 8, 1, 2], 3: [5, 7, 10, 6, 3, 2], 4: [5, 6, 3, 1, 2], 5: [5, 7, 8, 9, 12, 11, 4, 2], 6: [5, 7, 8, 1, 3, 2], 7: [5, 7, 8, 9, 13, 11, 4, 2], 8: [5, 7, 8, 9, 13, 14, 12, 11, 4, 2], 9: [5, 7, 10, 9, 12, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1cf0>, {0: [5, 4, 2, 3], 1: [5, 6, 3], 2: [5, 4, 2, 1, 3], 3: [5, 7, 10, 6, 3], 4: [5, 7, 8, 1, 3], 5: [5, 7, 8, 1, 2, 3], 6: [5, 7, 8, 9, 10, 6, 3], 7: [5, 7, 8, 9, 13, 14, 6, 3], 8: [5, 7, 8, 9, 12, 14, 6, 3], 9: [5, 7, 8, 9, 12, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1d80>, {0: [5, 4], 1: [5, 6, 3, 2, 4], 2: [5, 7, 8, 9, 12, 11, 4], 3: [5, 7, 8, 9, 13, 11, 4], 4: [5, 7, 8, 9, 13, 14, 12, 11, 4], 5: [5, 7, 10, 9, 12, 11, 4], 6: [5, 7, 8, 1, 2, 4], 7: [5, 7, 8, 9, 12, 14, 13, 11, 4], 8: [5, 7, 10, 9, 13, 11, 4], 9: [5, 6, 14, 13, 11, 4]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1e10>, {0: [5, 6], 1: [5, 7, 10, 6], 2: [5, 4, 2, 3, 6], 3: [5, 7, 8, 9, 10, 6], 4: [5, 7, 8, 9, 13, 14, 6], 5: [5, 7, 8, 9, 12, 14, 6], 6: [5, 7, 10, 9, 13, 14, 6], 7: [5, 7, 10, 9, 12, 14, 6], 8: [5, 4, 11, 12, 14, 6], 9: [5, 4, 11, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1ea0>, {0: [5, 7], 1: [5, 6, 10, 7], 2: [5, 6, 10, 9, 8, 7], 3: [5, 4, 11, 12, 9, 8, 7], 4: [5, 6, 14, 13, 9, 8, 7], 5: [5, 4, 11, 13, 9, 8, 7], 6: [5, 6, 14, 12, 9, 8, 7], 7: [5, 4, 11, 12, 14, 13, 9, 8, 7], 8: [5, 4, 2, 1, 8, 7], 9: [5, 4, 11, 12, 9, 10, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1f30>, {0: [5, 7, 8], 1: [5, 7, 10, 9, 8], 2: [5, 6, 10, 9, 8], 3: [5, 4, 11, 12, 9, 8], 4: [5, 6, 14, 13, 9, 8], 5: [5, 6, 10, 7, 8], 6: [5, 4, 11, 13, 9, 8], 7: [5, 6, 14, 12, 9, 8], 8: [5, 4, 11, 12, 14, 13, 9, 8], 9: [5, 4, 2, 1, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b1fc0>, {0: [5, 7, 8, 9], 1: [5, 7, 10, 9], 2: [5, 6, 10, 9], 3: [5, 4, 11, 12, 9], 4: [5, 6, 14, 13, 9], 5: [5, 4, 11, 13, 9], 6: [5, 6, 14, 12, 9], 7: [5, 4, 11, 12, 14, 13, 9], 8: [5, 4, 11, 13, 14, 12, 9], 9: [5, 6, 14, 13, 11, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2050>, {0: [5, 7, 10], 1: [5, 6, 10], 2: [5, 7, 8, 9, 10], 3: [5, 4, 11, 12, 9, 10], 4: [5, 6, 14, 13, 9, 10], 5: [5, 4, 11, 13, 9, 10], 6: [5, 6, 14, 12, 9, 10], 7: [5, 4, 11, 12, 14, 13, 9, 10], 8: [5, 4, 2, 3, 6, 10], 9: [5, 4, 11, 13, 14, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b20e0>, {0: [5, 4, 11], 1: [5, 7, 8, 9, 12, 11], 2: [5, 7, 8, 9, 13, 11], 3: [5, 7, 8, 9, 13, 14, 12, 11], 4: [5, 7, 10, 9, 12, 11], 5: [5, 7, 8, 9, 12, 14, 13, 11], 6: [5, 7, 10, 9, 13, 11], 7: [5, 6, 14, 13, 11], 8: [5, 6, 10, 9, 12, 11], 9: [5, 6, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2170>, {0: [5, 7, 8, 9, 12], 1: [5, 7, 8, 9, 13, 14, 12], 2: [5, 7, 10, 9, 12], 3: [5, 4, 11, 12], 4: [5, 6, 10, 9, 12], 5: [5, 6, 14, 12], 6: [5, 7, 10, 9, 13, 14, 12], 7: [5, 7, 8, 9, 13, 11, 12], 8: [5, 4, 11, 13, 14, 12], 9: [5, 6, 10, 9, 13, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2200>, {0: [5, 7, 8, 9, 13], 1: [5, 7, 8, 9, 12, 14, 13], 2: [5, 7, 10, 9, 13], 3: [5, 6, 14, 13], 4: [5, 4, 11, 13], 5: [5, 6, 10, 9, 13], 6: [5, 7, 10, 9, 12, 14, 13], 7: [5, 4, 11, 12, 14, 13], 8: [5, 7, 8, 9, 12, 11, 13], 9: [5, 6, 10, 9, 12, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2290>, {0: [5, 7, 8, 9, 13, 14], 1: [5, 7, 8, 9, 12, 14], 2: [5, 6, 14], 3: [5, 7, 10, 9, 13, 14], 4: [5, 7, 10, 9, 12, 14], 5: [5, 4, 11, 12, 14], 6: [5, 6, 10, 9, 13, 14], 7: [5, 4, 11, 13, 14], 8: [5, 6, 10, 9, 12, 14], 9: [5, 7, 8, 9, 12, 11, 13, 14]})}), 6: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe46b2320>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b23b0>, {0: [6, 3, 1], 1: [6, 3, 2, 1], 2: [6, 5, 4, 2, 1], 3: [6, 5, 4, 2, 3, 1], 4: [6, 10, 9, 8, 1], 5: [6, 5, 7, 8, 1], 6: [6, 14, 13, 9, 8, 1], 7: [6, 10, 7, 5, 4, 2, 1], 8: [6, 14, 12, 9, 8, 1], 9: [6, 10, 7, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2440>, {0: [6, 3, 2], 1: [6, 5, 4, 2], 2: [6, 3, 1, 2], 3: [6, 10, 7, 5, 4, 2], 4: [6, 10, 9, 8, 7, 5, 4, 2], 5: [6, 14, 13, 11, 4, 2], 6: [6, 10, 9, 12, 11, 4, 2], 7: [6, 14, 12, 11, 4, 2], 8: [6, 10, 9, 13, 11, 4, 2], 9: [6, 14, 13, 9, 8, 7, 5, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b24d0>, {0: [6, 3], 1: [6, 5, 4, 2, 3], 2: [6, 10, 7, 5, 4, 2, 3], 3: [6, 5, 4, 2, 1, 3], 4: [6, 10, 9, 8, 7, 5, 4, 2, 3], 5: [6, 14, 13, 11, 4, 2, 3], 6: [6, 10, 9, 12, 11, 4, 2, 3], 7: [6, 14, 12, 11, 4, 2, 3], 8: [6, 10, 9, 13, 11, 4, 2, 3], 9: [6, 14, 13, 9, 8, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2560>, {0: [6, 5, 4], 1: [6, 3, 2, 4], 2: [6, 10, 7, 5, 4], 3: [6, 10, 9, 8, 7, 5, 4], 4: [6, 14, 13, 11, 4], 5: [6, 10, 9, 12, 11, 4], 6: [6, 14, 12, 11, 4], 7: [6, 10, 9, 13, 11, 4], 8: [6, 14, 13, 9, 8, 7, 5, 4], 9: [6, 3, 1, 2, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b25f0>, {0: [6, 5], 1: [6, 10, 7, 5], 2: [6, 3, 2, 4, 5], 3: [6, 10, 9, 8, 7, 5], 4: [6, 14, 13, 9, 8, 7, 5], 5: [6, 14, 12, 9, 8, 7, 5], 6: [6, 14, 13, 9, 10, 7, 5], 7: [6, 14, 12, 9, 10, 7, 5], 8: [6, 10, 9, 12, 11, 4, 5], 9: [6, 14, 13, 11, 4, 5]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2680>, {0: [6, 5, 7], 1: [6, 10, 7], 2: [6, 10, 9, 8, 7], 3: [6, 14, 13, 9, 8, 7], 4: [6, 14, 12, 9, 8, 7], 5: [6, 3, 2, 4, 5, 7], 6: [6, 14, 13, 9, 10, 7], 7: [6, 14, 12, 9, 10, 7], 8: [6, 14, 13, 11, 12, 9, 8, 7], 9: [6, 14, 12, 11, 13, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2710>, {0: [6, 5, 7, 8], 1: [6, 10, 9, 8], 2: [6, 14, 13, 9, 8], 3: [6, 10, 7, 8], 4: [6, 14, 12, 9, 8], 5: [6, 14, 13, 11, 12, 9, 8], 6: [6, 14, 12, 11, 13, 9, 8], 7: [6, 5, 7, 10, 9, 8], 8: [6, 3, 2, 4, 5, 7, 8], 9: [6, 14, 13, 9, 10, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b27a0>, {0: [6, 10, 9], 1: [6, 14, 13, 9], 2: [6, 14, 12, 9], 3: [6, 5, 7, 8, 9], 4: [6, 14, 13, 11, 12, 9], 5: [6, 14, 12, 11, 13, 9], 6: [6, 10, 7, 8, 9], 7: [6, 5, 7, 10, 9], 8: [6, 5, 4, 11, 12, 9], 9: [6, 5, 4, 11, 13, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2830>, {0: [6, 10], 1: [6, 14, 13, 9, 10], 2: [6, 5, 7, 10], 3: [6, 14, 12, 9, 10], 4: [6, 5, 7, 8, 9, 10], 5: [6, 14, 13, 11, 12, 9, 10], 6: [6, 14, 12, 11, 13, 9, 10], 7: [6, 14, 13, 9, 8, 7, 10], 8: [6, 14, 12, 9, 8, 7, 10], 9: [6, 5, 4, 11, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b28c0>, {0: [6, 14, 13, 11], 1: [6, 10, 9, 12, 11], 2: [6, 14, 12, 11], 3: [6, 10, 9, 13, 11], 4: [6, 14, 13, 9, 12, 11], 5: [6, 10, 9, 13, 14, 12, 11], 6: [6, 10, 9, 12, 14, 13, 11], 7: [6, 14, 12, 9, 13, 11], 8: [6, 5, 4, 11], 9: [6, 5, 7, 8, 9, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2950>, {0: [6, 10, 9, 12], 1: [6, 14, 12], 2: [6, 10, 9, 13, 14, 12], 3: [6, 14, 13, 9, 12], 4: [6, 14, 13, 11, 12], 5: [6, 10, 9, 13, 11, 12], 6: [6, 5, 7, 8, 9, 12], 7: [6, 5, 7, 8, 9, 13, 14, 12], 8: [6, 10, 7, 8, 9, 12], 9: [6, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b29e0>, {0: [6, 14, 13], 1: [6, 10, 9, 13], 2: [6, 10, 9, 12, 14, 13], 3: [6, 14, 12, 9, 13], 4: [6, 10, 9, 12, 11, 13], 5: [6, 14, 12, 11, 13], 6: [6, 5, 7, 8, 9, 13], 7: [6, 5, 7, 8, 9, 12, 14, 13], 8: [6, 10, 7, 8, 9, 13], 9: [6, 5, 7, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2a70>, {0: [6, 14], 1: [6, 10, 9, 13, 14], 2: [6, 10, 9, 12, 14], 3: [6, 10, 9, 12, 11, 13, 14], 4: [6, 5, 7, 8, 9, 13, 14], 5: [6, 10, 9, 13, 11, 12, 14], 6: [6, 5, 7, 8, 9, 12, 14], 7: [6, 10, 7, 8, 9, 13, 14], 8: [6, 5, 7, 10, 9, 13, 14], 9: [6, 10, 7, 8, 9, 12, 14]})}), 7: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe46b2b00>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2b90>, {0: [7, 5, 4, 2, 1], 1: [7, 8, 1], 2: [7, 5, 4, 2, 3, 1], 3: [7, 5, 6, 3, 1], 4: [7, 10, 9, 8, 1], 5: [7, 5, 6, 3, 2, 1], 6: [7, 10, 6, 3, 1], 7: [7, 10, 6, 3, 2, 1], 8: [7, 10, 6, 5, 4, 2, 1], 9: [7, 8, 9, 12, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2c20>, {0: [7, 5, 4, 2], 1: [7, 8, 1, 2], 2: [7, 5, 6, 3, 2], 3: [7, 10, 6, 3, 2], 4: [7, 10, 6, 5, 4, 2], 5: [7, 8, 9, 12, 11, 4, 2], 6: [7, 8, 1, 3, 2], 7: [7, 8, 9, 13, 11, 4, 2], 8: [7, 8, 9, 13, 14, 12, 11, 4, 2], 9: [7, 10, 9, 12, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2cb0>, {0: [7, 5, 4, 2, 3], 1: [7, 5, 6, 3], 2: [7, 10, 6, 3], 3: [7, 5, 4, 2, 1, 3], 4: [7, 8, 1, 3], 5: [7, 8, 1, 2, 3], 6: [7, 8, 9, 10, 6, 3], 7: [7, 10, 6, 5, 4, 2, 3], 8: [7, 8, 9, 13, 14, 6, 3], 9: [7, 8, 9, 12, 14, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2d40>, {0: [7, 5, 4], 1: [7, 10, 6, 5, 4], 2: [7, 8, 9, 12, 11, 4], 3: [7, 8, 9, 13, 11, 4], 4: [7, 8, 9, 13, 14, 12, 11, 4], 5: [7, 5, 6, 3, 2, 4], 6: [7, 10, 9, 12, 11, 4], 7: [7, 8, 1, 2, 4], 8: [7, 8, 9, 12, 14, 13, 11, 4], 9: [7, 8, 9, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2dd0>, {0: [7, 5], 1: [7, 10, 6, 5], 2: [7, 8, 9, 10, 6, 5], 3: [7, 8, 9, 13, 14, 6, 5], 4: [7, 8, 9, 12, 11, 4, 5], 5: [7, 8, 9, 13, 11, 4, 5], 6: [7, 8, 9, 12, 14, 6, 5], 7: [7, 8, 9, 13, 14, 12, 11, 4, 5], 8: [7, 10, 9, 13, 14, 6, 5], 9: [7, 8, 1, 2, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2e60>, {0: [7, 5, 6], 1: [7, 10, 6], 2: [7, 8, 9, 10, 6], 3: [7, 8, 9, 13, 14, 6], 4: [7, 8, 9, 12, 14, 6], 5: [7, 5, 4, 2, 3, 6], 6: [7, 10, 9, 13, 14, 6], 7: [7, 10, 9, 12, 14, 6], 8: [7, 8, 9, 12, 11, 13, 14, 6], 9: [7, 8, 9, 13, 11, 12, 14, 6]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2ef0>, {0: [7, 8], 1: [7, 10, 9, 8], 2: [7, 5, 6, 10, 9, 8], 3: [7, 5, 4, 11, 12, 9, 8], 4: [7, 5, 6, 14, 13, 9, 8], 5: [7, 5, 4, 11, 13, 9, 8], 6: [7, 5, 6, 14, 12, 9, 8], 7: [7, 5, 4, 11, 12, 14, 13, 9, 8], 8: [7, 10, 6, 14, 13, 9, 8], 9: [7, 5, 4, 2, 1, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b2f80>, {0: [7, 8, 9], 1: [7, 10, 9], 2: [7, 5, 6, 10, 9], 3: [7, 5, 4, 11, 12, 9], 4: [7, 5, 6, 14, 13, 9], 5: [7, 5, 4, 11, 13, 9], 6: [7, 5, 6, 14, 12, 9], 7: [7, 5, 4, 11, 12, 14, 13, 9], 8: [7, 10, 6, 14, 13, 9], 9: [7, 5, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3010>, {0: [7, 10], 1: [7, 8, 9, 10], 2: [7, 5, 6, 10], 3: [7, 8, 9, 13, 14, 6, 10], 4: [7, 5, 4, 11, 12, 9, 10], 5: [7, 5, 6, 14, 13, 9, 10], 6: [7, 8, 9, 12, 14, 6, 10], 7: [7, 5, 4, 11, 13, 9, 10], 8: [7, 5, 6, 14, 12, 9, 10], 9: [7, 5, 4, 11, 12, 14, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b30a0>, {0: [7, 8, 9, 12, 11], 1: [7, 8, 9, 13, 11], 2: [7, 8, 9, 13, 14, 12, 11], 3: [7, 10, 9, 12, 11], 4: [7, 8, 9, 12, 14, 13, 11], 5: [7, 5, 4, 11], 6: [7, 10, 9, 13, 11], 7: [7, 10, 9, 13, 14, 12, 11], 8: [7, 10, 9, 12, 14, 13, 11], 9: [7, 5, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3130>, {0: [7, 8, 9, 12], 1: [7, 8, 9, 13, 14, 12], 2: [7, 10, 9, 12], 3: [7, 10, 9, 13, 14, 12], 4: [7, 8, 9, 13, 11, 12], 5: [7, 5, 4, 11, 12], 6: [7, 10, 9, 13, 11, 12], 7: [7, 5, 6, 10, 9, 12], 8: [7, 5, 6, 14, 12], 9: [7, 5, 4, 11, 13, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b31c0>, {0: [7, 8, 9, 13], 1: [7, 8, 9, 12, 14, 13], 2: [7, 10, 9, 13], 3: [7, 10, 9, 12, 14, 13], 4: [7, 8, 9, 12, 11, 13], 5: [7, 5, 6, 14, 13], 6: [7, 10, 9, 12, 11, 13], 7: [7, 5, 4, 11, 13], 8: [7, 5, 6, 10, 9, 13], 9: [7, 5, 4, 11, 12, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3250>, {0: [7, 8, 9, 13, 14], 1: [7, 8, 9, 12, 14], 2: [7, 10, 9, 13, 14], 3: [7, 10, 9, 12, 14], 4: [7, 8, 9, 12, 11, 13, 14], 5: [7, 8, 9, 13, 11, 12, 14], 6: [7, 5, 6, 14], 7: [7, 10, 9, 12, 11, 13, 14], 8: [7, 10, 9, 13, 11, 12, 14], 9: [7, 5, 4, 11, 12, 14]})}), 8: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe46b32e0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3370>, {0: [8, 1], 1: [8, 7, 5, 4, 2, 1], 2: [8, 7, 5, 4, 2, 3, 1], 3: [8, 9, 12, 11, 4, 2, 1], 4: [8, 9, 13, 11, 4, 2, 1], 5: [8, 7, 5, 6, 3, 1], 6: [8, 9, 10, 6, 3, 1], 7: [8, 9, 13, 14, 12, 11, 4, 2, 1], 8: [8, 9, 10, 7, 5, 4, 2, 1], 9: [8, 9, 12, 14, 13, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3400>, {0: [8, 7, 5, 4, 2], 1: [8, 1, 2], 2: [8, 9, 12, 11, 4, 2], 3: [8, 1, 3, 2], 4: [8, 9, 13, 11, 4, 2], 5: [8, 9, 10, 7, 5, 4, 2], 6: [8, 9, 13, 14, 12, 11, 4, 2], 7: [8, 7, 5, 6, 3, 2], 8: [8, 9, 12, 14, 13, 11, 4, 2], 9: [8, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3490>, {0: [8, 7, 5, 4, 2, 3], 1: [8, 1, 3], 2: [8, 1, 2, 3], 3: [8, 7, 5, 6, 3], 4: [8, 9, 10, 6, 3], 5: [8, 9, 13, 14, 6, 3], 6: [8, 7, 10, 6, 3], 7: [8, 9, 12, 14, 6, 3], 8: [8, 9, 12, 11, 4, 2, 3], 9: [8, 9, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3520>, {0: [8, 7, 5, 4], 1: [8, 9, 12, 11, 4], 2: [8, 9, 13, 11, 4], 3: [8, 9, 10, 7, 5, 4], 4: [8, 9, 13, 14, 12, 11, 4], 5: [8, 1, 2, 4], 6: [8, 9, 12, 14, 13, 11, 4], 7: [8, 9, 10, 6, 5, 4], 8: [8, 9, 13, 14, 6, 5, 4], 9: [8, 7, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b35b0>, {0: [8, 7, 5], 1: [8, 9, 10, 7, 5], 2: [8, 9, 10, 6, 5], 3: [8, 9, 13, 14, 6, 5], 4: [8, 9, 12, 11, 4, 5], 5: [8, 7, 10, 6, 5], 6: [8, 9, 13, 11, 4, 5], 7: [8, 9, 12, 14, 6, 5], 8: [8, 9, 13, 14, 12, 11, 4, 5], 9: [8, 1, 2, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3640>, {0: [8, 7, 5, 6], 1: [8, 9, 10, 6], 2: [8, 9, 13, 14, 6], 3: [8, 7, 10, 6], 4: [8, 9, 12, 14, 6], 5: [8, 9, 12, 11, 13, 14, 6], 6: [8, 9, 13, 11, 12, 14, 6], 7: [8, 9, 10, 7, 5, 6], 8: [8, 7, 5, 4, 2, 3, 6], 9: [8, 7, 10, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b36d0>, {0: [8, 7], 1: [8, 9, 10, 7], 2: [8, 9, 10, 6, 5, 7], 3: [8, 9, 13, 14, 6, 5, 7], 4: [8, 9, 12, 11, 4, 5, 7], 5: [8, 9, 13, 11, 4, 5, 7], 6: [8, 9, 12, 14, 6, 5, 7], 7: [8, 9, 13, 14, 12, 11, 4, 5, 7], 8: [8, 1, 2, 4, 5, 7], 9: [8, 9, 13, 14, 6, 10, 7]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3760>, {0: [8, 9], 1: [8, 7, 10, 9], 2: [8, 7, 5, 6, 10, 9], 3: [8, 7, 5, 4, 11, 12, 9], 4: [8, 7, 5, 6, 14, 13, 9], 5: [8, 7, 5, 4, 11, 13, 9], 6: [8, 7, 5, 6, 14, 12, 9], 7: [8, 7, 5, 4, 11, 12, 14, 13, 9], 8: [8, 7, 10, 6, 14, 13, 9], 9: [8, 7, 5, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b37f0>, {0: [8, 9, 10], 1: [8, 7, 10], 2: [8, 7, 5, 6, 10], 3: [8, 9, 13, 14, 6, 10], 4: [8, 9, 12, 14, 6, 10], 5: [8, 9, 12, 11, 13, 14, 6, 10], 6: [8, 7, 5, 4, 11, 12, 9, 10], 7: [8, 7, 5, 6, 14, 13, 9, 10], 8: [8, 9, 13, 11, 12, 14, 6, 10], 9: [8, 7, 5, 4, 11, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3880>, {0: [8, 9, 12, 11], 1: [8, 9, 13, 11], 2: [8, 9, 13, 14, 12, 11], 3: [8, 9, 12, 14, 13, 11], 4: [8, 7, 10, 9, 12, 11], 5: [8, 7, 5, 4, 11], 6: [8, 7, 10, 9, 13, 11], 7: [8, 7, 10, 9, 13, 14, 12, 11], 8: [8, 7, 10, 9, 12, 14, 13, 11], 9: [8, 9, 10, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3910>, {0: [8, 9, 12], 1: [8, 9, 13, 14, 12], 2: [8, 9, 13, 11, 12], 3: [8, 7, 10, 9, 12], 4: [8, 7, 10, 9, 13, 14, 12], 5: [8, 7, 5, 4, 11, 12], 6: [8, 7, 10, 9, 13, 11, 12], 7: [8, 9, 10, 6, 14, 12], 8: [8, 7, 5, 6, 10, 9, 12], 9: [8, 7, 5, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b39a0>, {0: [8, 9, 13], 1: [8, 9, 12, 14, 13], 2: [8, 9, 12, 11, 13], 3: [8, 7, 10, 9, 13], 4: [8, 7, 10, 9, 12, 14, 13], 5: [8, 9, 10, 6, 14, 13], 6: [8, 7, 5, 6, 14, 13], 7: [8, 7, 10, 9, 12, 11, 13], 8: [8, 7, 5, 4, 11, 13], 9: [8, 7, 5, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3a30>, {0: [8, 9, 13, 14], 1: [8, 9, 12, 14], 2: [8, 9, 12, 11, 13, 14], 3: [8, 9, 13, 11, 12, 14], 4: [8, 7, 10, 9, 13, 14], 5: [8, 7, 10, 9, 12, 14], 6: [8, 9, 10, 6, 14], 7: [8, 7, 5, 6, 14], 8: [8, 7, 10, 9, 12, 11, 13, 14], 9: [8, 7, 10, 9, 13, 11, 12, 14]})}), 9: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe46b3ac0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3b50>, {0: [9, 8, 1], 1: [9, 8, 7, 5, 4, 2, 1], 2: [9, 12, 11, 4, 2, 1], 3: [9, 13, 11, 4, 2, 1], 4: [9, 10, 6, 3, 1], 5: [9, 13, 14, 12, 11, 4, 2, 1], 6: [9, 10, 7, 5, 4, 2, 1], 7: [9, 12, 14, 13, 11, 4, 2, 1], 8: [9, 10, 6, 3, 2, 1], 9: [9, 10, 7, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3be0>, {0: [9, 8, 7, 5, 4, 2], 1: [9, 12, 11, 4, 2], 2: [9, 13, 11, 4, 2], 3: [9, 10, 7, 5, 4, 2], 4: [9, 13, 14, 12, 11, 4, 2], 5: [9, 8, 1, 2], 6: [9, 12, 14, 13, 11, 4, 2], 7: [9, 10, 6, 3, 2], 8: [9, 10, 6, 5, 4, 2], 9: [9, 13, 14, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3c70>, {0: [9, 10, 6, 3], 1: [9, 13, 14, 6, 3], 2: [9, 8, 7, 5, 4, 2, 3], 3: [9, 12, 14, 6, 3], 4: [9, 12, 11, 4, 2, 3], 5: [9, 13, 11, 4, 2, 3], 6: [9, 10, 7, 5, 4, 2, 3], 7: [9, 13, 14, 12, 11, 4, 2, 3], 8: [9, 8, 1, 3], 9: [9, 12, 14, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3d00>, {0: [9, 8, 7, 5, 4], 1: [9, 12, 11, 4], 2: [9, 13, 11, 4], 3: [9, 10, 7, 5, 4], 4: [9, 13, 14, 12, 11, 4], 5: [9, 12, 14, 13, 11, 4], 6: [9, 10, 6, 5, 4], 7: [9, 13, 14, 6, 5, 4], 8: [9, 12, 14, 6, 5, 4], 9: [9, 8, 1, 2, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3d90>, {0: [9, 8, 7, 5], 1: [9, 10, 7, 5], 2: [9, 10, 6, 5], 3: [9, 13, 14, 6, 5], 4: [9, 12, 11, 4, 5], 5: [9, 13, 11, 4, 5], 6: [9, 12, 14, 6, 5], 7: [9, 13, 14, 12, 11, 4, 5], 8: [9, 12, 14, 13, 11, 4, 5], 9: [9, 12, 11, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3e20>, {0: [9, 10, 6], 1: [9, 13, 14, 6], 2: [9, 12, 14, 6], 3: [9, 8, 7, 5, 6], 4: [9, 12, 11, 13, 14, 6], 5: [9, 13, 11, 12, 14, 6], 6: [9, 10, 7, 5, 6], 7: [9, 8, 7, 10, 6], 8: [9, 12, 11, 4, 5, 6], 9: [9, 13, 11, 4, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3eb0>, {0: [9, 8, 7], 1: [9, 10, 7], 2: [9, 10, 6, 5, 7], 3: [9, 13, 14, 6, 5, 7], 4: [9, 12, 11, 4, 5, 7], 5: [9, 13, 11, 4, 5, 7], 6: [9, 12, 14, 6, 5, 7], 7: [9, 13, 14, 12, 11, 4, 5, 7], 8: [9, 13, 14, 6, 10, 7], 9: [9, 12, 14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe46b3f40>, {0: [9, 8], 1: [9, 10, 7, 8], 2: [9, 10, 6, 5, 7, 8], 3: [9, 13, 14, 6, 5, 7, 8], 4: [9, 12, 11, 4, 5, 7, 8], 5: [9, 13, 11, 4, 5, 7, 8], 6: [9, 12, 14, 6, 5, 7, 8], 7: [9, 13, 14, 12, 11, 4, 5, 7, 8], 8: [9, 13, 14, 6, 10, 7, 8], 9: [9, 12, 14, 13, 11, 4, 5, 7, 8]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018040>, {0: [9, 10], 1: [9, 8, 7, 10], 2: [9, 13, 14, 6, 10], 3: [9, 12, 14, 6, 10], 4: [9, 8, 7, 5, 6, 10], 5: [9, 12, 11, 13, 14, 6, 10], 6: [9, 13, 11, 12, 14, 6, 10], 7: [9, 13, 14, 6, 5, 7, 10], 8: [9, 12, 11, 4, 5, 7, 10], 9: [9, 12, 14, 6, 5, 7, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50180d0>, {0: [9, 12, 11], 1: [9, 13, 11], 2: [9, 13, 14, 12, 11], 3: [9, 12, 14, 13, 11], 4: [9, 10, 6, 14, 13, 11], 5: [9, 10, 6, 14, 12, 11], 6: [9, 8, 7, 5, 4, 11], 7: [9, 10, 7, 5, 4, 11], 8: [9, 10, 6, 5, 4, 11], 9: [9, 13, 14, 6, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018160>, {0: [9, 12], 1: [9, 13, 14, 12], 2: [9, 13, 11, 12], 3: [9, 10, 6, 14, 12], 4: [9, 10, 6, 14, 13, 11, 12], 5: [9, 8, 7, 5, 4, 11, 12], 6: [9, 8, 7, 5, 6, 14, 12], 7: [9, 10, 7, 5, 4, 11, 12], 8: [9, 8, 7, 5, 4, 11, 13, 14, 12], 9: [9, 8, 7, 10, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50181f0>, {0: [9, 13], 1: [9, 12, 14, 13], 2: [9, 12, 11, 13], 3: [9, 10, 6, 14, 13], 4: [9, 8, 7, 5, 6, 14, 13], 5: [9, 10, 6, 14, 12, 11, 13], 6: [9, 8, 7, 5, 4, 11, 13], 7: [9, 8, 7, 5, 4, 11, 12, 14, 13], 8: [9, 10, 7, 5, 6, 14, 13], 9: [9, 8, 7, 10, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018280>, {0: [9, 13, 14], 1: [9, 12, 14], 2: [9, 12, 11, 13, 14], 3: [9, 13, 11, 12, 14], 4: [9, 10, 6, 14], 5: [9, 8, 7, 5, 6, 14], 6: [9, 8, 7, 5, 4, 11, 12, 14], 7: [9, 8, 7, 5, 4, 11, 13, 14], 8: [9, 10, 7, 5, 6, 14], 9: [9, 8, 7, 10, 6, 14]})}), 10: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe5018310>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50183a0>, {0: [10, 9, 8, 1], 1: [10, 6, 3, 1], 2: [10, 7, 5, 4, 2, 1], 3: [10, 6, 3, 2, 1], 4: [10, 7, 8, 1], 5: [10, 6, 5, 4, 2, 1], 6: [10, 9, 8, 7, 5, 4, 2, 1], 7: [10, 9, 12, 11, 4, 2, 1], 8: [10, 7, 5, 4, 2, 3, 1], 9: [10, 9, 13, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018430>, {0: [10, 7, 5, 4, 2], 1: [10, 6, 3, 2], 2: [10, 6, 5, 4, 2], 3: [10, 9, 8, 7, 5, 4, 2], 4: [10, 9, 12, 11, 4, 2], 5: [10, 9, 13, 11, 4, 2], 6: [10, 9, 13, 14, 12, 11, 4, 2], 7: [10, 9, 8, 1, 2], 8: [10, 9, 12, 14, 13, 11, 4, 2], 9: [10, 6, 3, 1, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50184c0>, {0: [10, 6, 3], 1: [10, 7, 5, 4, 2, 3], 2: [10, 6, 5, 4, 2, 3], 3: [10, 9, 13, 14, 6, 3], 4: [10, 9, 8, 7, 5, 4, 2, 3], 5: [10, 7, 5, 6, 3], 6: [10, 9, 12, 14, 6, 3], 7: [10, 9, 12, 11, 4, 2, 3], 8: [10, 9, 13, 11, 4, 2, 3], 9: [10, 9, 13, 14, 12, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018550>, {0: [10, 7, 5, 4], 1: [10, 6, 5, 4], 2: [10, 9, 8, 7, 5, 4], 3: [10, 9, 12, 11, 4], 4: [10, 9, 13, 11, 4], 5: [10, 9, 13, 14, 12, 11, 4], 6: [10, 6, 3, 2, 4], 7: [10, 9, 12, 14, 13, 11, 4], 8: [10, 9, 13, 14, 6, 5, 4], 9: [10, 9, 12, 14, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50185e0>, {0: [10, 7, 5], 1: [10, 6, 5], 2: [10, 9, 8, 7, 5], 3: [10, 9, 13, 14, 6, 5], 4: [10, 9, 12, 11, 4, 5], 5: [10, 9, 13, 11, 4, 5], 6: [10, 9, 12, 14, 6, 5], 7: [10, 9, 13, 14, 12, 11, 4, 5], 8: [10, 6, 3, 2, 4, 5], 9: [10, 9, 12, 14, 13, 11, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018670>, {0: [10, 6], 1: [10, 9, 13, 14, 6], 2: [10, 7, 5, 6], 3: [10, 9, 12, 14, 6], 4: [10, 9, 8, 7, 5, 6], 5: [10, 9, 12, 11, 13, 14, 6], 6: [10, 9, 13, 11, 12, 14, 6], 7: [10, 7, 8, 9, 13, 14, 6], 8: [10, 7, 8, 9, 12, 14, 6], 9: [10, 9, 12, 11, 4, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018700>, {0: [10, 7], 1: [10, 9, 8, 7], 2: [10, 6, 5, 7], 3: [10, 9, 13, 14, 6, 5, 7], 4: [10, 6, 14, 13, 9, 8, 7], 5: [10, 9, 12, 11, 4, 5, 7], 6: [10, 9, 13, 11, 4, 5, 7], 7: [10, 6, 14, 12, 9, 8, 7], 8: [10, 9, 12, 14, 6, 5, 7], 9: [10, 9, 13, 14, 12, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018790>, {0: [10, 9, 8], 1: [10, 7, 8], 2: [10, 6, 5, 7, 8], 3: [10, 6, 14, 13, 9, 8], 4: [10, 6, 14, 12, 9, 8], 5: [10, 6, 14, 13, 11, 12, 9, 8], 6: [10, 9, 13, 14, 6, 5, 7, 8], 7: [10, 6, 14, 12, 11, 13, 9, 8], 8: [10, 9, 12, 11, 4, 5, 7, 8], 9: [10, 9, 13, 11, 4, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018820>, {0: [10, 9], 1: [10, 7, 8, 9], 2: [10, 6, 14, 13, 9], 3: [10, 6, 14, 12, 9], 4: [10, 6, 5, 7, 8, 9], 5: [10, 6, 14, 13, 11, 12, 9], 6: [10, 6, 14, 12, 11, 13, 9], 7: [10, 7, 5, 4, 11, 12, 9], 8: [10, 7, 5, 6, 14, 13, 9], 9: [10, 7, 5, 4, 11, 13, 9]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50188b0>, {0: [10, 9, 12, 11], 1: [10, 9, 13, 11], 2: [10, 9, 13, 14, 12, 11], 3: [10, 9, 12, 14, 13, 11], 4: [10, 6, 14, 13, 11], 5: [10, 7, 8, 9, 12, 11], 6: [10, 6, 14, 12, 11], 7: [10, 7, 8, 9, 13, 11], 8: [10, 6, 14, 13, 9, 12, 11], 9: [10, 7, 8, 9, 13, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018940>, {0: [10, 9, 12], 1: [10, 9, 13, 14, 12], 2: [10, 9, 13, 11, 12], 3: [10, 7, 8, 9, 12], 4: [10, 6, 14, 12], 5: [10, 7, 8, 9, 13, 14, 12], 6: [10, 6, 14, 13, 9, 12], 7: [10, 6, 14, 13, 11, 12], 8: [10, 7, 8, 9, 13, 11, 12], 9: [10, 6, 5, 7, 8, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50189d0>, {0: [10, 9, 13], 1: [10, 9, 12, 14, 13], 2: [10, 9, 12, 11, 13], 3: [10, 6, 14, 13], 4: [10, 7, 8, 9, 13], 5: [10, 7, 8, 9, 12, 14, 13], 6: [10, 6, 14, 12, 9, 13], 7: [10, 7, 8, 9, 12, 11, 13], 8: [10, 6, 14, 12, 11, 13], 9: [10, 6, 5, 7, 8, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018a60>, {0: [10, 9, 13, 14], 1: [10, 9, 12, 14], 2: [10, 9, 12, 11, 13, 14], 3: [10, 9, 13, 11, 12, 14], 4: [10, 6, 14], 5: [10, 7, 8, 9, 13, 14], 6: [10, 7, 8, 9, 12, 14], 7: [10, 7, 8, 9, 12, 11, 13, 14], 8: [10, 6, 5, 7, 8, 9, 13, 14], 9: [10, 7, 8, 9, 13, 11, 12, 14]})}), 11: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe5018af0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018b80>, {0: [11, 4, 2, 1], 1: [11, 12, 9, 8, 1], 2: [11, 13, 9, 8, 1], 3: [11, 12, 14, 13, 9, 8, 1], 4: [11, 13, 14, 12, 9, 8, 1], 5: [11, 4, 2, 3, 1], 6: [11, 12, 9, 8, 7, 5, 4, 2, 1], 7: [11, 13, 9, 8, 7, 5, 4, 2, 1], 8: [11, 12, 14, 13, 9, 8, 7, 5, 4, 2, 1], 9: [11, 12, 9, 10, 6, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018c10>, {0: [11, 4, 2], 1: [11, 12, 9, 8, 7, 5, 4, 2], 2: [11, 13, 9, 8, 7, 5, 4, 2], 3: [11, 12, 14, 13, 9, 8, 7, 5, 4, 2], 4: [11, 12, 9, 10, 7, 5, 4, 2], 5: [11, 13, 14, 12, 9, 8, 7, 5, 4, 2], 6: [11, 12, 9, 8, 1, 2], 7: [11, 13, 9, 10, 7, 5, 4, 2], 8: [11, 12, 14, 6, 3, 2], 9: [11, 12, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018ca0>, {0: [11, 4, 2, 3], 1: [11, 12, 14, 6, 3], 2: [11, 13, 14, 6, 3], 3: [11, 12, 9, 10, 6, 3], 4: [11, 13, 9, 10, 6, 3], 5: [11, 12, 14, 13, 9, 10, 6, 3], 6: [11, 12, 9, 13, 14, 6, 3], 7: [11, 12, 9, 8, 7, 5, 4, 2, 3], 8: [11, 13, 14, 12, 9, 10, 6, 3], 9: [11, 13, 9, 8, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018d30>, {0: [11, 4], 1: [11, 12, 9, 8, 7, 5, 4], 2: [11, 13, 9, 8, 7, 5, 4], 3: [11, 12, 14, 13, 9, 8, 7, 5, 4], 4: [11, 12, 9, 10, 7, 5, 4], 5: [11, 13, 14, 12, 9, 8, 7, 5, 4], 6: [11, 13, 9, 10, 7, 5, 4], 7: [11, 12, 14, 6, 5, 4], 8: [11, 12, 9, 10, 6, 5, 4], 9: [11, 13, 14, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018dc0>, {0: [11, 4, 5], 1: [11, 12, 9, 8, 7, 5], 2: [11, 13, 9, 8, 7, 5], 3: [11, 12, 14, 13, 9, 8, 7, 5], 4: [11, 12, 9, 10, 7, 5], 5: [11, 13, 14, 12, 9, 8, 7, 5], 6: [11, 13, 9, 10, 7, 5], 7: [11, 12, 14, 6, 5], 8: [11, 12, 9, 10, 6, 5], 9: [11, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018e50>, {0: [11, 12, 14, 6], 1: [11, 13, 14, 6], 2: [11, 12, 9, 10, 6], 3: [11, 13, 9, 10, 6], 4: [11, 12, 14, 13, 9, 10, 6], 5: [11, 12, 9, 13, 14, 6], 6: [11, 13, 14, 12, 9, 10, 6], 7: [11, 13, 9, 12, 14, 6], 8: [11, 4, 5, 6], 9: [11, 12, 9, 8, 7, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018ee0>, {0: [11, 12, 9, 8, 7], 1: [11, 13, 9, 8, 7], 2: [11, 12, 14, 13, 9, 8, 7], 3: [11, 12, 9, 10, 7], 4: [11, 13, 14, 12, 9, 8, 7], 5: [11, 4, 5, 7], 6: [11, 13, 9, 10, 7], 7: [11, 12, 14, 13, 9, 10, 7], 8: [11, 13, 14, 12, 9, 10, 7], 9: [11, 12, 14, 6, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5018f70>, {0: [11, 12, 9, 8], 1: [11, 13, 9, 8], 2: [11, 12, 14, 13, 9, 8], 3: [11, 13, 14, 12, 9, 8], 4: [11, 12, 9, 10, 7, 8], 5: [11, 4, 5, 7, 8], 6: [11, 13, 9, 10, 7, 8], 7: [11, 12, 14, 13, 9, 10, 7, 8], 8: [11, 13, 14, 12, 9, 10, 7, 8], 9: [11, 12, 14, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019000>, {0: [11, 12, 9], 1: [11, 13, 9], 2: [11, 12, 14, 13, 9], 3: [11, 13, 14, 12, 9], 4: [11, 12, 14, 6, 10, 9], 5: [11, 13, 14, 6, 10, 9], 6: [11, 4, 5, 7, 8, 9], 7: [11, 4, 5, 7, 10, 9], 8: [11, 4, 5, 6, 10, 9], 9: [11, 12, 14, 6, 5, 7, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019090>, {0: [11, 12, 9, 10], 1: [11, 13, 9, 10], 2: [11, 12, 14, 13, 9, 10], 3: [11, 13, 14, 12, 9, 10], 4: [11, 12, 9, 8, 7, 10], 5: [11, 12, 14, 6, 10], 6: [11, 13, 14, 6, 10], 7: [11, 13, 9, 8, 7, 10], 8: [11, 12, 14, 13, 9, 8, 7, 10], 9: [11, 12, 9, 13, 14, 6, 10]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019120>, {0: [11, 12], 1: [11, 13, 14, 12], 2: [11, 13, 9, 12], 3: [11, 13, 14, 6, 10, 9, 12], 4: [11, 4, 5, 7, 8, 9, 12], 5: [11, 13, 9, 10, 6, 14, 12], 6: [11, 4, 5, 7, 8, 9, 13, 14, 12], 7: [11, 4, 5, 7, 10, 9, 12], 8: [11, 4, 5, 6, 10, 9, 12], 9: [11, 4, 5, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50191b0>, {0: [11, 13], 1: [11, 12, 14, 13], 2: [11, 12, 9, 13], 3: [11, 12, 9, 10, 6, 14, 13], 4: [11, 12, 14, 6, 10, 9, 13], 5: [11, 4, 5, 7, 8, 9, 13], 6: [11, 4, 5, 7, 8, 9, 12, 14, 13], 7: [11, 4, 5, 7, 10, 9, 13], 8: [11, 4, 5, 6, 14, 13], 9: [11, 4, 5, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019240>, {0: [11, 12, 14], 1: [11, 13, 14], 2: [11, 12, 9, 13, 14], 3: [11, 13, 9, 12, 14], 4: [11, 12, 9, 10, 6, 14], 5: [11, 13, 9, 10, 6, 14], 6: [11, 4, 5, 7, 8, 9, 13, 14], 7: [11, 4, 5, 7, 8, 9, 12, 14], 8: [11, 4, 5, 6, 14], 9: [11, 4, 5, 7, 10, 9, 13, 14]})}), 12: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe50192d0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019360>, {0: [12, 9, 8, 1], 1: [12, 14, 13, 9, 8, 1], 2: [12, 11, 4, 2, 1], 3: [12, 9, 8, 7, 5, 4, 2, 1], 4: [12, 11, 13, 9, 8, 1], 5: [12, 14, 13, 11, 4, 2, 1], 6: [12, 9, 13, 11, 4, 2, 1], 7: [12, 14, 13, 9, 8, 7, 5, 4, 2, 1], 8: [12, 14, 6, 3, 1], 9: [12, 11, 4, 2, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50193f0>, {0: [12, 11, 4, 2], 1: [12, 9, 8, 7, 5, 4, 2], 2: [12, 14, 13, 11, 4, 2], 3: [12, 9, 13, 11, 4, 2], 4: [12, 14, 13, 9, 8, 7, 5, 4, 2], 5: [12, 9, 10, 7, 5, 4, 2], 6: [12, 9, 8, 1, 2], 7: [12, 14, 6, 3, 2], 8: [12, 9, 10, 6, 3, 2], 9: [12, 14, 6, 5, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019480>, {0: [12, 14, 6, 3], 1: [12, 9, 10, 6, 3], 2: [12, 11, 4, 2, 3], 3: [12, 14, 13, 9, 10, 6, 3], 4: [12, 9, 13, 14, 6, 3], 5: [12, 9, 8, 7, 5, 4, 2, 3], 6: [12, 14, 13, 11, 4, 2, 3], 7: [12, 9, 13, 11, 4, 2, 3], 8: [12, 14, 13, 9, 8, 7, 5, 4, 2, 3], 9: [12, 9, 10, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019510>, {0: [12, 11, 4], 1: [12, 9, 8, 7, 5, 4], 2: [12, 14, 13, 11, 4], 3: [12, 9, 13, 11, 4], 4: [12, 14, 13, 9, 8, 7, 5, 4], 5: [12, 9, 10, 7, 5, 4], 6: [12, 14, 6, 5, 4], 7: [12, 9, 10, 6, 5, 4], 8: [12, 14, 13, 9, 10, 7, 5, 4], 9: [12, 11, 13, 9, 8, 7, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50195a0>, {0: [12, 9, 8, 7, 5], 1: [12, 14, 13, 9, 8, 7, 5], 2: [12, 9, 10, 7, 5], 3: [12, 11, 4, 5], 4: [12, 14, 6, 5], 5: [12, 9, 10, 6, 5], 6: [12, 14, 13, 9, 10, 7, 5], 7: [12, 14, 13, 11, 4, 5], 8: [12, 9, 13, 14, 6, 5], 9: [12, 11, 13, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019630>, {0: [12, 14, 6], 1: [12, 9, 10, 6], 2: [12, 14, 13, 9, 10, 6], 3: [12, 9, 13, 14, 6], 4: [12, 11, 13, 14, 6], 5: [12, 11, 13, 9, 10, 6], 6: [12, 9, 8, 7, 5, 6], 7: [12, 14, 13, 9, 8, 7, 5, 6], 8: [12, 9, 10, 7, 5, 6], 9: [12, 9, 8, 7, 10, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50196c0>, {0: [12, 9, 8, 7], 1: [12, 14, 13, 9, 8, 7], 2: [12, 9, 10, 7], 3: [12, 14, 13, 9, 10, 7], 4: [12, 11, 13, 9, 8, 7], 5: [12, 11, 4, 5, 7], 6: [12, 11, 13, 9, 10, 7], 7: [12, 14, 6, 5, 7], 8: [12, 9, 10, 6, 5, 7], 9: [12, 14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019750>, {0: [12, 9, 8], 1: [12, 14, 13, 9, 8], 2: [12, 11, 13, 9, 8], 3: [12, 9, 10, 7, 8], 4: [12, 14, 13, 9, 10, 7, 8], 5: [12, 11, 4, 5, 7, 8], 6: [12, 11, 13, 9, 10, 7, 8], 7: [12, 14, 6, 5, 7, 8], 8: [12, 9, 10, 6, 5, 7, 8], 9: [12, 14, 6, 10, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe50197e0>, {0: [12, 9], 1: [12, 14, 13, 9], 2: [12, 11, 13, 9], 3: [12, 14, 6, 10, 9], 4: [12, 11, 13, 14, 6, 10, 9], 5: [12, 11, 4, 5, 7, 8, 9], 6: [12, 14, 6, 5, 7, 8, 9], 7: [12, 14, 13, 11, 4, 5, 7, 8, 9], 8: [12, 11, 4, 5, 7, 10, 9], 9: [12, 14, 6, 10, 7, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019870>, {0: [12, 9, 10], 1: [12, 14, 13, 9, 10], 2: [12, 11, 13, 9, 10], 3: [12, 9, 8, 7, 10], 4: [12, 14, 6, 10], 5: [12, 14, 13, 9, 8, 7, 10], 6: [12, 9, 13, 14, 6, 10], 7: [12, 11, 13, 14, 6, 10], 8: [12, 11, 13, 9, 8, 7, 10], 9: [12, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019900>, {0: [12, 11], 1: [12, 14, 13, 11], 2: [12, 9, 13, 11], 3: [12, 9, 10, 6, 14, 13, 11], 4: [12, 14, 6, 10, 9, 13, 11], 5: [12, 9, 8, 7, 5, 4, 11], 6: [12, 14, 13, 9, 8, 7, 5, 4, 11], 7: [12, 9, 10, 7, 5, 4, 11], 8: [12, 9, 10, 6, 5, 4, 11], 9: [12, 14, 6, 5, 4, 11]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019990>, {0: [12, 14, 13], 1: [12, 9, 13], 2: [12, 11, 13], 3: [12, 9, 10, 6, 14, 13], 4: [12, 14, 6, 10, 9, 13], 5: [12, 11, 4, 5, 7, 8, 9, 13], 6: [12, 9, 8, 7, 5, 6, 14, 13], 7: [12, 14, 6, 5, 7, 8, 9, 13], 8: [12, 9, 8, 7, 5, 4, 11, 13], 9: [12, 9, 10, 7, 5, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019a20>, {0: [12, 14], 1: [12, 9, 13, 14], 2: [12, 11, 13, 14], 3: [12, 9, 10, 6, 14], 4: [12, 11, 13, 9, 10, 6, 14], 5: [12, 9, 8, 7, 5, 6, 14], 6: [12, 11, 4, 5, 7, 8, 9, 13, 14], 7: [12, 9, 8, 7, 5, 4, 11, 13, 14], 8: [12, 9, 10, 7, 5, 6, 14], 9: [12, 9, 8, 7, 10, 6, 14]})}), 13: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe5019ab0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019b40>, {0: [13, 9, 8, 1], 1: [13, 14, 12, 9, 8, 1], 2: [13, 11, 4, 2, 1], 3: [13, 9, 8, 7, 5, 4, 2, 1], 4: [13, 14, 12, 11, 4, 2, 1], 5: [13, 11, 12, 9, 8, 1], 6: [13, 9, 12, 11, 4, 2, 1], 7: [13, 14, 6, 3, 1], 8: [13, 14, 12, 9, 8, 7, 5, 4, 2, 1], 9: [13, 9, 10, 6, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019bd0>, {0: [13, 11, 4, 2], 1: [13, 14, 12, 11, 4, 2], 2: [13, 9, 8, 7, 5, 4, 2], 3: [13, 9, 12, 11, 4, 2], 4: [13, 14, 12, 9, 8, 7, 5, 4, 2], 5: [13, 14, 6, 3, 2], 6: [13, 9, 10, 7, 5, 4, 2], 7: [13, 9, 8, 1, 2], 8: [13, 14, 6, 5, 4, 2], 9: [13, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019c60>, {0: [13, 14, 6, 3], 1: [13, 9, 10, 6, 3], 2: [13, 11, 4, 2, 3], 3: [13, 14, 12, 9, 10, 6, 3], 4: [13, 9, 8, 7, 5, 4, 2, 3], 5: [13, 14, 12, 11, 4, 2, 3], 6: [13, 9, 12, 14, 6, 3], 7: [13, 9, 12, 11, 4, 2, 3], 8: [13, 14, 12, 9, 8, 7, 5, 4, 2, 3], 9: [13, 9, 10, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019cf0>, {0: [13, 11, 4], 1: [13, 14, 12, 11, 4], 2: [13, 9, 8, 7, 5, 4], 3: [13, 9, 12, 11, 4], 4: [13, 14, 12, 9, 8, 7, 5, 4], 5: [13, 9, 10, 7, 5, 4], 6: [13, 14, 6, 5, 4], 7: [13, 9, 10, 6, 5, 4], 8: [13, 14, 12, 9, 10, 7, 5, 4], 9: [13, 11, 12, 9, 8, 7, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019d80>, {0: [13, 9, 8, 7, 5], 1: [13, 14, 12, 9, 8, 7, 5], 2: [13, 9, 10, 7, 5], 3: [13, 14, 6, 5], 4: [13, 11, 4, 5], 5: [13, 9, 10, 6, 5], 6: [13, 14, 12, 9, 10, 7, 5], 7: [13, 14, 12, 11, 4, 5], 8: [13, 9, 12, 11, 4, 5], 9: [13, 11, 12, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019e10>, {0: [13, 14, 6], 1: [13, 9, 10, 6], 2: [13, 14, 12, 9, 10, 6], 3: [13, 9, 12, 14, 6], 4: [13, 11, 12, 14, 6], 5: [13, 11, 12, 9, 10, 6], 6: [13, 9, 8, 7, 5, 6], 7: [13, 14, 12, 9, 8, 7, 5, 6], 8: [13, 9, 10, 7, 5, 6], 9: [13, 9, 8, 7, 10, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019ea0>, {0: [13, 9, 8, 7], 1: [13, 14, 12, 9, 8, 7], 2: [13, 9, 10, 7], 3: [13, 14, 12, 9, 10, 7], 4: [13, 11, 12, 9, 8, 7], 5: [13, 14, 6, 5, 7], 6: [13, 11, 12, 9, 10, 7], 7: [13, 9, 10, 6, 5, 7], 8: [13, 11, 4, 5, 7], 9: [13, 14, 12, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019f30>, {0: [13, 9, 8], 1: [13, 14, 12, 9, 8], 2: [13, 11, 12, 9, 8], 3: [13, 9, 10, 7, 8], 4: [13, 14, 12, 9, 10, 7, 8], 5: [13, 14, 6, 5, 7, 8], 6: [13, 11, 12, 9, 10, 7, 8], 7: [13, 14, 6, 10, 9, 8], 8: [13, 11, 4, 5, 7, 8], 9: [13, 9, 10, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe5019fc0>, {0: [13, 9], 1: [13, 14, 12, 9], 2: [13, 11, 12, 9], 3: [13, 14, 6, 10, 9], 4: [13, 11, 12, 14, 6, 10, 9], 5: [13, 14, 6, 5, 7, 8, 9], 6: [13, 11, 4, 5, 7, 8, 9], 7: [13, 14, 12, 11, 4, 5, 7, 8, 9], 8: [13, 14, 6, 10, 7, 8, 9], 9: [13, 14, 6, 5, 7, 10, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a050>, {0: [13, 9, 10], 1: [13, 14, 12, 9, 10], 2: [13, 11, 12, 9, 10], 3: [13, 14, 6, 10], 4: [13, 9, 8, 7, 10], 5: [13, 14, 12, 9, 8, 7, 10], 6: [13, 9, 12, 14, 6, 10], 7: [13, 11, 12, 14, 6, 10], 8: [13, 11, 12, 9, 8, 7, 10], 9: [13, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a0e0>, {0: [13, 11], 1: [13, 14, 12, 11], 2: [13, 9, 12, 11], 3: [13, 14, 6, 10, 9, 12, 11], 4: [13, 9, 10, 6, 14, 12, 11], 5: [13, 9, 8, 7, 5, 4, 11], 6: [13, 14, 12, 9, 8, 7, 5, 4, 11], 7: [13, 9, 10, 7, 5, 4, 11], 8: [13, 14, 6, 5, 4, 11], 9: [13, 9, 10, 6, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a170>, {0: [13, 14, 12], 1: [13, 9, 12], 2: [13, 11, 12], 3: [13, 14, 6, 10, 9, 12], 4: [13, 9, 10, 6, 14, 12], 5: [13, 14, 6, 5, 7, 8, 9, 12], 6: [13, 9, 8, 7, 5, 4, 11, 12], 7: [13, 11, 4, 5, 7, 8, 9, 12], 8: [13, 9, 8, 7, 5, 6, 14, 12], 9: [13, 14, 6, 10, 7, 8, 9, 12]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a200>, {0: [13, 14], 1: [13, 9, 12, 14], 2: [13, 11, 12, 14], 3: [13, 9, 10, 6, 14], 4: [13, 11, 12, 9, 10, 6, 14], 5: [13, 9, 8, 7, 5, 6, 14], 6: [13, 9, 8, 7, 5, 4, 11, 12, 14], 7: [13, 11, 4, 5, 7, 8, 9, 12, 14], 8: [13, 9, 10, 7, 5, 6, 14], 9: [13, 9, 8, 7, 10, 6, 14]})}), 14: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fcbe501a290>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a320>, {0: [14, 13, 9, 8, 1], 1: [14, 12, 9, 8, 1], 2: [14, 13, 11, 4, 2, 1], 3: [14, 12, 11, 4, 2, 1], 4: [14, 13, 9, 8, 7, 5, 4, 2, 1], 5: [14, 13, 11, 12, 9, 8, 1], 6: [14, 13, 9, 12, 11, 4, 2, 1], 7: [14, 6, 3, 1], 8: [14, 12, 9, 8, 7, 5, 4, 2, 1], 9: [14, 12, 11, 13, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a3b0>, {0: [14, 13, 11, 4, 2], 1: [14, 12, 11, 4, 2], 2: [14, 13, 9, 8, 7, 5, 4, 2], 3: [14, 12, 9, 8, 7, 5, 4, 2], 4: [14, 13, 9, 12, 11, 4, 2], 5: [14, 6, 3, 2], 6: [14, 12, 9, 13, 11, 4, 2], 7: [14, 6, 5, 4, 2], 8: [14, 13, 9, 10, 7, 5, 4, 2], 9: [14, 13, 9, 8, 1, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a440>, {0: [14, 6, 3], 1: [14, 13, 9, 10, 6, 3], 2: [14, 12, 9, 10, 6, 3], 3: [14, 13, 11, 4, 2, 3], 4: [14, 12, 11, 4, 2, 3], 5: [14, 13, 9, 8, 7, 5, 4, 2, 3], 6: [14, 12, 9, 8, 7, 5, 4, 2, 3], 7: [14, 13, 9, 12, 11, 4, 2, 3], 8: [14, 6, 5, 4, 2, 3], 9: [14, 12, 9, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a4d0>, {0: [14, 13, 11, 4], 1: [14, 12, 11, 4], 2: [14, 13, 9, 8, 7, 5, 4], 3: [14, 12, 9, 8, 7, 5, 4], 4: [14, 13, 9, 12, 11, 4], 5: [14, 6, 5, 4], 6: [14, 12, 9, 13, 11, 4], 7: [14, 13, 9, 10, 7, 5, 4], 8: [14, 12, 9, 10, 7, 5, 4], 9: [14, 13, 9, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a560>, {0: [14, 13, 9, 8, 7, 5], 1: [14, 12, 9, 8, 7, 5], 2: [14, 6, 5], 3: [14, 13, 9, 10, 7, 5], 4: [14, 12, 9, 10, 7, 5], 5: [14, 13, 11, 4, 5], 6: [14, 12, 11, 4, 5], 7: [14, 13, 9, 10, 6, 5], 8: [14, 12, 9, 10, 6, 5], 9: [14, 13, 9, 12, 11, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a5f0>, {0: [14, 6], 1: [14, 13, 9, 10, 6], 2: [14, 12, 9, 10, 6], 3: [14, 13, 11, 12, 9, 10, 6], 4: [14, 13, 9, 8, 7, 5, 6], 5: [14, 12, 11, 13, 9, 10, 6], 6: [14, 12, 9, 8, 7, 5, 6], 7: [14, 13, 9, 10, 7, 5, 6], 8: [14, 13, 9, 8, 7, 10, 6], 9: [14, 12, 9, 10, 7, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a680>, {0: [14, 13, 9, 8, 7], 1: [14, 12, 9, 8, 7], 2: [14, 13, 9, 10, 7], 3: [14, 12, 9, 10, 7], 4: [14, 13, 11, 12, 9, 8, 7], 5: [14, 12, 11, 13, 9, 8, 7], 6: [14, 6, 5, 7], 7: [14, 13, 11, 12, 9, 10, 7], 8: [14, 13, 9, 10, 6, 5, 7], 9: [14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a710>, {0: [14, 13, 9, 8], 1: [14, 12, 9, 8], 2: [14, 13, 11, 12, 9, 8], 3: [14, 12, 11, 13, 9, 8], 4: [14, 13, 9, 10, 7, 8], 5: [14, 12, 9, 10, 7, 8], 6: [14, 6, 5, 7, 8], 7: [14, 6, 10, 9, 8], 8: [14, 13, 11, 12, 9, 10, 7, 8], 9: [14, 13, 11, 4, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a7a0>, {0: [14, 13, 9], 1: [14, 12, 9], 2: [14, 13, 11, 12, 9], 3: [14, 12, 11, 13, 9], 4: [14, 6, 10, 9], 5: [14, 6, 5, 7, 8, 9], 6: [14, 13, 11, 4, 5, 7, 8, 9], 7: [14, 12, 11, 4, 5, 7, 8, 9], 8: [14, 6, 10, 7, 8, 9], 9: [14, 6, 5, 7, 10, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a830>, {0: [14, 13, 9, 10], 1: [14, 12, 9, 10], 2: [14, 13, 11, 12, 9, 10], 3: [14, 12, 11, 13, 9, 10], 4: [14, 6, 10], 5: [14, 13, 9, 8, 7, 10], 6: [14, 12, 9, 8, 7, 10], 7: [14, 13, 11, 12, 9, 8, 7, 10], 8: [14, 12, 11, 13, 9, 8, 7, 10], 9: [14, 13, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a8c0>, {0: [14, 13, 11], 1: [14, 12, 11], 2: [14, 13, 9, 12, 11], 3: [14, 12, 9, 13, 11], 4: [14, 6, 10, 9, 12, 11], 5: [14, 6, 10, 9, 13, 11], 6: [14, 13, 9, 8, 7, 5, 4, 11], 7: [14, 12, 9, 8, 7, 5, 4, 11], 8: [14, 6, 5, 4, 11], 9: [14, 13, 9, 10, 7, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a950>, {0: [14, 12], 1: [14, 13, 9, 12], 2: [14, 13, 11, 12], 3: [14, 6, 10, 9, 12], 4: [14, 6, 10, 9, 13, 11, 12], 5: [14, 6, 5, 7, 8, 9, 12], 6: [14, 13, 9, 8, 7, 5, 4, 11, 12], 7: [14, 13, 11, 4, 5, 7, 8, 9, 12], 8: [14, 6, 10, 7, 8, 9, 12], 9: [14, 6, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fcbe501a9e0>, {0: [14, 13], 1: [14, 12, 9, 13], 2: [14, 12, 11, 13], 3: [14, 6, 10, 9, 13], 4: [14, 6, 10, 9, 12, 11, 13], 5: [14, 6, 5, 7, 8, 9, 13], 6: [14, 12, 11, 4, 5, 7, 8, 9, 13], 7: [14, 12, 9, 8, 7, 5, 4, 11, 13], 8: [14, 6, 10, 7, 8, 9, 13], 9: [14, 6, 5, 7, 10, 9, 13]})})})
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/keras/engine/base_layer_v1.py:1694: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  warnings.warn('`layer.apply` is deprecated and '
Starting agent_0
Starting agent_1
stored successfully!
Test successful
Test Blocking probability: 0.0
# of underprovisioned demands: 68
Max underprov: 1.0
Mean underprov: 1.0
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  4
Blocking Probability =  0.527
Mean Resource Utilization = 0.3640281818181818
----
Episode Count =  5
Blocking Probability =  0.477
Mean Resource Utilization = 0.3704768181818182
----
Episode Count =  6
Blocking Probability =  0.474
Mean Resource Utilization = 0.3813252272727273
----
Episode Count =  7
Blocking Probability =  0.469
Mean Resource Utilization = 0.38380568181818175
----
Episode Count =  8
Blocking Probability =  0.466
Mean Resource Utilization = 0.3811418181818182
----
Episode Count =  9
Blocking Probability =  0.478
Mean Resource Utilization = 0.3782515909090909
----
Episode Count =  10
Blocking Probability =  0.46
Mean Resource Utilization = 0.3767290909090909
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  11
Blocking Probability =  0.486
Mean Resource Utilization = 0.3742690909090909
----
Episode Count =  12
Blocking Probability =  0.475
Mean Resource Utilization = 0.3742506818181819
----
Episode Count =  13
Blocking Probability =  0.521
Mean Resource Utilization = 0.3735968181818182
----
Episode Count =  14
Blocking Probability =  0.495
Mean Resource Utilization = 0.3726797727272727
----
Episode Count =  15
Blocking Probability =  0.514
Mean Resource Utilization = 0.3703015909090909
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  16
Blocking Probability =  0.48
Mean Resource Utilization = 0.37156909090909096
----
Episode Count =  17
Blocking Probability =  0.5
Mean Resource Utilization = 0.3791181818181818
----
Episode Count =  18
Blocking Probability =  0.493
Mean Resource Utilization = 0.38045045454545445
----
Episode Count =  19
Blocking Probability =  0.506
Mean Resource Utilization = 0.384315
----
Episode Count =  20
Blocking Probability =  0.482
Mean Resource Utilization = 0.3814213636363636
----
Episode Count =  21
Blocking Probability =  0.486
Mean Resource Utilization = 0.3789109090909091
----
Episode Count =  22
Blocking Probability =  0.503
Mean Resource Utilization = 0.386025
----
Episode Count =  23
Blocking Probability =  0.484
Mean Resource Utilization = 0.3717538636363637
----
Episode Count =  24
Blocking Probability =  0.498
Mean Resource Utilization = 0.36080045454545456
----
Episode Count =  25
Blocking Probability =  0.513
Mean Resource Utilization = 0.38506363636363633
----
Episode Count =  26
Blocking Probability =  0.505
Mean Resource Utilization = 0.38067886363636366
----
Episode Count =  27
Blocking Probability =  0.484
Mean Resource Utilization = 0.36295909090909095
----
Episode Count =  28
Blocking Probability =  0.477
Mean Resource Utilization = 0.3785059090909091
----
Episode Count =  29
Blocking Probability =  0.49
Mean Resource Utilization = 0.35916613636363637
----
Episode Count =  30
Blocking Probability =  0.447
Mean Resource Utilization = 0.35869090909090917
----
Episode Count =  31
Blocking Probability =  0.503
Mean Resource Utilization = 0.3806481818181818
----
Episode Count =  32
Blocking Probability =  0.48
Mean Resource Utilization = 0.3678613636363636
----
Episode Count =  33
Blocking Probability =  0.487
Mean Resource Utilization = 0.3684456818181818
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  34
Blocking Probability =  0.498
Mean Resource Utilization = 0.3785706818181818
----
Episode Count =  35
Blocking Probability =  0.5
Mean Resource Utilization = 0.3603545454545455
----
Episode Count =  36
Blocking Probability =  0.496
Mean Resource Utilization = 0.3710638636363636
----
Episode Count =  37
Blocking Probability =  0.497
Mean Resource Utilization = 0.37023613636363634
----
Episode Count =  38
Blocking Probability =  0.493
Mean Resource Utilization = 0.37090704545454545
----
Episode Count =  39
Blocking Probability =  0.483
Mean Resource Utilization = 0.3730561363636364
----
Episode Count =  40
Blocking Probability =  0.49
Mean Resource Utilization = 0.3707877272727273
----
Episode Count =  41
Blocking Probability =  0.475
Mean Resource Utilization = 0.3771947727272727
----
Episode Count =  42
Blocking Probability =  0.492
Mean Resource Utilization = 0.3784302272727273
----
Episode Count =  43
Blocking Probability =  0.473
Mean Resource Utilization = 0.3889759090909091
----
Episode Count =  44
Blocking Probability =  0.482
Mean Resource Utilization = 0.36614454545454544
----
Episode Count =  45
Blocking Probability =  0.484
Mean Resource Utilization = 0.3698140909090909
----
Episode Count =  46
Blocking Probability =  0.467
Mean Resource Utilization = 0.37652318181818184
----
Episode Count =  47
Blocking Probability =  0.471
Mean Resource Utilization = 0.3772779545454546
----
Episode Count =  48
Blocking Probability =  0.506
Mean Resource Utilization = 0.37089000000000005
----
Episode Count =  49
Blocking Probability =  0.497
Mean Resource Utilization = 0.38746500000000006
----
Episode Count =  50
Blocking Probability =  0.464
Mean Resource Utilization = 0.3848031818181818
----
Episode Count =  51
Blocking Probability =  0.503
Mean Resource Utilization = 0.3924920454545454
----
Episode Count =  52
Blocking Probability =  0.499
Mean Resource Utilization = 0.3819681818181819
----
Episode Count =  53
Blocking Probability =  0.472
Mean Resource Utilization = 0.38411795454545455
----
Episode Count =  54
Blocking Probability =  0.474
Mean Resource Utilization = 0.37483840909090904
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  55
Blocking Probability =  0.512
Mean Resource Utilization = 0.4034263636363636
----
Episode Count =  56
Blocking Probability =  0.468
Mean Resource Utilization = 0.3882368181818182
----
Episode Count =  57
Blocking Probability =  0.458
Mean Resource Utilization = 0.383763409090909
----
Episode Count =  58
Blocking Probability =  0.479
Mean Resource Utilization = 0.38283613636363634
----
Episode Count =  59
Blocking Probability =  0.469
Mean Resource Utilization = 0.3881734090909091
----
Episode Count =  60
Blocking Probability =  0.485
Mean Resource Utilization = 0.38423386363636364
----
Episode Count =  61
Blocking Probability =  0.473
Mean Resource Utilization = 0.39373568181818175
----
Episode Count =  62
Blocking Probability =  0.487
Mean Resource Utilization = 0.3811745454545455
----
Episode Count =  63
Blocking Probability =  0.476
Mean Resource Utilization = 0.3958397727272727
----
Episode Count =  64
Blocking Probability =  0.469
Mean Resource Utilization = 0.40743954545454547
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  65
Blocking Probability =  0.494
Mean Resource Utilization = 0.3903102272727273
----
Episode Count =  66
Blocking Probability =  0.487
Mean Resource Utilization = 0.3989570454545454
----
Episode Count =  67
Blocking Probability =  0.507
Mean Resource Utilization = 0.39590386363636365
----
Episode Count =  68
Blocking Probability =  0.471
Mean Resource Utilization = 0.3873975
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  69
Blocking Probability =  0.468
Mean Resource Utilization = 0.3848393181818182
----
Episode Count =  70
Blocking Probability =  0.472
Mean Resource Utilization = 0.394515
----
Episode Count =  71
Blocking Probability =  0.441
Mean Resource Utilization = 0.3961800000000001
----
Episode Count =  72
Blocking Probability =  0.454
Mean Resource Utilization = 0.3865315909090909
----
Episode Count =  73
Blocking Probability =  0.474
Mean Resource Utilization = 0.40022795454545457
----
Episode Count =  74
Blocking Probability =  0.466
Mean Resource Utilization = 0.4001447727272728
----
Episode Count =  75
Blocking Probability =  0.457
Mean Resource Utilization = 0.38361477272727273
----
Episode Count =  76
Blocking Probability =  0.462
Mean Resource Utilization = 0.3867572727272727
----
Episode Count =  77
Blocking Probability =  0.455
Mean Resource Utilization = 0.38764499999999996
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  78
Blocking Probability =  0.454
Mean Resource Utilization = 0.38621113636363635
----
Episode Count =  79
Blocking Probability =  0.472
Mean Resource Utilization = 0.39574227272727275
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  80
Blocking Probability =  0.476
Mean Resource Utilization = 0.39091295454545455
----
Episode Count =  81
Blocking Probability =  0.481
Mean Resource Utilization = 0.3982063636363637
----
Episode Count =  82
Blocking Probability =  0.458
Mean Resource Utilization = 0.38795386363636364
----
Episode Count =  83
Blocking Probability =  0.435
Mean Resource Utilization = 0.3818584090909091
----
Episode Count =  84
Blocking Probability =  0.492
Mean Resource Utilization = 0.4025065909090909
----
Episode Count =  85
Blocking Probability =  0.429
Mean Resource Utilization = 0.3941447727272727
----
Episode Count =  86
Blocking Probability =  0.467
Mean Resource Utilization = 0.3907384090909091
----
Episode Count =  87
Blocking Probability =  0.475
Mean Resource Utilization = 0.3882729545454545
----
Episode Count =  88
Blocking Probability =  0.472
Mean Resource Utilization = 0.4013093181818182
----
Episode Count =  89
Blocking Probability =  0.46
Mean Resource Utilization = 0.3986468181818182
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  90
Blocking Probability =  0.433
Mean Resource Utilization = 0.3867518181818182
----
Episode Count =  91
Blocking Probability =  0.47
Mean Resource Utilization = 0.4038395454545455
----
Episode Count =  92
Blocking Probability =  0.438
Mean Resource Utilization = 0.38633454545454543
----
Episode Count =  93
Blocking Probability =  0.45
Mean Resource Utilization = 0.3919984090909091
----
Episode Count =  94
Blocking Probability =  0.456
Mean Resource Utilization = 0.3953086363636364
----
Episode Count =  95
Blocking Probability =  0.476
Mean Resource Utilization = 0.3844397727272727
----
Episode Count =  96
Blocking Probability =  0.455
Mean Resource Utilization = 0.40872749999999997
----
Episode Count =  97
Blocking Probability =  0.443
Mean Resource Utilization = 0.40055931818181817
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  98
Blocking Probability =  0.45
Mean Resource Utilization = 0.40916318181818184
----
Episode Count =  99
Blocking Probability =  0.468
Mean Resource Utilization = 0.40884818181818183
----
Episode Count =  100
Blocking Probability =  0.471
Mean Resource Utilization = 0.3909572727272727
----
Model Saved
wandb: WARNING Symlinked 0 file into the W&B run directory, call wandb.save again to sync new files.
wandb: WARNING Symlinked 1 file into the W&B run directory, call wandb.save again to sync new files.
wandb: WARNING wandb.plots.* functions are deprecated and will be removed in a future release. Please use wandb.plot.* instead.
wandb: Visualizing heatmap.
stored successfully!
Test successful
Test Blocking probability: 0.0
# of underprovisioned demands: 66
Max underprov: 1.0
Mean underprov: 1.0
Episode Count =  101
Blocking Probability =  0.463
Mean Resource Utilization = 0.39938863636363636
----
Episode Count =  102
Blocking Probability =  0.543
Mean Resource Utilization = 0.4842340909090909
----
Episode Count =  103
Blocking Probability =  0.568
Mean Resource Utilization = 0.47691886363636365
----
Episode Count =  104
Blocking Probability =  0.532
Mean Resource Utilization = 0.468610909090909
----
Episode Count =  105
Blocking Probability =  0.543
Mean Resource Utilization = 0.4665095454545454
----
Episode Count =  106
Blocking Probability =  0.542
Mean Resource Utilization = 0.48048477272727275
----
Episode Count =  107
Blocking Probability =  0.532
Mean Resource Utilization = 0.4836211363636363
----
Episode Count =  108
Blocking Probability =  0.526
Mean Resource Utilization = 0.46286045454545455
----
Episode Count =  109
Blocking Probability =  0.535
Mean Resource Utilization = 0.48368113636363635
----
Episode Count =  110
Blocking Probability =  0.518
Mean Resource Utilization = 0.46508250000000007
----
Episode Count =  111
Blocking Probability =  0.513
Mean Resource Utilization = 0.4740497727272727
----
Episode Count =  112
Blocking Probability =  0.518
Mean Resource Utilization = 0.47174727272727274
----
Episode Count =  113
Blocking Probability =  0.501
Mean Resource Utilization = 0.46213159090909095
----
Episode Count =  114
Blocking Probability =  0.506
Mean Resource Utilization = 0.46178386363636365
----
Episode Count =  115
Blocking Probability =  0.523
Mean Resource Utilization = 0.4715222727272727
----
Episode Count =  116
Blocking Probability =  0.5
Mean Resource Utilization = 0.4751365909090909
----
Episode Count =  117
Blocking Probability =  0.487
Mean Resource Utilization = 0.48413249999999997
----
Episode Count =  118
Blocking Probability =  0.505
Mean Resource Utilization = 0.4813295454545454
----
Episode Count =  119
Blocking Probability =  0.493
Mean Resource Utilization = 0.4714493181818182
----
Episode Count =  120
Blocking Probability =  0.505
Mean Resource Utilization = 0.4924765909090909
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  121
Blocking Probability =  0.519
Mean Resource Utilization = 0.4740184090909091
----
Episode Count =  122
Blocking Probability =  0.533
Mean Resource Utilization = 0.4834493181818182
----
Episode Count =  123
Blocking Probability =  0.525
Mean Resource Utilization = 0.4776886363636364
----
Episode Count =  124
Blocking Probability =  0.507
Mean Resource Utilization = 0.49376590909090906
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  125
Blocking Probability =  0.514
Mean Resource Utilization = 0.46555295454545453
----
Episode Count =  126
Blocking Probability =  0.483
Mean Resource Utilization = 0.4716415909090909
----
Episode Count =  127
Blocking Probability =  0.49
Mean Resource Utilization = 0.47667204545454545
----
Episode Count =  128
Blocking Probability =  0.491
Mean Resource Utilization = 0.4783015909090909
----
Episode Count =  129
Blocking Probability =  0.472
Mean Resource Utilization = 0.47470772727272725
----
Episode Count =  130
Blocking Probability =  0.485
Mean Resource Utilization = 0.47251568181818177
----
Episode Count =  131
Blocking Probability =  0.48
Mean Resource Utilization = 0.47527022727272733
----
Episode Count =  132
Blocking Probability =  0.496
Mean Resource Utilization = 0.4827081818181818
----
Episode Count =  133
Blocking Probability =  0.505
Mean Resource Utilization = 0.47798522727272724
----
Episode Count =  134
Blocking Probability =  0.497
Mean Resource Utilization = 0.4648534090909091
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  135
Blocking Probability =  0.486
Mean Resource Utilization = 0.47478068181818184
----
Episode Count =  136
Blocking Probability =  0.501
Mean Resource Utilization = 0.47321318181818184
----
Episode Count =  137
Blocking Probability =  0.508
Mean Resource Utilization = 0.47478818181818183
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  138
Blocking Probability =  0.536
Mean Resource Utilization = 0.4825540909090909
----
Episode Count =  139
Blocking Probability =  0.51
Mean Resource Utilization = 0.47559749999999995
----
Episode Count =  140
Blocking Probability =  0.511
Mean Resource Utilization = 0.49149136363636364
----
Episode Count =  141
Blocking Probability =  0.48
Mean Resource Utilization = 0.4679243181818182
----
Episode Count =  142
Blocking Probability =  0.496
Mean Resource Utilization = 0.4816793181818182
----
Episode Count =  143
Blocking Probability =  0.488
Mean Resource Utilization = 0.472875
----
Episode Count =  144
Blocking Probability =  0.515
Mean Resource Utilization = 0.4791784090909091
----
Episode Count =  145
Blocking Probability =  0.493
Mean Resource Utilization = 0.4705452272727273
----
Episode Count =  146
Blocking Probability =  0.495
Mean Resource Utilization = 0.49874727272727276
----
Episode Count =  147
Blocking Probability =  0.472
Mean Resource Utilization = 0.4620040909090909
----
Episode Count =  148
Blocking Probability =  0.51
Mean Resource Utilization = 0.47558999999999996
----
Episode Count =  149
Blocking Probability =  0.505
Mean Resource Utilization = 0.4765084090909091
----
Episode Count =  150
Blocking Probability =  0.499
Mean Resource Utilization = 0.473835
----
Episode Count =  151
Blocking Probability =  0.511
Mean Resource Utilization = 0.49216772727272723
----
Episode Count =  152
Blocking Probability =  0.489
Mean Resource Utilization = 0.4873609090909091
----
Episode Count =  153
Blocking Probability =  0.478
Mean Resource Utilization = 0.47940272727272726
----
Episode Count =  154
Blocking Probability =  0.462
Mean Resource Utilization = 0.47349340909090903
----
Episode Count =  155
Blocking Probability =  0.496
Mean Resource Utilization = 0.4838543181818181
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  156
Blocking Probability =  0.499
Mean Resource Utilization = 0.47903863636363636
----
Episode Count =  157
Blocking Probability =  0.518
Mean Resource Utilization = 0.48634227272727276
----
Episode Count =  158
Blocking Probability =  0.512
Mean Resource Utilization = 0.4786588636363636
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  159
Blocking Probability =  0.483
Mean Resource Utilization = 0.4761388636363636
----
Episode Count =  160
Blocking Probability =  0.498
Mean Resource Utilization = 0.4778775
----
Episode Count =  161
Blocking Probability =  0.489
Mean Resource Utilization = 0.47736136363636367
----
Episode Count =  162
Blocking Probability =  0.492
Mean Resource Utilization = 0.49064795454545457
----
Episode Count =  163
Blocking Probability =  0.506
Mean Resource Utilization = 0.4792056818181818
----
Episode Count =  164
Blocking Probability =  0.483
Mean Resource Utilization = 0.47007204545454545
----
Episode Count =  165
Blocking Probability =  0.499
Mean Resource Utilization = 0.4831561363636364
----
Episode Count =  166
Blocking Probability =  0.502
Mean Resource Utilization = 0.4853706818181818
----
Episode Count =  167
Blocking Probability =  0.493
Mean Resource Utilization = 0.4731143181818182
----
Episode Count =  168
Blocking Probability =  0.52
Mean Resource Utilization = 0.46770000000000006
----
Episode Count =  169
Blocking Probability =  0.526
Mean Resource Utilization = 0.4744752272727273
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  170
Blocking Probability =  0.487
Mean Resource Utilization = 0.48044522727272726
----
Episode Count =  171
Blocking Probability =  0.505
Mean Resource Utilization = 0.4694031818181818
----
Episode Count =  172
Blocking Probability =  0.449
Mean Resource Utilization = 0.4670584090909091
----
Episode Count =  173
Blocking Probability =  0.508
Mean Resource Utilization = 0.492783409090909
----
Episode Count =  174
Blocking Probability =  0.501
Mean Resource Utilization = 0.47424272727272726
----
Episode Count =  175
Blocking Probability =  0.51
Mean Resource Utilization = 0.48767659090909093
----
Episode Count =  176
Blocking Probability =  0.487
Mean Resource Utilization = 0.4748979545454546
----
Episode Count =  177
Blocking Probability =  0.474
Mean Resource Utilization = 0.4747643181818182
----
Episode Count =  178
Blocking Probability =  0.461
Mean Resource Utilization = 0.4748515909090909
----
Episode Count =  179
Blocking Probability =  0.491
Mean Resource Utilization = 0.48327681818181817
----
Episode Count =  180
Blocking Probability =  0.502
Mean Resource Utilization = 0.48201954545454545
----
Episode Count =  181
Blocking Probability =  0.476
Mean Resource Utilization = 0.47551840909090914
----
Episode Count =  182
Blocking Probability =  0.517
Mean Resource Utilization = 0.47810659090909097
----
Episode Count =  183
Blocking Probability =  0.471
Mean Resource Utilization = 0.468
----
Episode Count =  184
Blocking Probability =  0.498
Mean Resource Utilization = 0.4803640909090909
----
Episode Count =  185
Blocking Probability =  0.501
Mean Resource Utilization = 0.4756704545454545
----
Episode Count =  186
Blocking Probability =  0.468
Mean Resource Utilization = 0.4731088636363636
----
Episode Count =  187
Blocking Probability =  0.49
Mean Resource Utilization = 0.47293772727272726
----
Episode Count =  188
Blocking Probability =  0.45
Mean Resource Utilization = 0.46431613636363633
----
Episode Count =  189
Blocking Probability =  0.496
Mean Resource Utilization = 0.4746347727272727
----
Episode Count =  190
Blocking Probability =  0.514
Mean Resource Utilization = 0.4767415909090909
----
Episode Count =  191
Blocking Probability =  0.485
Mean Resource Utilization = 0.4885056818181818
----
Episode Count =  192
Blocking Probability =  0.46
Mean Resource Utilization = 0.47075045454545456
----
Episode Count =  193
Blocking Probability =  0.475
Mean Resource Utilization = 0.47204999999999997
----
Episode Count =  194
Blocking Probability =  0.514
Mean Resource Utilization = 0.4865706818181818
----
Episode Count =  195
Blocking Probability =  0.465
Mean Resource Utilization = 0.47050977272727273
----
Episode Count =  196
Blocking Probability =  0.51
Mean Resource Utilization = 0.48399000000000003
----
Episode Count =  197
Blocking Probability =  0.515
Mean Resource Utilization = 0.4727113636363637
----
Episode Count =  198
Blocking Probability =  0.497
Mean Resource Utilization = 0.47795113636363634
----
Episode Count =  199
Blocking Probability =  0.519
Mean Resource Utilization = 0.4672602272727273
----
Episode Count =  200
Blocking Probability =  0.494
Mean Resource Utilization = 0.48102409090909093
----
Model Saved
wandb: WARNING Symlinked 0 file into the W&B run directory, call wandb.save again to sync new files.
wandb: Visualizing heatmap.
stored successfully!
Test successful
Test Blocking probability: 0.0
# of underprovisioned demands: 75
Max underprov: 1.0
Mean underprov: 1.0
Episode Count =  201
Blocking Probability =  0.49
Mean Resource Utilization = 0.48157636363636364
----
Episode Count =  202
Blocking Probability =  0.52
Mean Resource Utilization = 0.5129727272727272
----
Episode Count =  203
Blocking Probability =  0.527
Mean Resource Utilization = 0.5139415909090908
----
Episode Count =  204
Blocking Probability =  0.53
Mean Resource Utilization = 0.5275377272727273
----
Episode Count =  205
Blocking Probability =  0.523
Mean Resource Utilization = 0.5004286363636363
----
Episode Count =  206
Blocking Probability =  0.518
Mean Resource Utilization = 0.5146963636363637
----
Episode Count =  207
Blocking Probability =  0.559
Mean Resource Utilization = 0.5066277272727273
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  208
Blocking Probability =  0.528
Mean Resource Utilization = 0.5288365909090907
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  209
Blocking Probability =  0.552
Mean Resource Utilization = 0.5311118181818181
----
Episode Count =  210
Blocking Probability =  0.539
Mean Resource Utilization = 0.512343409090909
----
Episode Count =  211
Blocking Probability =  0.528
Mean Resource Utilization = 0.5215786363636364
----
Episode Count =  212
Blocking Probability =  0.549
Mean Resource Utilization = 0.501825
----
Episode Count =  213
Blocking Probability =  0.534
Mean Resource Utilization = 0.5032268181818182
----
Episode Count =  214
Blocking Probability =  0.556
Mean Resource Utilization = 0.5114502272727273
----
Episode Count =  215
Blocking Probability =  0.563
Mean Resource Utilization = 0.5077984090909091
----
Episode Count =  216
Blocking Probability =  0.55
Mean Resource Utilization = 0.5138761363636363
----
Episode Count =  217
Blocking Probability =  0.518
Mean Resource Utilization = 0.5101329545454546
----
Episode Count =  218
Blocking Probability =  0.535
Mean Resource Utilization = 0.51378
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  219
Blocking Probability =  0.54
Mean Resource Utilization = 0.52665
----
Episode Count =  220
Blocking Probability =  0.532
Mean Resource Utilization = 0.5232899999999999
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  221
Blocking Probability =  0.496
Mean Resource Utilization = 0.5117788636363637
----
Episode Count =  222
Blocking Probability =  0.526
Mean Resource Utilization = 0.5126693181818182
----
Episode Count =  223
Blocking Probability =  0.536
Mean Resource Utilization = 0.524396590909091
----
Episode Count =  224
Blocking Probability =  0.534
Mean Resource Utilization = 0.5183502272727273
----
Episode Count =  225
Blocking Probability =  0.523
Mean Resource Utilization = 0.5153372727272727
----
Episode Count =  226
Blocking Probability =  0.509
Mean Resource Utilization = 0.5127981818181818
----
Episode Count =  227
Blocking Probability =  0.518
Mean Resource Utilization = 0.5258447727272727
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  228
Blocking Probability =  0.529
Mean Resource Utilization = 0.5150052272727274
----
Episode Count =  229
Blocking Probability =  0.503
Mean Resource Utilization = 0.4917845454545454
----
Episode Count =  230
Blocking Probability =  0.515
Mean Resource Utilization = 0.5015563636363637
----
Episode Count =  231
Blocking Probability =  0.549
Mean Resource Utilization = 0.5053615909090909
----
Episode Count =  232
Blocking Probability =  0.53
Mean Resource Utilization = 0.5169818181818182
----
Episode Count =  233
Blocking Probability =  0.544
Mean Resource Utilization = 0.5003590909090909
----
Episode Count =  234
Blocking Probability =  0.544
Mean Resource Utilization = 0.5219706818181818
----
Episode Count =  235
Blocking Probability =  0.526
Mean Resource Utilization = 0.51669
----
Episode Count =  236
Blocking Probability =  0.53
Mean Resource Utilization = 0.5167118181818182
----
Episode Count =  237
Blocking Probability =  0.539
Mean Resource Utilization = 0.5243836363636364
----
Episode Count =  238
Blocking Probability =  0.494
Mean Resource Utilization = 0.5097211363636364
----
Episode Count =  239
Blocking Probability =  0.544
Mean Resource Utilization = 0.5163797727272726
----
Episode Count =  240
Blocking Probability =  0.533
Mean Resource Utilization = 0.5110561363636363
----
Episode Count =  241
Blocking Probability =  0.51
Mean Resource Utilization = 0.4986743181818182
----
Episode Count =  242
Blocking Probability =  0.531
Mean Resource Utilization = 0.5260636363636364
----
Episode Count =  243
Blocking Probability =  0.539
Mean Resource Utilization = 0.5148245454545454
----
Episode Count =  244
Blocking Probability =  0.537
Mean Resource Utilization = 0.5285740909090909
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  245
Blocking Probability =  0.505
Mean Resource Utilization = 0.5225965909090909
----
Episode Count =  246
Blocking Probability =  0.524
Mean Resource Utilization = 0.5301415909090909
----
Episode Count =  247
Blocking Probability =  0.523
Mean Resource Utilization = 0.51897
----
Episode Count =  248
Blocking Probability =  0.541
Mean Resource Utilization = 0.5230295454545455
----
Episode Count =  249
Blocking Probability =  0.532
Mean Resource Utilization = 0.5299438636363636
----
Episode Count =  250
Blocking Probability =  0.534
Mean Resource Utilization = 0.5019736363636363
----
Episode Count =  251
Blocking Probability =  0.538
Mean Resource Utilization = 0.5044227272727273
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  252
Blocking Probability =  0.52
Mean Resource Utilization = 0.5246522727272727
----
Episode Count =  253
Blocking Probability =  0.509
Mean Resource Utilization = 0.4987902272727273
----
Episode Count =  254
Blocking Probability =  0.54
Mean Resource Utilization = 0.5174727272727273
----
Episode Count =  255
Blocking Probability =  0.533
Mean Resource Utilization = 0.5105972727272727
----
Episode Count =  256
Blocking Probability =  0.503
Mean Resource Utilization = 0.5206888636363637
----
Episode Count =  257
Blocking Probability =  0.534
Mean Resource Utilization = 0.5203090909090909
----
Episode Count =  258
Blocking Probability =  0.549
Mean Resource Utilization = 0.5084706818181818
----
Episode Count =  259
Blocking Probability =  0.543
Mean Resource Utilization = 0.5083363636363636
----
Episode Count =  260
Blocking Probability =  0.528
Mean Resource Utilization = 0.5199456818181818
----
Episode Count =  261
Blocking Probability =  0.506
Mean Resource Utilization = 0.5038445454545454
----
Episode Count =  262
Blocking Probability =  0.533
Mean Resource Utilization = 0.5059118181818182
----
Episode Count =  263
Blocking Probability =  0.534
Mean Resource Utilization = 0.5141754545454547
----
Episode Count =  264
Blocking Probability =  0.521
Mean Resource Utilization = 0.5096747727272727
----
Episode Count =  265
Blocking Probability =  0.522
Mean Resource Utilization = 0.5096277272727273
----
Episode Count =  266
Blocking Probability =  0.51
Mean Resource Utilization = 0.5205231818181818
----
Episode Count =  267
Blocking Probability =  0.529
Mean Resource Utilization = 0.5068356818181818
----
Episode Count =  268
Blocking Probability =  0.507
Mean Resource Utilization = 0.5111120454545454
----
Episode Count =  269
Blocking Probability =  0.517
Mean Resource Utilization = 0.5132754545454545
----
Episode Count =  270
Blocking Probability =  0.558
Mean Resource Utilization = 0.5177304545454545
----
Episode Count =  271
Blocking Probability =  0.51
Mean Resource Utilization = 0.5173997727272728
----
Episode Count =  272
Blocking Probability =  0.519
Mean Resource Utilization = 0.5196668181818181
----
Episode Count =  273
Blocking Probability =  0.533
Mean Resource Utilization = 0.5188588636363637
----
Episode Count =  274
Blocking Probability =  0.514
Mean Resource Utilization = 0.5217688636363637
----
Episode Count =  275
Blocking Probability =  0.55
Mean Resource Utilization = 0.521223409090909
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  276
Blocking Probability =  0.499
Mean Resource Utilization = 0.5280375
----
Episode Count =  277
Blocking Probability =  0.53
Mean Resource Utilization = 0.5239834090909091
----
Episode Count =  278
Blocking Probability =  0.526
Mean Resource Utilization = 0.5162045454545455
----
Episode Count =  279
Blocking Probability =  0.511
Mean Resource Utilization = 0.5107881818181819
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  280
Blocking Probability =  0.499
Mean Resource Utilization = 0.5144325
----
Episode Count =  281
Blocking Probability =  0.523
Mean Resource Utilization = 0.5124668181818182
----
Episode Count =  282
Blocking Probability =  0.526
Mean Resource Utilization = 0.5235456818181818
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  283
Blocking Probability =  0.527
Mean Resource Utilization = 0.5259804545454546
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  284
Blocking Probability =  0.521
Mean Resource Utilization = 0.5238736363636364
----
Episode Count =  285
Blocking Probability =  0.529
Mean Resource Utilization = 0.5088531818181818
----
Episode Count =  286
Blocking Probability =  0.527
Mean Resource Utilization = 0.5230363636363636
----
Episode Count =  287
Blocking Probability =  0.509
Mean Resource Utilization = 0.5176084090909092
----
Episode Count =  288
Blocking Probability =  0.53
Mean Resource Utilization = 0.5196579545454545
----
Episode Count =  289
Blocking Probability =  0.524
Mean Resource Utilization = 0.5092411363636363
----
Episode Count =  290
Blocking Probability =  0.525
Mean Resource Utilization = 0.5060406818181818
----
Episode Count =  291
Blocking Probability =  0.525
Mean Resource Utilization = 0.5146445454545454
----
Episode Count =  292
Blocking Probability =  0.547
Mean Resource Utilization = 0.5282652272727273
----
Episode Count =  293
Blocking Probability =  0.504
Mean Resource Utilization = 0.5095097727272727
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  294
Blocking Probability =  0.52
Mean Resource Utilization = 0.505725
----
Episode Count =  295
Blocking Probability =  0.514
Mean Resource Utilization = 0.5153297727272728
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  296
Blocking Probability =  0.513
Mean Resource Utilization = 0.5206765909090909
----
Episode Count =  297
Blocking Probability =  0.536
Mean Resource Utilization = 0.5085531818181819
----
Episode Count =  298
Blocking Probability =  0.532
Mean Resource Utilization = 0.5040020454545454
----
Episode Count =  299
Blocking Probability =  0.553
Mean Resource Utilization = 0.5233854545454545
----
Episode Count =  300
Blocking Probability =  0.505
Mean Resource Utilization = 0.5191588636363635
----
Model Saved
wandb: WARNING Symlinked 0 file into the W&B run directory, call wandb.save again to sync new files.
wandb: Visualizing heatmap.
stored successfully!
Test successful
Test Blocking probability: 0.0
# of underprovisioned demands: 79
Max underprov: 1.0
Mean underprov: 1.0
Episode Count =  301
Blocking Probability =  0.513
Mean Resource Utilization = 0.5242943181818182
----
Episode Count =  302
Blocking Probability =  0.547
Mean Resource Utilization = 0.5398240909090909
----
Episode Count =  303
Blocking Probability =  0.592
Mean Resource Utilization = 0.5400640909090909
----
Episode Count =  304
Blocking Probability =  0.529
Mean Resource Utilization = 0.5335179545454546
----
Episode Count =  305
Blocking Probability =  0.582
Mean Resource Utilization = 0.5365513636363637
----
Episode Count =  306
Blocking Probability =  0.543
Mean Resource Utilization = 0.5243161363636364
----
Episode Count =  307
Blocking Probability =  0.562
Mean Resource Utilization = 0.5440963636363636
----
Episode Count =  308
Blocking Probability =  0.556
Mean Resource Utilization = 0.5384434090909089
----
Episode Count =  309
Blocking Probability =  0.543
Mean Resource Utilization = 0.5310586363636363
----
Episode Count =  310
Blocking Probability =  0.538
Mean Resource Utilization = 0.5433784090909092
----
Episode Count =  311
Blocking Probability =  0.555
Mean Resource Utilization = 0.5349818181818182
----
Episode Count =  312
Blocking Probability =  0.566
Mean Resource Utilization = 0.5391306818181819
----
Episode Count =  313
Blocking Probability =  0.571
Mean Resource Utilization = 0.539715
----
Episode Count =  314
Blocking Probability =  0.546
Mean Resource Utilization = 0.5395629545454546
----
Episode Count =  315
Blocking Probability =  0.564
Mean Resource Utilization = 0.5421422727272727
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  316
Blocking Probability =  0.536
Mean Resource Utilization = 0.5410663636363636
----
Episode Count =  317
Blocking Probability =  0.589
Mean Resource Utilization = 0.5296779545454545
----
Episode Count =  318
Blocking Probability =  0.546
Mean Resource Utilization = 0.5394231818181818
----
Episode Count =  319
Blocking Probability =  0.575
Mean Resource Utilization = 0.5366338636363637
----
Episode Count =  320
Blocking Probability =  0.551
Mean Resource Utilization = 0.527659090909091
----
Episode Count =  321
Blocking Probability =  0.558
Mean Resource Utilization = 0.5336359090909091
----
Episode Count =  322
Blocking Probability =  0.552
Mean Resource Utilization = 0.5455738636363636
----
Episode Count =  323
Blocking Probability =  0.573
Mean Resource Utilization = 0.5421879545454545
----
Episode Count =  324
Blocking Probability =  0.55
Mean Resource Utilization = 0.5364204545454546
----
Episode Count =  325
Blocking Probability =  0.577
Mean Resource Utilization = 0.5454784090909092
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  326
Blocking Probability =  0.53
Mean Resource Utilization = 0.5350138636363637
----
Episode Count =  327
Blocking Probability =  0.579
Mean Resource Utilization = 0.5398206818181818
----
Episode Count =  328
Blocking Probability =  0.559
Mean Resource Utilization = 0.5409415909090909
----
Episode Count =  329
Blocking Probability =  0.542
Mean Resource Utilization = 0.5263336363636364
----
Episode Count =  330
Blocking Probability =  0.541
Mean Resource Utilization = 0.5346245454545455
----
Episode Count =  331
Blocking Probability =  0.585
Mean Resource Utilization = 0.5429454545454546
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  332
Blocking Probability =  0.586
Mean Resource Utilization = 0.5431677272727272
----
Episode Count =  333
Blocking Probability =  0.574
Mean Resource Utilization = 0.5346702272727273
----
Episode Count =  334
Blocking Probability =  0.559
Mean Resource Utilization = 0.5455411363636364
----
Episode Count =  335
Blocking Probability =  0.565
Mean Resource Utilization = 0.5311479545454546
----
Episode Count =  336
Blocking Probability =  0.546
Mean Resource Utilization = 0.5397961363636363
----
Episode Count =  337
Blocking Probability =  0.593
Mean Resource Utilization = 0.5353015909090909
----
Episode Count =  338
Blocking Probability =  0.554
Mean Resource Utilization = 0.5338963636363636
----
Episode Count =  339
Blocking Probability =  0.541
Mean Resource Utilization = 0.5326370454545454
----
Episode Count =  340
Blocking Probability =  0.562
Mean Resource Utilization = 0.5291768181818182
----
Episode Count =  341
Blocking Probability =  0.546
Mean Resource Utilization = 0.5214872727272727
----
Episode Count =  342
Blocking Probability =  0.573
Mean Resource Utilization = 0.5441686363636363
----
Episode Count =  343
Blocking Probability =  0.551
Mean Resource Utilization = 0.5356854545454546
----
Episode Count =  344
Blocking Probability =  0.539
Mean Resource Utilization = 0.5455915909090909
----
Episode Count =  345
Blocking Probability =  0.567
Mean Resource Utilization = 0.5336522727272727
----
Episode Count =  346
Blocking Probability =  0.55
Mean Resource Utilization = 0.5541463636363636
----
Episode Count =  347
Blocking Probability =  0.547
Mean Resource Utilization = 0.5444536363636364
----
Episode Count =  348
Blocking Probability =  0.569
Mean Resource Utilization = 0.53628
----
Episode Count =  349
Blocking Probability =  0.569
Mean Resource Utilization = 0.5525399999999999
----
Episode Count =  350
Blocking Probability =  0.545
Mean Resource Utilization = 0.5374097727272727
----
Episode Count =  351
Blocking Probability =  0.529
Mean Resource Utilization = 0.5248377272727273
----
Episode Count =  352
Blocking Probability =  0.55
Mean Resource Utilization = 0.542028409090909
----
Episode Count =  353
Blocking Probability =  0.558
Mean Resource Utilization = 0.5440438636363636
----
Episode Count =  354
Blocking Probability =  0.534
Mean Resource Utilization = 0.5359322727272727
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  355
Blocking Probability =  0.524
Mean Resource Utilization = 0.5263159090909092
----
Episode Count =  356
Blocking Probability =  0.553
Mean Resource Utilization = 0.5400981818181817
----
Episode Count =  357
Blocking Probability =  0.577
Mean Resource Utilization = 0.5507024999999999
----
Episode Count =  358
Blocking Probability =  0.555
Mean Resource Utilization = 0.5276938636363636
----
Episode Count =  359
Blocking Probability =  0.534
Mean Resource Utilization = 0.5370225000000001
----
Episode Count =  360
Blocking Probability =  0.549
Mean Resource Utilization = 0.5438802272727273
----
Episode Count =  361
Blocking Probability =  0.578
Mean Resource Utilization = 0.5323056818181818
----
Episode Count =  362
Blocking Probability =  0.531
Mean Resource Utilization = 0.5283279545454546
----
Episode Count =  363
Blocking Probability =  0.566
Mean Resource Utilization = 0.5447672727272728
----
Episode Count =  364
Blocking Probability =  0.569
Mean Resource Utilization = 0.5427115909090909
----
Episode Count =  365
Blocking Probability =  0.543
Mean Resource Utilization = 0.5403415909090908
----
Episode Count =  366
Blocking Probability =  0.559
Mean Resource Utilization = 0.5380472727272727
----
Episode Count =  367
Blocking Probability =  0.542
Mean Resource Utilization = 0.5414836363636364
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  368
Blocking Probability =  0.548
Mean Resource Utilization = 0.5334327272727272
----
Episode Count =  369
Blocking Probability =  0.563
Mean Resource Utilization = 0.5365711363636364
----
Episode Count =  370
Blocking Probability =  0.562
Mean Resource Utilization = 0.5415831818181819
----
Episode Count =  371
Blocking Probability =  0.554
Mean Resource Utilization = 0.5400579545454546
----
Episode Count =  372
Blocking Probability =  0.56
Mean Resource Utilization = 0.5351645454545454
----
Episode Count =  373
Blocking Probability =  0.559
Mean Resource Utilization = 0.5273870454545455
----
Episode Count =  374
Blocking Probability =  0.565
Mean Resource Utilization = 0.5325545454545454
----
Episode Count =  375
Blocking Probability =  0.576
Mean Resource Utilization = 0.5427068181818181
----
Episode Count =  376
Blocking Probability =  0.567
Mean Resource Utilization = 0.5311281818181817
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  377
Blocking Probability =  0.563
Mean Resource Utilization = 0.5351093181818183
----
Episode Count =  378
Blocking Probability =  0.533
Mean Resource Utilization = 0.5367647727272726
----
error: _get_path()
error: _get_path()
error: _get_path()
error: _get_path()
Episode Count =  379
Blocking Probability =  0.569
Mean Resource Utilization = 0.5420413636363637
----
Episode Count =  380
Blocking Probability =  0.582
Mean Resource Utilization = 0.5357025
----
Episode Count =  381
Blocking Probability =  0.531
Mean Resource Utilization = 0.5337790909090909
----
Episode Count =  382
Blocking Probability =  0.551
Mean Resource Utilization = 0.5425875000000001
----
Episode Count =  383
Blocking Probability =  0.551
Mean Resource Utilization = 0.5349702272727273
----
Episode Count =  384
Blocking Probability =  0.566
Mean Resource Utilization = 0.5408897727272728
----
Episode Count =  385
Blocking Probability =  0.583
Mean Resource Utilization = 0.5383322727272728
----
Exception in thread Thread-4 (agent_rmsa):
Exception in thread Traceback (most recent call last):
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
Thread-5 (agent_rmsa):
Traceback (most recent call last):
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()    self.run()
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 953, in run
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
self._target(*self._args, **self._kwargs)  File "/Users/emil/Documents/MyRMSA/My_Deep_RMSA_A3C.py", line 261, in agent_rmsa
  File "/Users/emil/Documents/MyRMSA/My_Deep_RMSA_A3C.py", line 261, in agent_rmsa
    agent.rmsa(sess, coord, saver)
  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 849, in rmsa
    agent.rmsa(sess, coord, saver)
  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 849, in rmsa
    action_id, value = self.get_action(sess, Input_feature, epsilon)
  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 442, in get_action
    prob_dist, value, entro = sess.run(
action_id, value = self.get_action(sess, Input_feature, epsilon)  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 967, in run
  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 442, in get_action
    prob_dist, value, entro = sess.run(
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 967, in run
    result = self._run(None, fetches, feed_dict, options_ptr,
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 1115, in _run
    raise RuntimeError('Attempted to use a closed Session.')
    RuntimeErrorresult = self._run(None, fetches, feed_dict, options_ptr,: Attempted to use a closed Session.
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 1115, in _run
    raise RuntimeError('Attempted to use a closed Session.')
