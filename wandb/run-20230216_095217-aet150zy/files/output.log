WARNING:tensorflow:From /Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/compat/v2_compat.py:107: disable_resource_variables (from tensorflow.python.ops.variable_scope) is deprecated and will be removed in a future version.
Instructions for updating:
non-resource variables are not supported in the long term
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/keras/engine/base_layer_v1.py:1694: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  warnings.warn('`layer.apply` is deprecated and '
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/keras/engine/base_layer_v1.py:1694: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  warnings.warn('`layer.apply` is deprecated and '
defaultdict(<function <lambda> at 0x7fed7518b520>, {1: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed7518b5b0>, {2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed7518b640>, {0: [1, 2], 1: [1, 3, 2], 2: [1, 8, 7, 5, 4, 2], 3: [1, 3, 6, 5, 4, 2], 4: [1, 8, 9, 12, 11, 4, 2], 5: [1, 8, 9, 13, 11, 4, 2], 6: [1, 8, 9, 10, 7, 5, 4, 2], 7: [1, 8, 9, 13, 14, 12, 11, 4, 2], 8: [1, 8, 7, 5, 6, 3, 2], 9: [1, 8, 9, 12, 14, 13, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780eea70>, {0: [1, 3], 1: [1, 2, 3], 2: [1, 2, 4, 5, 6, 3], 3: [1, 8, 7, 5, 4, 2, 3], 4: [1, 8, 9, 10, 6, 3], 5: [1, 8, 7, 5, 6, 3], 6: [1, 2, 4, 5, 7, 10, 6, 3], 7: [1, 8, 9, 13, 14, 6, 3], 8: [1, 8, 7, 10, 6, 3], 9: [1, 8, 9, 12, 14, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee9e0>, {0: [1, 2, 4], 1: [1, 3, 2, 4], 2: [1, 8, 7, 5, 4], 3: [1, 3, 6, 5, 4], 4: [1, 2, 3, 6, 5, 4], 5: [1, 8, 9, 12, 11, 4], 6: [1, 8, 9, 13, 11, 4], 7: [1, 8, 9, 10, 7, 5, 4], 8: [1, 8, 9, 13, 14, 12, 11, 4], 9: [1, 8, 9, 12, 14, 13, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee950>, {0: [1, 2, 4, 5], 1: [1, 3, 2, 4, 5], 2: [1, 8, 7, 5], 3: [1, 3, 6, 5], 4: [1, 2, 3, 6, 5], 5: [1, 8, 9, 10, 7, 5], 6: [1, 8, 9, 10, 6, 5], 7: [1, 3, 6, 10, 7, 5], 8: [1, 2, 3, 6, 10, 7, 5], 9: [1, 8, 9, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee8c0>, {0: [1, 3, 6], 1: [1, 2, 3, 6], 2: [1, 2, 4, 5, 6], 3: [1, 3, 2, 4, 5, 6], 4: [1, 8, 7, 5, 6], 5: [1, 8, 9, 10, 6], 6: [1, 2, 4, 5, 7, 10, 6], 7: [1, 8, 9, 13, 14, 6], 8: [1, 8, 7, 10, 6], 9: [1, 8, 9, 12, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee830>, {0: [1, 2, 4, 5, 7], 1: [1, 8, 7], 2: [1, 3, 2, 4, 5, 7], 3: [1, 3, 6, 5, 7], 4: [1, 2, 3, 6, 5, 7], 5: [1, 8, 9, 10, 7], 6: [1, 3, 6, 10, 7], 7: [1, 2, 3, 6, 10, 7], 8: [1, 2, 4, 5, 6, 10, 7], 9: [1, 2, 4, 11, 12, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee7a0>, {0: [1, 8], 1: [1, 2, 4, 5, 7, 8], 2: [1, 3, 2, 4, 5, 7, 8], 3: [1, 2, 4, 11, 12, 9, 8], 4: [1, 2, 4, 11, 13, 9, 8], 5: [1, 2, 4, 5, 7, 10, 9, 8], 6: [1, 3, 6, 5, 7, 8], 7: [1, 2, 4, 11, 12, 14, 13, 9, 8], 8: [1, 3, 6, 10, 9, 8], 9: [1, 2, 3, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee710>, {0: [1, 8, 9], 1: [1, 2, 4, 5, 7, 8, 9], 2: [1, 2, 4, 11, 12, 9], 3: [1, 2, 4, 11, 13, 9], 4: [1, 3, 6, 10, 9], 5: [1, 2, 4, 5, 7, 10, 9], 6: [1, 2, 4, 11, 12, 14, 13, 9], 7: [1, 8, 7, 10, 9], 8: [1, 2, 3, 6, 10, 9], 9: [1, 2, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee680>, {0: [1, 8, 9, 10], 1: [1, 2, 4, 5, 7, 10], 2: [1, 3, 6, 10], 3: [1, 8, 7, 10], 4: [1, 2, 3, 6, 10], 5: [1, 2, 4, 5, 6, 10], 6: [1, 2, 4, 5, 7, 8, 9, 10], 7: [1, 2, 4, 11, 12, 9, 10], 8: [1, 3, 2, 4, 5, 7, 10], 9: [1, 2, 4, 11, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee5f0>, {0: [1, 2, 4, 11], 1: [1, 8, 9, 12, 11], 2: [1, 8, 9, 13, 11], 3: [1, 8, 9, 13, 14, 12, 11], 4: [1, 8, 9, 12, 14, 13, 11], 5: [1, 3, 2, 4, 11], 6: [1, 2, 4, 5, 7, 8, 9, 12, 11], 7: [1, 2, 4, 5, 7, 8, 9, 13, 11], 8: [1, 2, 4, 5, 7, 8, 9, 13, 14, 12, 11], 9: [1, 3, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee560>, {0: [1, 8, 9, 12], 1: [1, 8, 9, 13, 14, 12], 2: [1, 2, 4, 11, 12], 3: [1, 8, 9, 13, 11, 12], 4: [1, 2, 4, 5, 7, 8, 9, 12], 5: [1, 2, 4, 11, 13, 14, 12], 6: [1, 2, 4, 11, 13, 9, 12], 7: [1, 2, 4, 5, 7, 8, 9, 13, 14, 12], 8: [1, 3, 2, 4, 11, 12], 9: [1, 2, 4, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee4d0>, {0: [1, 8, 9, 13], 1: [1, 8, 9, 12, 14, 13], 2: [1, 2, 4, 11, 13], 3: [1, 8, 9, 12, 11, 13], 4: [1, 2, 4, 5, 7, 8, 9, 13], 5: [1, 2, 4, 11, 12, 14, 13], 6: [1, 2, 4, 11, 12, 9, 13], 7: [1, 3, 6, 14, 13], 8: [1, 2, 4, 5, 7, 8, 9, 12, 14, 13], 9: [1, 2, 3, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee320>, {0: [1, 8, 9, 13, 14], 1: [1, 8, 9, 12, 14], 2: [1, 2, 4, 11, 12, 14], 3: [1, 2, 4, 11, 13, 14], 4: [1, 8, 9, 12, 11, 13, 14], 5: [1, 2, 4, 5, 7, 8, 9, 13, 14], 6: [1, 8, 9, 13, 11, 12, 14], 7: [1, 3, 6, 14], 8: [1, 2, 4, 11, 12, 9, 13, 14], 9: [1, 2, 4, 5, 7, 8, 9, 12, 14]})}), 2: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed780ee290>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee200>, {0: [2, 1], 1: [2, 3, 1], 2: [2, 4, 5, 7, 8, 1], 3: [2, 4, 5, 6, 3, 1], 4: [2, 4, 11, 12, 9, 8, 1], 5: [2, 4, 11, 13, 9, 8, 1], 6: [2, 4, 5, 7, 10, 9, 8, 1], 7: [2, 4, 11, 12, 14, 13, 9, 8, 1], 8: [2, 3, 6, 5, 7, 8, 1], 9: [2, 4, 11, 13, 14, 12, 9, 8, 1]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee170>, {0: [2, 3], 1: [2, 1, 3], 2: [2, 4, 5, 6, 3], 3: [2, 4, 5, 7, 10, 6, 3], 4: [2, 4, 5, 7, 8, 1, 3], 5: [2, 4, 5, 7, 8, 9, 10, 6, 3], 6: [2, 4, 11, 12, 14, 6, 3], 7: [2, 4, 11, 13, 14, 6, 3], 8: [2, 4, 11, 12, 9, 10, 6, 3], 9: [2, 4, 11, 13, 9, 10, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780eff40>, {0: [2, 4], 1: [2, 3, 6, 5, 4], 2: [2, 1, 8, 7, 5, 4], 3: [2, 3, 6, 10, 7, 5, 4], 4: [2, 1, 3, 6, 5, 4], 5: [2, 3, 1, 8, 7, 5, 4], 6: [2, 3, 6, 10, 9, 8, 7, 5, 4], 7: [2, 1, 8, 9, 12, 11, 4], 8: [2, 3, 6, 14, 13, 11, 4], 9: [2, 3, 6, 10, 9, 12, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780efeb0>, {0: [2, 4, 5], 1: [2, 3, 6, 5], 2: [2, 1, 8, 7, 5], 3: [2, 3, 6, 10, 7, 5], 4: [2, 1, 3, 6, 5], 5: [2, 4, 11, 12, 9, 8, 7, 5], 6: [2, 3, 1, 8, 7, 5], 7: [2, 4, 11, 13, 9, 8, 7, 5], 8: [2, 4, 11, 12, 14, 13, 9, 8, 7, 5], 9: [2, 3, 6, 10, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780efe20>, {0: [2, 3, 6], 1: [2, 4, 5, 6], 2: [2, 1, 3, 6], 3: [2, 4, 5, 7, 10, 6], 4: [2, 4, 5, 7, 8, 9, 10, 6], 5: [2, 4, 11, 12, 14, 6], 6: [2, 4, 11, 13, 14, 6], 7: [2, 4, 11, 12, 9, 10, 6], 8: [2, 4, 11, 13, 9, 10, 6], 9: [2, 4, 5, 7, 8, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee3b0>, {0: [2, 4, 5, 7], 1: [2, 1, 8, 7], 2: [2, 3, 6, 5, 7], 3: [2, 3, 6, 10, 7], 4: [2, 4, 5, 6, 10, 7], 5: [2, 4, 11, 12, 9, 8, 7], 6: [2, 3, 1, 8, 7], 7: [2, 4, 11, 13, 9, 8, 7], 8: [2, 4, 11, 12, 14, 13, 9, 8, 7], 9: [2, 3, 6, 10, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780efd90>, {0: [2, 4, 5, 7, 8], 1: [2, 1, 8], 2: [2, 4, 11, 12, 9, 8], 3: [2, 3, 1, 8], 4: [2, 4, 11, 13, 9, 8], 5: [2, 4, 5, 7, 10, 9, 8], 6: [2, 4, 11, 12, 14, 13, 9, 8], 7: [2, 3, 6, 5, 7, 8], 8: [2, 4, 11, 13, 14, 12, 9, 8], 9: [2, 3, 6, 10, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee440>, {0: [2, 4, 5, 7, 8, 9], 1: [2, 4, 11, 12, 9], 2: [2, 4, 11, 13, 9], 3: [2, 4, 5, 7, 10, 9], 4: [2, 4, 11, 12, 14, 13, 9], 5: [2, 1, 8, 9], 6: [2, 4, 11, 13, 14, 12, 9], 7: [2, 3, 6, 10, 9], 8: [2, 4, 5, 6, 10, 9], 9: [2, 3, 6, 14, 13, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780efd00>, {0: [2, 4, 5, 7, 10], 1: [2, 3, 6, 10], 2: [2, 4, 5, 6, 10], 3: [2, 4, 5, 7, 8, 9, 10], 4: [2, 4, 11, 12, 9, 10], 5: [2, 4, 11, 13, 9, 10], 6: [2, 4, 11, 12, 14, 13, 9, 10], 7: [2, 1, 8, 9, 10], 8: [2, 4, 11, 13, 14, 12, 9, 10], 9: [2, 3, 6, 14, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780efc70>, {0: [2, 4, 11], 1: [2, 4, 5, 7, 8, 9, 12, 11], 2: [2, 4, 5, 7, 8, 9, 13, 11], 3: [2, 4, 5, 7, 8, 9, 13, 14, 12, 11], 4: [2, 4, 5, 7, 10, 9, 12, 11], 5: [2, 4, 5, 7, 8, 9, 12, 14, 13, 11], 6: [2, 3, 6, 14, 13, 11], 7: [2, 4, 5, 7, 10, 9, 13, 11], 8: [2, 1, 8, 9, 12, 11], 9: [2, 3, 6, 10, 9, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780efbe0>, {0: [2, 4, 11, 12], 1: [2, 4, 5, 7, 8, 9, 12], 2: [2, 4, 11, 13, 14, 12], 3: [2, 4, 11, 13, 9, 12], 4: [2, 4, 5, 7, 8, 9, 13, 14, 12], 5: [2, 4, 5, 7, 10, 9, 12], 6: [2, 1, 8, 9, 12], 7: [2, 3, 6, 10, 9, 12], 8: [2, 3, 6, 14, 12], 9: [2, 4, 5, 6, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780efb50>, {0: [2, 4, 11, 13], 1: [2, 4, 5, 7, 8, 9, 13], 2: [2, 4, 11, 12, 14, 13], 3: [2, 4, 11, 12, 9, 13], 4: [2, 4, 5, 7, 8, 9, 12, 14, 13], 5: [2, 3, 6, 14, 13], 6: [2, 4, 5, 7, 10, 9, 13], 7: [2, 4, 5, 6, 14, 13], 8: [2, 1, 8, 9, 13], 9: [2, 3, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780efac0>, {0: [2, 4, 11, 12, 14], 1: [2, 4, 11, 13, 14], 2: [2, 4, 5, 7, 8, 9, 13, 14], 3: [2, 4, 11, 12, 9, 13, 14], 4: [2, 4, 5, 7, 8, 9, 12, 14], 5: [2, 3, 6, 14], 6: [2, 4, 11, 13, 9, 12, 14], 7: [2, 4, 5, 6, 14], 8: [2, 4, 5, 7, 10, 9, 13, 14], 9: [2, 1, 8, 9, 13, 14]})}), 3: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed780efa30>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ef9a0>, {0: [3, 1], 1: [3, 2, 1], 2: [3, 6, 5, 4, 2, 1], 3: [3, 2, 4, 5, 7, 8, 1], 4: [3, 6, 10, 9, 8, 1], 5: [3, 6, 5, 7, 8, 1], 6: [3, 6, 14, 13, 9, 8, 1], 7: [3, 6, 10, 7, 5, 4, 2, 1], 8: [3, 2, 4, 11, 12, 9, 8, 1], 9: [3, 6, 14, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee0e0>, {0: [3, 2], 1: [3, 1, 2], 2: [3, 6, 5, 4, 2], 3: [3, 6, 10, 7, 5, 4, 2], 4: [3, 1, 8, 7, 5, 4, 2], 5: [3, 6, 10, 9, 8, 7, 5, 4, 2], 6: [3, 6, 14, 13, 11, 4, 2], 7: [3, 6, 10, 9, 12, 11, 4, 2], 8: [3, 6, 14, 12, 11, 4, 2], 9: [3, 6, 10, 9, 13, 11, 4, 2]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ef910>, {0: [3, 2, 4], 1: [3, 1, 2, 4], 2: [3, 6, 5, 4], 3: [3, 6, 10, 7, 5, 4], 4: [3, 1, 8, 7, 5, 4], 5: [3, 2, 1, 8, 7, 5, 4], 6: [3, 6, 10, 9, 8, 7, 5, 4], 7: [3, 6, 14, 13, 11, 4], 8: [3, 6, 10, 9, 12, 11, 4], 9: [3, 6, 14, 12, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ef880>, {0: [3, 2, 4, 5], 1: [3, 6, 5], 2: [3, 1, 2, 4, 5], 3: [3, 6, 10, 7, 5], 4: [3, 1, 8, 7, 5], 5: [3, 2, 1, 8, 7, 5], 6: [3, 6, 10, 9, 8, 7, 5], 7: [3, 6, 14, 13, 9, 8, 7, 5], 8: [3, 2, 4, 11, 12, 9, 8, 7, 5], 9: [3, 6, 14, 12, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ee050>, {0: [3, 6], 1: [3, 2, 4, 5, 6], 2: [3, 2, 4, 5, 7, 10, 6], 3: [3, 1, 2, 4, 5, 6], 4: [3, 2, 4, 5, 7, 8, 9, 10, 6], 5: [3, 2, 4, 11, 12, 14, 6], 6: [3, 2, 4, 11, 13, 14, 6], 7: [3, 2, 4, 11, 12, 9, 10, 6], 8: [3, 2, 4, 11, 13, 9, 10, 6], 9: [3, 2, 4, 5, 7, 8, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ef7f0>, {0: [3, 2, 4, 5, 7], 1: [3, 6, 5, 7], 2: [3, 6, 10, 7], 3: [3, 1, 2, 4, 5, 7], 4: [3, 1, 8, 7], 5: [3, 2, 1, 8, 7], 6: [3, 6, 10, 9, 8, 7], 7: [3, 2, 4, 5, 6, 10, 7], 8: [3, 6, 14, 13, 9, 8, 7], 9: [3, 2, 4, 11, 12, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ef760>, {0: [3, 2, 4, 5, 7, 8], 1: [3, 1, 8], 2: [3, 2, 1, 8], 3: [3, 6, 5, 7, 8], 4: [3, 6, 10, 9, 8], 5: [3, 6, 14, 13, 9, 8], 6: [3, 2, 4, 11, 12, 9, 8], 7: [3, 6, 10, 7, 8], 8: [3, 6, 14, 12, 9, 8], 9: [3, 2, 4, 11, 13, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed780ef6d0>, {0: [3, 6, 10, 9], 1: [3, 2, 4, 5, 7, 8, 9], 2: [3, 6, 14, 13, 9], 3: [3, 2, 4, 11, 12, 9], 4: [3, 6, 14, 12, 9], 5: [3, 2, 4, 11, 13, 9], 6: [3, 1, 8, 9], 7: [3, 2, 4, 5, 7, 10, 9], 8: [3, 2, 4, 11, 12, 14, 13, 9], 9: [3, 2, 1, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781116c0>, {0: [3, 6, 10], 1: [3, 2, 4, 5, 7, 10], 2: [3, 2, 4, 5, 6, 10], 3: [3, 6, 14, 13, 9, 10], 4: [3, 2, 4, 5, 7, 8, 9, 10], 5: [3, 2, 4, 11, 12, 9, 10], 6: [3, 6, 5, 7, 10], 7: [3, 6, 14, 12, 9, 10], 8: [3, 2, 4, 11, 13, 9, 10], 9: [3, 1, 8, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781115a0>, {0: [3, 2, 4, 11], 1: [3, 6, 14, 13, 11], 2: [3, 6, 10, 9, 12, 11], 3: [3, 6, 14, 12, 11], 4: [3, 6, 10, 9, 13, 11], 5: [3, 2, 4, 5, 7, 8, 9, 12, 11], 6: [3, 6, 14, 13, 9, 12, 11], 7: [3, 6, 10, 9, 13, 14, 12, 11], 8: [3, 6, 10, 9, 12, 14, 13, 11], 9: [3, 2, 4, 5, 7, 8, 9, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111750>, {0: [3, 2, 4, 11, 12], 1: [3, 6, 10, 9, 12], 2: [3, 6, 14, 12], 3: [3, 2, 4, 5, 7, 8, 9, 12], 4: [3, 6, 10, 9, 13, 14, 12], 5: [3, 6, 14, 13, 9, 12], 6: [3, 2, 4, 11, 13, 14, 12], 7: [3, 2, 4, 11, 13, 9, 12], 8: [3, 2, 4, 5, 7, 8, 9, 13, 14, 12], 9: [3, 1, 8, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781117e0>, {0: [3, 6, 14, 13], 1: [3, 6, 10, 9, 13], 2: [3, 2, 4, 11, 13], 3: [3, 6, 10, 9, 12, 14, 13], 4: [3, 2, 4, 5, 7, 8, 9, 13], 5: [3, 2, 4, 11, 12, 14, 13], 6: [3, 6, 14, 12, 9, 13], 7: [3, 2, 4, 11, 12, 9, 13], 8: [3, 2, 4, 5, 7, 8, 9, 12, 14, 13], 9: [3, 1, 8, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78110310>, {0: [3, 6, 14], 1: [3, 6, 10, 9, 13, 14], 2: [3, 2, 4, 11, 12, 14], 3: [3, 6, 10, 9, 12, 14], 4: [3, 2, 4, 11, 13, 14], 5: [3, 2, 4, 5, 7, 8, 9, 13, 14], 6: [3, 2, 4, 11, 12, 9, 13, 14], 7: [3, 2, 4, 5, 7, 8, 9, 12, 14], 8: [3, 2, 4, 11, 13, 9, 12, 14], 9: [3, 2, 4, 5, 6, 14]})}), 4: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed78110a60>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78110af0>, {0: [4, 2, 1], 1: [4, 2, 3, 1], 2: [4, 5, 7, 8, 1], 3: [4, 5, 6, 3, 1], 4: [4, 5, 6, 3, 2, 1], 5: [4, 11, 12, 9, 8, 1], 6: [4, 11, 13, 9, 8, 1], 7: [4, 5, 7, 10, 9, 8, 1], 8: [4, 11, 12, 14, 13, 9, 8, 1], 9: [4, 11, 13, 14, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111630>, {0: [4, 2], 1: [4, 5, 6, 3, 2], 2: [4, 5, 7, 8, 1, 2], 3: [4, 5, 7, 10, 6, 3, 2], 4: [4, 5, 6, 3, 1, 2], 5: [4, 5, 7, 8, 1, 3, 2], 6: [4, 5, 7, 8, 9, 10, 6, 3, 2], 7: [4, 11, 12, 9, 8, 1, 2], 8: [4, 11, 13, 14, 6, 3, 2], 9: [4, 11, 12, 14, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78110d30>, {0: [4, 2, 3], 1: [4, 2, 1, 3], 2: [4, 5, 6, 3], 3: [4, 5, 7, 10, 6, 3], 4: [4, 5, 7, 8, 1, 3], 5: [4, 5, 7, 8, 1, 2, 3], 6: [4, 5, 7, 8, 9, 10, 6, 3], 7: [4, 11, 12, 14, 6, 3], 8: [4, 11, 13, 14, 6, 3], 9: [4, 11, 12, 9, 10, 6, 3]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78110dc0>, {0: [4, 5], 1: [4, 2, 3, 6, 5], 2: [4, 11, 12, 9, 8, 7, 5], 3: [4, 11, 13, 9, 8, 7, 5], 4: [4, 11, 12, 14, 13, 9, 8, 7, 5], 5: [4, 2, 1, 8, 7, 5], 6: [4, 11, 12, 9, 10, 7, 5], 7: [4, 11, 13, 14, 12, 9, 8, 7, 5], 8: [4, 11, 13, 9, 10, 7, 5], 9: [4, 11, 12, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78110280>, {0: [4, 5, 6], 1: [4, 2, 3, 6], 2: [4, 5, 7, 10, 6], 3: [4, 5, 7, 8, 9, 10, 6], 4: [4, 11, 12, 14, 6], 5: [4, 11, 13, 14, 6], 6: [4, 11, 12, 9, 10, 6], 7: [4, 11, 13, 9, 10, 6], 8: [4, 5, 7, 8, 9, 13, 14, 6], 9: [4, 2, 1, 3, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781101f0>, {0: [4, 5, 7], 1: [4, 5, 6, 10, 7], 2: [4, 11, 12, 9, 8, 7], 3: [4, 11, 13, 9, 8, 7], 4: [4, 11, 12, 14, 13, 9, 8, 7], 5: [4, 2, 1, 8, 7], 6: [4, 11, 12, 9, 10, 7], 7: [4, 11, 13, 14, 12, 9, 8, 7], 8: [4, 2, 3, 6, 5, 7], 9: [4, 5, 6, 10, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78110160>, {0: [4, 5, 7, 8], 1: [4, 11, 12, 9, 8], 2: [4, 11, 13, 9, 8], 3: [4, 5, 7, 10, 9, 8], 4: [4, 11, 12, 14, 13, 9, 8], 5: [4, 2, 1, 8], 6: [4, 11, 13, 14, 12, 9, 8], 7: [4, 5, 6, 10, 9, 8], 8: [4, 5, 6, 14, 13, 9, 8], 9: [4, 5, 6, 10, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781100d0>, {0: [4, 5, 7, 8, 9], 1: [4, 11, 12, 9], 2: [4, 11, 13, 9], 3: [4, 5, 7, 10, 9], 4: [4, 11, 12, 14, 13, 9], 5: [4, 11, 13, 14, 12, 9], 6: [4, 5, 6, 10, 9], 7: [4, 5, 6, 14, 13, 9], 8: [4, 5, 6, 14, 12, 9], 9: [4, 2, 1, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78110040>, {0: [4, 5, 7, 10], 1: [4, 5, 6, 10], 2: [4, 5, 7, 8, 9, 10], 3: [4, 11, 12, 9, 10], 4: [4, 11, 13, 9, 10], 5: [4, 11, 12, 14, 13, 9, 10], 6: [4, 2, 3, 6, 10], 7: [4, 11, 13, 14, 12, 9, 10], 8: [4, 5, 6, 14, 13, 9, 10], 9: [4, 5, 6, 14, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111990>, {0: [4, 11], 1: [4, 5, 7, 8, 9, 12, 11], 2: [4, 5, 7, 8, 9, 13, 11], 3: [4, 5, 7, 8, 9, 13, 14, 12, 11], 4: [4, 5, 7, 10, 9, 12, 11], 5: [4, 5, 7, 8, 9, 12, 14, 13, 11], 6: [4, 5, 7, 10, 9, 13, 11], 7: [4, 5, 6, 14, 13, 11], 8: [4, 5, 6, 10, 9, 12, 11], 9: [4, 5, 6, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111a20>, {0: [4, 11, 12], 1: [4, 5, 7, 8, 9, 12], 2: [4, 11, 13, 14, 12], 3: [4, 11, 13, 9, 12], 4: [4, 5, 7, 8, 9, 13, 14, 12], 5: [4, 5, 7, 10, 9, 12], 6: [4, 5, 6, 10, 9, 12], 7: [4, 5, 6, 14, 12], 8: [4, 5, 7, 10, 9, 13, 14, 12], 9: [4, 5, 7, 8, 9, 13, 11, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111ab0>, {0: [4, 11, 13], 1: [4, 5, 7, 8, 9, 13], 2: [4, 11, 12, 14, 13], 3: [4, 11, 12, 9, 13], 4: [4, 5, 7, 8, 9, 12, 14, 13], 5: [4, 5, 7, 10, 9, 13], 6: [4, 5, 6, 14, 13], 7: [4, 5, 6, 10, 9, 13], 8: [4, 5, 7, 10, 9, 12, 14, 13], 9: [4, 5, 7, 8, 9, 12, 11, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111b40>, {0: [4, 11, 12, 14], 1: [4, 11, 13, 14], 2: [4, 5, 7, 8, 9, 13, 14], 3: [4, 11, 12, 9, 13, 14], 4: [4, 5, 7, 8, 9, 12, 14], 5: [4, 11, 13, 9, 12, 14], 6: [4, 5, 6, 14], 7: [4, 5, 7, 10, 9, 13, 14], 8: [4, 5, 7, 10, 9, 12, 14], 9: [4, 5, 6, 10, 9, 13, 14]})}), 5: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed78111bd0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111c60>, {0: [5, 4, 2, 1], 1: [5, 4, 2, 3, 1], 2: [5, 7, 8, 1], 3: [5, 6, 3, 1], 4: [5, 6, 3, 2, 1], 5: [5, 7, 10, 9, 8, 1], 6: [5, 6, 10, 9, 8, 1], 7: [5, 7, 10, 6, 3, 1], 8: [5, 7, 10, 6, 3, 2, 1], 9: [5, 4, 11, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111cf0>, {0: [5, 4, 2], 1: [5, 6, 3, 2], 2: [5, 7, 8, 1, 2], 3: [5, 7, 10, 6, 3, 2], 4: [5, 6, 3, 1, 2], 5: [5, 7, 8, 9, 12, 11, 4, 2], 6: [5, 7, 8, 1, 3, 2], 7: [5, 7, 8, 9, 13, 11, 4, 2], 8: [5, 7, 8, 9, 13, 14, 12, 11, 4, 2], 9: [5, 7, 10, 9, 12, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111d80>, {0: [5, 4, 2, 3], 1: [5, 6, 3], 2: [5, 4, 2, 1, 3], 3: [5, 7, 10, 6, 3], 4: [5, 7, 8, 1, 3], 5: [5, 7, 8, 1, 2, 3], 6: [5, 7, 8, 9, 10, 6, 3], 7: [5, 7, 8, 9, 13, 14, 6, 3], 8: [5, 7, 8, 9, 12, 14, 6, 3], 9: [5, 7, 8, 9, 12, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111e10>, {0: [5, 4], 1: [5, 6, 3, 2, 4], 2: [5, 7, 8, 9, 12, 11, 4], 3: [5, 7, 8, 9, 13, 11, 4], 4: [5, 7, 8, 9, 13, 14, 12, 11, 4], 5: [5, 7, 10, 9, 12, 11, 4], 6: [5, 7, 8, 1, 2, 4], 7: [5, 7, 8, 9, 12, 14, 13, 11, 4], 8: [5, 7, 10, 9, 13, 11, 4], 9: [5, 6, 14, 13, 11, 4]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111ea0>, {0: [5, 6], 1: [5, 7, 10, 6], 2: [5, 4, 2, 3, 6], 3: [5, 7, 8, 9, 10, 6], 4: [5, 7, 8, 9, 13, 14, 6], 5: [5, 7, 8, 9, 12, 14, 6], 6: [5, 7, 10, 9, 13, 14, 6], 7: [5, 7, 10, 9, 12, 14, 6], 8: [5, 4, 11, 12, 14, 6], 9: [5, 4, 11, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111f30>, {0: [5, 7], 1: [5, 6, 10, 7], 2: [5, 6, 10, 9, 8, 7], 3: [5, 4, 11, 12, 9, 8, 7], 4: [5, 6, 14, 13, 9, 8, 7], 5: [5, 4, 11, 13, 9, 8, 7], 6: [5, 6, 14, 12, 9, 8, 7], 7: [5, 4, 11, 12, 14, 13, 9, 8, 7], 8: [5, 4, 2, 1, 8, 7], 9: [5, 4, 11, 12, 9, 10, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78111fc0>, {0: [5, 7, 8], 1: [5, 7, 10, 9, 8], 2: [5, 6, 10, 9, 8], 3: [5, 4, 11, 12, 9, 8], 4: [5, 6, 14, 13, 9, 8], 5: [5, 6, 10, 7, 8], 6: [5, 4, 11, 13, 9, 8], 7: [5, 6, 14, 12, 9, 8], 8: [5, 4, 11, 12, 14, 13, 9, 8], 9: [5, 4, 2, 1, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112050>, {0: [5, 7, 8, 9], 1: [5, 7, 10, 9], 2: [5, 6, 10, 9], 3: [5, 4, 11, 12, 9], 4: [5, 6, 14, 13, 9], 5: [5, 4, 11, 13, 9], 6: [5, 6, 14, 12, 9], 7: [5, 4, 11, 12, 14, 13, 9], 8: [5, 4, 11, 13, 14, 12, 9], 9: [5, 6, 14, 13, 11, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781120e0>, {0: [5, 7, 10], 1: [5, 6, 10], 2: [5, 7, 8, 9, 10], 3: [5, 4, 11, 12, 9, 10], 4: [5, 6, 14, 13, 9, 10], 5: [5, 4, 11, 13, 9, 10], 6: [5, 6, 14, 12, 9, 10], 7: [5, 4, 11, 12, 14, 13, 9, 10], 8: [5, 4, 2, 3, 6, 10], 9: [5, 4, 11, 13, 14, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112170>, {0: [5, 4, 11], 1: [5, 7, 8, 9, 12, 11], 2: [5, 7, 8, 9, 13, 11], 3: [5, 7, 8, 9, 13, 14, 12, 11], 4: [5, 7, 10, 9, 12, 11], 5: [5, 7, 8, 9, 12, 14, 13, 11], 6: [5, 7, 10, 9, 13, 11], 7: [5, 6, 14, 13, 11], 8: [5, 6, 10, 9, 12, 11], 9: [5, 6, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112200>, {0: [5, 7, 8, 9, 12], 1: [5, 7, 8, 9, 13, 14, 12], 2: [5, 7, 10, 9, 12], 3: [5, 4, 11, 12], 4: [5, 6, 10, 9, 12], 5: [5, 6, 14, 12], 6: [5, 7, 10, 9, 13, 14, 12], 7: [5, 7, 8, 9, 13, 11, 12], 8: [5, 4, 11, 13, 14, 12], 9: [5, 6, 10, 9, 13, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112290>, {0: [5, 7, 8, 9, 13], 1: [5, 7, 8, 9, 12, 14, 13], 2: [5, 7, 10, 9, 13], 3: [5, 6, 14, 13], 4: [5, 4, 11, 13], 5: [5, 6, 10, 9, 13], 6: [5, 7, 10, 9, 12, 14, 13], 7: [5, 4, 11, 12, 14, 13], 8: [5, 7, 8, 9, 12, 11, 13], 9: [5, 6, 10, 9, 12, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112320>, {0: [5, 7, 8, 9, 13, 14], 1: [5, 7, 8, 9, 12, 14], 2: [5, 6, 14], 3: [5, 7, 10, 9, 13, 14], 4: [5, 7, 10, 9, 12, 14], 5: [5, 4, 11, 12, 14], 6: [5, 6, 10, 9, 13, 14], 7: [5, 4, 11, 13, 14], 8: [5, 6, 10, 9, 12, 14], 9: [5, 7, 8, 9, 12, 11, 13, 14]})}), 6: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed781123b0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112440>, {0: [6, 3, 1], 1: [6, 3, 2, 1], 2: [6, 5, 4, 2, 1], 3: [6, 5, 4, 2, 3, 1], 4: [6, 10, 9, 8, 1], 5: [6, 5, 7, 8, 1], 6: [6, 14, 13, 9, 8, 1], 7: [6, 10, 7, 5, 4, 2, 1], 8: [6, 14, 12, 9, 8, 1], 9: [6, 10, 7, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781124d0>, {0: [6, 3, 2], 1: [6, 5, 4, 2], 2: [6, 3, 1, 2], 3: [6, 10, 7, 5, 4, 2], 4: [6, 10, 9, 8, 7, 5, 4, 2], 5: [6, 14, 13, 11, 4, 2], 6: [6, 10, 9, 12, 11, 4, 2], 7: [6, 14, 12, 11, 4, 2], 8: [6, 10, 9, 13, 11, 4, 2], 9: [6, 14, 13, 9, 8, 7, 5, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112560>, {0: [6, 3], 1: [6, 5, 4, 2, 3], 2: [6, 10, 7, 5, 4, 2, 3], 3: [6, 5, 4, 2, 1, 3], 4: [6, 10, 9, 8, 7, 5, 4, 2, 3], 5: [6, 14, 13, 11, 4, 2, 3], 6: [6, 10, 9, 12, 11, 4, 2, 3], 7: [6, 14, 12, 11, 4, 2, 3], 8: [6, 10, 9, 13, 11, 4, 2, 3], 9: [6, 14, 13, 9, 8, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781125f0>, {0: [6, 5, 4], 1: [6, 3, 2, 4], 2: [6, 10, 7, 5, 4], 3: [6, 10, 9, 8, 7, 5, 4], 4: [6, 14, 13, 11, 4], 5: [6, 10, 9, 12, 11, 4], 6: [6, 14, 12, 11, 4], 7: [6, 10, 9, 13, 11, 4], 8: [6, 14, 13, 9, 8, 7, 5, 4], 9: [6, 3, 1, 2, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112680>, {0: [6, 5], 1: [6, 10, 7, 5], 2: [6, 3, 2, 4, 5], 3: [6, 10, 9, 8, 7, 5], 4: [6, 14, 13, 9, 8, 7, 5], 5: [6, 14, 12, 9, 8, 7, 5], 6: [6, 14, 13, 9, 10, 7, 5], 7: [6, 14, 12, 9, 10, 7, 5], 8: [6, 10, 9, 12, 11, 4, 5], 9: [6, 14, 13, 11, 4, 5]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112710>, {0: [6, 5, 7], 1: [6, 10, 7], 2: [6, 10, 9, 8, 7], 3: [6, 14, 13, 9, 8, 7], 4: [6, 14, 12, 9, 8, 7], 5: [6, 3, 2, 4, 5, 7], 6: [6, 14, 13, 9, 10, 7], 7: [6, 14, 12, 9, 10, 7], 8: [6, 14, 13, 11, 12, 9, 8, 7], 9: [6, 14, 12, 11, 13, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781127a0>, {0: [6, 5, 7, 8], 1: [6, 10, 9, 8], 2: [6, 14, 13, 9, 8], 3: [6, 10, 7, 8], 4: [6, 14, 12, 9, 8], 5: [6, 14, 13, 11, 12, 9, 8], 6: [6, 14, 12, 11, 13, 9, 8], 7: [6, 5, 7, 10, 9, 8], 8: [6, 3, 2, 4, 5, 7, 8], 9: [6, 14, 13, 9, 10, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112830>, {0: [6, 10, 9], 1: [6, 14, 13, 9], 2: [6, 14, 12, 9], 3: [6, 5, 7, 8, 9], 4: [6, 14, 13, 11, 12, 9], 5: [6, 14, 12, 11, 13, 9], 6: [6, 10, 7, 8, 9], 7: [6, 5, 7, 10, 9], 8: [6, 5, 4, 11, 12, 9], 9: [6, 5, 4, 11, 13, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781128c0>, {0: [6, 10], 1: [6, 14, 13, 9, 10], 2: [6, 5, 7, 10], 3: [6, 14, 12, 9, 10], 4: [6, 5, 7, 8, 9, 10], 5: [6, 14, 13, 11, 12, 9, 10], 6: [6, 14, 12, 11, 13, 9, 10], 7: [6, 14, 13, 9, 8, 7, 10], 8: [6, 14, 12, 9, 8, 7, 10], 9: [6, 5, 4, 11, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112950>, {0: [6, 14, 13, 11], 1: [6, 10, 9, 12, 11], 2: [6, 14, 12, 11], 3: [6, 10, 9, 13, 11], 4: [6, 14, 13, 9, 12, 11], 5: [6, 10, 9, 13, 14, 12, 11], 6: [6, 10, 9, 12, 14, 13, 11], 7: [6, 14, 12, 9, 13, 11], 8: [6, 5, 4, 11], 9: [6, 5, 7, 8, 9, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781129e0>, {0: [6, 10, 9, 12], 1: [6, 14, 12], 2: [6, 10, 9, 13, 14, 12], 3: [6, 14, 13, 9, 12], 4: [6, 14, 13, 11, 12], 5: [6, 10, 9, 13, 11, 12], 6: [6, 5, 7, 8, 9, 12], 7: [6, 5, 7, 8, 9, 13, 14, 12], 8: [6, 10, 7, 8, 9, 12], 9: [6, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112a70>, {0: [6, 14, 13], 1: [6, 10, 9, 13], 2: [6, 10, 9, 12, 14, 13], 3: [6, 14, 12, 9, 13], 4: [6, 10, 9, 12, 11, 13], 5: [6, 14, 12, 11, 13], 6: [6, 5, 7, 8, 9, 13], 7: [6, 5, 7, 8, 9, 12, 14, 13], 8: [6, 10, 7, 8, 9, 13], 9: [6, 5, 7, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112b00>, {0: [6, 14], 1: [6, 10, 9, 13, 14], 2: [6, 10, 9, 12, 14], 3: [6, 10, 9, 12, 11, 13, 14], 4: [6, 5, 7, 8, 9, 13, 14], 5: [6, 10, 9, 13, 11, 12, 14], 6: [6, 5, 7, 8, 9, 12, 14], 7: [6, 10, 7, 8, 9, 13, 14], 8: [6, 5, 7, 10, 9, 13, 14], 9: [6, 10, 7, 8, 9, 12, 14]})}), 7: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed78112b90>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112c20>, {0: [7, 5, 4, 2, 1], 1: [7, 8, 1], 2: [7, 5, 4, 2, 3, 1], 3: [7, 5, 6, 3, 1], 4: [7, 10, 9, 8, 1], 5: [7, 5, 6, 3, 2, 1], 6: [7, 10, 6, 3, 1], 7: [7, 10, 6, 3, 2, 1], 8: [7, 10, 6, 5, 4, 2, 1], 9: [7, 8, 9, 12, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112cb0>, {0: [7, 5, 4, 2], 1: [7, 8, 1, 2], 2: [7, 5, 6, 3, 2], 3: [7, 10, 6, 3, 2], 4: [7, 10, 6, 5, 4, 2], 5: [7, 8, 9, 12, 11, 4, 2], 6: [7, 8, 1, 3, 2], 7: [7, 8, 9, 13, 11, 4, 2], 8: [7, 8, 9, 13, 14, 12, 11, 4, 2], 9: [7, 10, 9, 12, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112d40>, {0: [7, 5, 4, 2, 3], 1: [7, 5, 6, 3], 2: [7, 10, 6, 3], 3: [7, 5, 4, 2, 1, 3], 4: [7, 8, 1, 3], 5: [7, 8, 1, 2, 3], 6: [7, 8, 9, 10, 6, 3], 7: [7, 10, 6, 5, 4, 2, 3], 8: [7, 8, 9, 13, 14, 6, 3], 9: [7, 8, 9, 12, 14, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112dd0>, {0: [7, 5, 4], 1: [7, 10, 6, 5, 4], 2: [7, 8, 9, 12, 11, 4], 3: [7, 8, 9, 13, 11, 4], 4: [7, 8, 9, 13, 14, 12, 11, 4], 5: [7, 5, 6, 3, 2, 4], 6: [7, 10, 9, 12, 11, 4], 7: [7, 8, 1, 2, 4], 8: [7, 8, 9, 12, 14, 13, 11, 4], 9: [7, 8, 9, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112e60>, {0: [7, 5], 1: [7, 10, 6, 5], 2: [7, 8, 9, 10, 6, 5], 3: [7, 8, 9, 13, 14, 6, 5], 4: [7, 8, 9, 12, 11, 4, 5], 5: [7, 8, 9, 13, 11, 4, 5], 6: [7, 8, 9, 12, 14, 6, 5], 7: [7, 8, 9, 13, 14, 12, 11, 4, 5], 8: [7, 10, 9, 13, 14, 6, 5], 9: [7, 8, 1, 2, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112ef0>, {0: [7, 5, 6], 1: [7, 10, 6], 2: [7, 8, 9, 10, 6], 3: [7, 8, 9, 13, 14, 6], 4: [7, 8, 9, 12, 14, 6], 5: [7, 5, 4, 2, 3, 6], 6: [7, 10, 9, 13, 14, 6], 7: [7, 10, 9, 12, 14, 6], 8: [7, 8, 9, 12, 11, 13, 14, 6], 9: [7, 8, 9, 13, 11, 12, 14, 6]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78112f80>, {0: [7, 8], 1: [7, 10, 9, 8], 2: [7, 5, 6, 10, 9, 8], 3: [7, 5, 4, 11, 12, 9, 8], 4: [7, 5, 6, 14, 13, 9, 8], 5: [7, 5, 4, 11, 13, 9, 8], 6: [7, 5, 6, 14, 12, 9, 8], 7: [7, 5, 4, 11, 12, 14, 13, 9, 8], 8: [7, 10, 6, 14, 13, 9, 8], 9: [7, 5, 4, 2, 1, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113010>, {0: [7, 8, 9], 1: [7, 10, 9], 2: [7, 5, 6, 10, 9], 3: [7, 5, 4, 11, 12, 9], 4: [7, 5, 6, 14, 13, 9], 5: [7, 5, 4, 11, 13, 9], 6: [7, 5, 6, 14, 12, 9], 7: [7, 5, 4, 11, 12, 14, 13, 9], 8: [7, 10, 6, 14, 13, 9], 9: [7, 5, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781130a0>, {0: [7, 10], 1: [7, 8, 9, 10], 2: [7, 5, 6, 10], 3: [7, 8, 9, 13, 14, 6, 10], 4: [7, 5, 4, 11, 12, 9, 10], 5: [7, 5, 6, 14, 13, 9, 10], 6: [7, 8, 9, 12, 14, 6, 10], 7: [7, 5, 4, 11, 13, 9, 10], 8: [7, 5, 6, 14, 12, 9, 10], 9: [7, 5, 4, 11, 12, 14, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113130>, {0: [7, 8, 9, 12, 11], 1: [7, 8, 9, 13, 11], 2: [7, 8, 9, 13, 14, 12, 11], 3: [7, 10, 9, 12, 11], 4: [7, 8, 9, 12, 14, 13, 11], 5: [7, 5, 4, 11], 6: [7, 10, 9, 13, 11], 7: [7, 10, 9, 13, 14, 12, 11], 8: [7, 10, 9, 12, 14, 13, 11], 9: [7, 5, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781131c0>, {0: [7, 8, 9, 12], 1: [7, 8, 9, 13, 14, 12], 2: [7, 10, 9, 12], 3: [7, 10, 9, 13, 14, 12], 4: [7, 8, 9, 13, 11, 12], 5: [7, 5, 4, 11, 12], 6: [7, 10, 9, 13, 11, 12], 7: [7, 5, 6, 10, 9, 12], 8: [7, 5, 6, 14, 12], 9: [7, 5, 4, 11, 13, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113250>, {0: [7, 8, 9, 13], 1: [7, 8, 9, 12, 14, 13], 2: [7, 10, 9, 13], 3: [7, 10, 9, 12, 14, 13], 4: [7, 8, 9, 12, 11, 13], 5: [7, 5, 6, 14, 13], 6: [7, 10, 9, 12, 11, 13], 7: [7, 5, 4, 11, 13], 8: [7, 5, 6, 10, 9, 13], 9: [7, 5, 4, 11, 12, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781132e0>, {0: [7, 8, 9, 13, 14], 1: [7, 8, 9, 12, 14], 2: [7, 10, 9, 13, 14], 3: [7, 10, 9, 12, 14], 4: [7, 8, 9, 12, 11, 13, 14], 5: [7, 8, 9, 13, 11, 12, 14], 6: [7, 5, 6, 14], 7: [7, 10, 9, 12, 11, 13, 14], 8: [7, 10, 9, 13, 11, 12, 14], 9: [7, 5, 4, 11, 12, 14]})}), 8: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed78113370>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113400>, {0: [8, 1], 1: [8, 7, 5, 4, 2, 1], 2: [8, 7, 5, 4, 2, 3, 1], 3: [8, 9, 12, 11, 4, 2, 1], 4: [8, 9, 13, 11, 4, 2, 1], 5: [8, 7, 5, 6, 3, 1], 6: [8, 9, 10, 6, 3, 1], 7: [8, 9, 13, 14, 12, 11, 4, 2, 1], 8: [8, 9, 10, 7, 5, 4, 2, 1], 9: [8, 9, 12, 14, 13, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113490>, {0: [8, 7, 5, 4, 2], 1: [8, 1, 2], 2: [8, 9, 12, 11, 4, 2], 3: [8, 1, 3, 2], 4: [8, 9, 13, 11, 4, 2], 5: [8, 9, 10, 7, 5, 4, 2], 6: [8, 9, 13, 14, 12, 11, 4, 2], 7: [8, 7, 5, 6, 3, 2], 8: [8, 9, 12, 14, 13, 11, 4, 2], 9: [8, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113520>, {0: [8, 7, 5, 4, 2, 3], 1: [8, 1, 3], 2: [8, 1, 2, 3], 3: [8, 7, 5, 6, 3], 4: [8, 9, 10, 6, 3], 5: [8, 9, 13, 14, 6, 3], 6: [8, 7, 10, 6, 3], 7: [8, 9, 12, 14, 6, 3], 8: [8, 9, 12, 11, 4, 2, 3], 9: [8, 9, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781135b0>, {0: [8, 7, 5, 4], 1: [8, 9, 12, 11, 4], 2: [8, 9, 13, 11, 4], 3: [8, 9, 10, 7, 5, 4], 4: [8, 9, 13, 14, 12, 11, 4], 5: [8, 1, 2, 4], 6: [8, 9, 12, 14, 13, 11, 4], 7: [8, 9, 10, 6, 5, 4], 8: [8, 9, 13, 14, 6, 5, 4], 9: [8, 7, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113640>, {0: [8, 7, 5], 1: [8, 9, 10, 7, 5], 2: [8, 9, 10, 6, 5], 3: [8, 9, 13, 14, 6, 5], 4: [8, 9, 12, 11, 4, 5], 5: [8, 7, 10, 6, 5], 6: [8, 9, 13, 11, 4, 5], 7: [8, 9, 12, 14, 6, 5], 8: [8, 9, 13, 14, 12, 11, 4, 5], 9: [8, 1, 2, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781136d0>, {0: [8, 7, 5, 6], 1: [8, 9, 10, 6], 2: [8, 9, 13, 14, 6], 3: [8, 7, 10, 6], 4: [8, 9, 12, 14, 6], 5: [8, 9, 12, 11, 13, 14, 6], 6: [8, 9, 13, 11, 12, 14, 6], 7: [8, 9, 10, 7, 5, 6], 8: [8, 7, 5, 4, 2, 3, 6], 9: [8, 7, 10, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113760>, {0: [8, 7], 1: [8, 9, 10, 7], 2: [8, 9, 10, 6, 5, 7], 3: [8, 9, 13, 14, 6, 5, 7], 4: [8, 9, 12, 11, 4, 5, 7], 5: [8, 9, 13, 11, 4, 5, 7], 6: [8, 9, 12, 14, 6, 5, 7], 7: [8, 9, 13, 14, 12, 11, 4, 5, 7], 8: [8, 1, 2, 4, 5, 7], 9: [8, 9, 13, 14, 6, 10, 7]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781137f0>, {0: [8, 9], 1: [8, 7, 10, 9], 2: [8, 7, 5, 6, 10, 9], 3: [8, 7, 5, 4, 11, 12, 9], 4: [8, 7, 5, 6, 14, 13, 9], 5: [8, 7, 5, 4, 11, 13, 9], 6: [8, 7, 5, 6, 14, 12, 9], 7: [8, 7, 5, 4, 11, 12, 14, 13, 9], 8: [8, 7, 10, 6, 14, 13, 9], 9: [8, 7, 5, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113880>, {0: [8, 9, 10], 1: [8, 7, 10], 2: [8, 7, 5, 6, 10], 3: [8, 9, 13, 14, 6, 10], 4: [8, 9, 12, 14, 6, 10], 5: [8, 9, 12, 11, 13, 14, 6, 10], 6: [8, 7, 5, 4, 11, 12, 9, 10], 7: [8, 7, 5, 6, 14, 13, 9, 10], 8: [8, 9, 13, 11, 12, 14, 6, 10], 9: [8, 7, 5, 4, 11, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113910>, {0: [8, 9, 12, 11], 1: [8, 9, 13, 11], 2: [8, 9, 13, 14, 12, 11], 3: [8, 9, 12, 14, 13, 11], 4: [8, 7, 10, 9, 12, 11], 5: [8, 7, 5, 4, 11], 6: [8, 7, 10, 9, 13, 11], 7: [8, 7, 10, 9, 13, 14, 12, 11], 8: [8, 7, 10, 9, 12, 14, 13, 11], 9: [8, 9, 10, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781139a0>, {0: [8, 9, 12], 1: [8, 9, 13, 14, 12], 2: [8, 9, 13, 11, 12], 3: [8, 7, 10, 9, 12], 4: [8, 7, 10, 9, 13, 14, 12], 5: [8, 7, 5, 4, 11, 12], 6: [8, 7, 10, 9, 13, 11, 12], 7: [8, 9, 10, 6, 14, 12], 8: [8, 7, 5, 6, 10, 9, 12], 9: [8, 7, 5, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113a30>, {0: [8, 9, 13], 1: [8, 9, 12, 14, 13], 2: [8, 9, 12, 11, 13], 3: [8, 7, 10, 9, 13], 4: [8, 7, 10, 9, 12, 14, 13], 5: [8, 9, 10, 6, 14, 13], 6: [8, 7, 5, 6, 14, 13], 7: [8, 7, 10, 9, 12, 11, 13], 8: [8, 7, 5, 4, 11, 13], 9: [8, 7, 5, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113ac0>, {0: [8, 9, 13, 14], 1: [8, 9, 12, 14], 2: [8, 9, 12, 11, 13, 14], 3: [8, 9, 13, 11, 12, 14], 4: [8, 7, 10, 9, 13, 14], 5: [8, 7, 10, 9, 12, 14], 6: [8, 9, 10, 6, 14], 7: [8, 7, 5, 6, 14], 8: [8, 7, 10, 9, 12, 11, 13, 14], 9: [8, 7, 10, 9, 13, 11, 12, 14]})}), 9: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed78113b50>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113be0>, {0: [9, 8, 1], 1: [9, 8, 7, 5, 4, 2, 1], 2: [9, 12, 11, 4, 2, 1], 3: [9, 13, 11, 4, 2, 1], 4: [9, 10, 6, 3, 1], 5: [9, 13, 14, 12, 11, 4, 2, 1], 6: [9, 10, 7, 5, 4, 2, 1], 7: [9, 12, 14, 13, 11, 4, 2, 1], 8: [9, 10, 6, 3, 2, 1], 9: [9, 10, 7, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113c70>, {0: [9, 8, 7, 5, 4, 2], 1: [9, 12, 11, 4, 2], 2: [9, 13, 11, 4, 2], 3: [9, 10, 7, 5, 4, 2], 4: [9, 13, 14, 12, 11, 4, 2], 5: [9, 8, 1, 2], 6: [9, 12, 14, 13, 11, 4, 2], 7: [9, 10, 6, 3, 2], 8: [9, 10, 6, 5, 4, 2], 9: [9, 13, 14, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113d00>, {0: [9, 10, 6, 3], 1: [9, 13, 14, 6, 3], 2: [9, 8, 7, 5, 4, 2, 3], 3: [9, 12, 14, 6, 3], 4: [9, 12, 11, 4, 2, 3], 5: [9, 13, 11, 4, 2, 3], 6: [9, 10, 7, 5, 4, 2, 3], 7: [9, 13, 14, 12, 11, 4, 2, 3], 8: [9, 8, 1, 3], 9: [9, 12, 14, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113d90>, {0: [9, 8, 7, 5, 4], 1: [9, 12, 11, 4], 2: [9, 13, 11, 4], 3: [9, 10, 7, 5, 4], 4: [9, 13, 14, 12, 11, 4], 5: [9, 12, 14, 13, 11, 4], 6: [9, 10, 6, 5, 4], 7: [9, 13, 14, 6, 5, 4], 8: [9, 12, 14, 6, 5, 4], 9: [9, 8, 1, 2, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113e20>, {0: [9, 8, 7, 5], 1: [9, 10, 7, 5], 2: [9, 10, 6, 5], 3: [9, 13, 14, 6, 5], 4: [9, 12, 11, 4, 5], 5: [9, 13, 11, 4, 5], 6: [9, 12, 14, 6, 5], 7: [9, 13, 14, 12, 11, 4, 5], 8: [9, 12, 14, 13, 11, 4, 5], 9: [9, 12, 11, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113eb0>, {0: [9, 10, 6], 1: [9, 13, 14, 6], 2: [9, 12, 14, 6], 3: [9, 8, 7, 5, 6], 4: [9, 12, 11, 13, 14, 6], 5: [9, 13, 11, 12, 14, 6], 6: [9, 10, 7, 5, 6], 7: [9, 8, 7, 10, 6], 8: [9, 12, 11, 4, 5, 6], 9: [9, 13, 11, 4, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed78113f40>, {0: [9, 8, 7], 1: [9, 10, 7], 2: [9, 10, 6, 5, 7], 3: [9, 13, 14, 6, 5, 7], 4: [9, 12, 11, 4, 5, 7], 5: [9, 13, 11, 4, 5, 7], 6: [9, 12, 14, 6, 5, 7], 7: [9, 13, 14, 12, 11, 4, 5, 7], 8: [9, 13, 14, 6, 10, 7], 9: [9, 12, 14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc040>, {0: [9, 8], 1: [9, 10, 7, 8], 2: [9, 10, 6, 5, 7, 8], 3: [9, 13, 14, 6, 5, 7, 8], 4: [9, 12, 11, 4, 5, 7, 8], 5: [9, 13, 11, 4, 5, 7, 8], 6: [9, 12, 14, 6, 5, 7, 8], 7: [9, 13, 14, 12, 11, 4, 5, 7, 8], 8: [9, 13, 14, 6, 10, 7, 8], 9: [9, 12, 14, 13, 11, 4, 5, 7, 8]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc0d0>, {0: [9, 10], 1: [9, 8, 7, 10], 2: [9, 13, 14, 6, 10], 3: [9, 12, 14, 6, 10], 4: [9, 8, 7, 5, 6, 10], 5: [9, 12, 11, 13, 14, 6, 10], 6: [9, 13, 11, 12, 14, 6, 10], 7: [9, 13, 14, 6, 5, 7, 10], 8: [9, 12, 11, 4, 5, 7, 10], 9: [9, 12, 14, 6, 5, 7, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc160>, {0: [9, 12, 11], 1: [9, 13, 11], 2: [9, 13, 14, 12, 11], 3: [9, 12, 14, 13, 11], 4: [9, 10, 6, 14, 13, 11], 5: [9, 10, 6, 14, 12, 11], 6: [9, 8, 7, 5, 4, 11], 7: [9, 10, 7, 5, 4, 11], 8: [9, 10, 6, 5, 4, 11], 9: [9, 13, 14, 6, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc1f0>, {0: [9, 12], 1: [9, 13, 14, 12], 2: [9, 13, 11, 12], 3: [9, 10, 6, 14, 12], 4: [9, 10, 6, 14, 13, 11, 12], 5: [9, 8, 7, 5, 4, 11, 12], 6: [9, 8, 7, 5, 6, 14, 12], 7: [9, 10, 7, 5, 4, 11, 12], 8: [9, 8, 7, 5, 4, 11, 13, 14, 12], 9: [9, 8, 7, 10, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc280>, {0: [9, 13], 1: [9, 12, 14, 13], 2: [9, 12, 11, 13], 3: [9, 10, 6, 14, 13], 4: [9, 8, 7, 5, 6, 14, 13], 5: [9, 10, 6, 14, 12, 11, 13], 6: [9, 8, 7, 5, 4, 11, 13], 7: [9, 8, 7, 5, 4, 11, 12, 14, 13], 8: [9, 10, 7, 5, 6, 14, 13], 9: [9, 8, 7, 10, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc310>, {0: [9, 13, 14], 1: [9, 12, 14], 2: [9, 12, 11, 13, 14], 3: [9, 13, 11, 12, 14], 4: [9, 10, 6, 14], 5: [9, 8, 7, 5, 6, 14], 6: [9, 8, 7, 5, 4, 11, 12, 14], 7: [9, 8, 7, 5, 4, 11, 13, 14], 8: [9, 10, 7, 5, 6, 14], 9: [9, 8, 7, 10, 6, 14]})}), 10: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed781cc3a0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc430>, {0: [10, 9, 8, 1], 1: [10, 6, 3, 1], 2: [10, 7, 5, 4, 2, 1], 3: [10, 6, 3, 2, 1], 4: [10, 7, 8, 1], 5: [10, 6, 5, 4, 2, 1], 6: [10, 9, 8, 7, 5, 4, 2, 1], 7: [10, 9, 12, 11, 4, 2, 1], 8: [10, 7, 5, 4, 2, 3, 1], 9: [10, 9, 13, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc4c0>, {0: [10, 7, 5, 4, 2], 1: [10, 6, 3, 2], 2: [10, 6, 5, 4, 2], 3: [10, 9, 8, 7, 5, 4, 2], 4: [10, 9, 12, 11, 4, 2], 5: [10, 9, 13, 11, 4, 2], 6: [10, 9, 13, 14, 12, 11, 4, 2], 7: [10, 9, 8, 1, 2], 8: [10, 9, 12, 14, 13, 11, 4, 2], 9: [10, 6, 3, 1, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc550>, {0: [10, 6, 3], 1: [10, 7, 5, 4, 2, 3], 2: [10, 6, 5, 4, 2, 3], 3: [10, 9, 13, 14, 6, 3], 4: [10, 9, 8, 7, 5, 4, 2, 3], 5: [10, 7, 5, 6, 3], 6: [10, 9, 12, 14, 6, 3], 7: [10, 9, 12, 11, 4, 2, 3], 8: [10, 9, 13, 11, 4, 2, 3], 9: [10, 9, 13, 14, 12, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc5e0>, {0: [10, 7, 5, 4], 1: [10, 6, 5, 4], 2: [10, 9, 8, 7, 5, 4], 3: [10, 9, 12, 11, 4], 4: [10, 9, 13, 11, 4], 5: [10, 9, 13, 14, 12, 11, 4], 6: [10, 6, 3, 2, 4], 7: [10, 9, 12, 14, 13, 11, 4], 8: [10, 9, 13, 14, 6, 5, 4], 9: [10, 9, 12, 14, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc670>, {0: [10, 7, 5], 1: [10, 6, 5], 2: [10, 9, 8, 7, 5], 3: [10, 9, 13, 14, 6, 5], 4: [10, 9, 12, 11, 4, 5], 5: [10, 9, 13, 11, 4, 5], 6: [10, 9, 12, 14, 6, 5], 7: [10, 9, 13, 14, 12, 11, 4, 5], 8: [10, 6, 3, 2, 4, 5], 9: [10, 9, 12, 14, 13, 11, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc700>, {0: [10, 6], 1: [10, 9, 13, 14, 6], 2: [10, 7, 5, 6], 3: [10, 9, 12, 14, 6], 4: [10, 9, 8, 7, 5, 6], 5: [10, 9, 12, 11, 13, 14, 6], 6: [10, 9, 13, 11, 12, 14, 6], 7: [10, 7, 8, 9, 13, 14, 6], 8: [10, 7, 8, 9, 12, 14, 6], 9: [10, 9, 12, 11, 4, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc790>, {0: [10, 7], 1: [10, 9, 8, 7], 2: [10, 6, 5, 7], 3: [10, 9, 13, 14, 6, 5, 7], 4: [10, 6, 14, 13, 9, 8, 7], 5: [10, 9, 12, 11, 4, 5, 7], 6: [10, 9, 13, 11, 4, 5, 7], 7: [10, 6, 14, 12, 9, 8, 7], 8: [10, 9, 12, 14, 6, 5, 7], 9: [10, 9, 13, 14, 12, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc820>, {0: [10, 9, 8], 1: [10, 7, 8], 2: [10, 6, 5, 7, 8], 3: [10, 6, 14, 13, 9, 8], 4: [10, 6, 14, 12, 9, 8], 5: [10, 6, 14, 13, 11, 12, 9, 8], 6: [10, 9, 13, 14, 6, 5, 7, 8], 7: [10, 6, 14, 12, 11, 13, 9, 8], 8: [10, 9, 12, 11, 4, 5, 7, 8], 9: [10, 9, 13, 11, 4, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc8b0>, {0: [10, 9], 1: [10, 7, 8, 9], 2: [10, 6, 14, 13, 9], 3: [10, 6, 14, 12, 9], 4: [10, 6, 5, 7, 8, 9], 5: [10, 6, 14, 13, 11, 12, 9], 6: [10, 6, 14, 12, 11, 13, 9], 7: [10, 7, 5, 4, 11, 12, 9], 8: [10, 7, 5, 6, 14, 13, 9], 9: [10, 7, 5, 4, 11, 13, 9]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc940>, {0: [10, 9, 12, 11], 1: [10, 9, 13, 11], 2: [10, 9, 13, 14, 12, 11], 3: [10, 9, 12, 14, 13, 11], 4: [10, 6, 14, 13, 11], 5: [10, 7, 8, 9, 12, 11], 6: [10, 6, 14, 12, 11], 7: [10, 7, 8, 9, 13, 11], 8: [10, 6, 14, 13, 9, 12, 11], 9: [10, 7, 8, 9, 13, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cc9d0>, {0: [10, 9, 12], 1: [10, 9, 13, 14, 12], 2: [10, 9, 13, 11, 12], 3: [10, 7, 8, 9, 12], 4: [10, 6, 14, 12], 5: [10, 7, 8, 9, 13, 14, 12], 6: [10, 6, 14, 13, 9, 12], 7: [10, 6, 14, 13, 11, 12], 8: [10, 7, 8, 9, 13, 11, 12], 9: [10, 6, 5, 7, 8, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cca60>, {0: [10, 9, 13], 1: [10, 9, 12, 14, 13], 2: [10, 9, 12, 11, 13], 3: [10, 6, 14, 13], 4: [10, 7, 8, 9, 13], 5: [10, 7, 8, 9, 12, 14, 13], 6: [10, 6, 14, 12, 9, 13], 7: [10, 7, 8, 9, 12, 11, 13], 8: [10, 6, 14, 12, 11, 13], 9: [10, 6, 5, 7, 8, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ccaf0>, {0: [10, 9, 13, 14], 1: [10, 9, 12, 14], 2: [10, 9, 12, 11, 13, 14], 3: [10, 9, 13, 11, 12, 14], 4: [10, 6, 14], 5: [10, 7, 8, 9, 13, 14], 6: [10, 7, 8, 9, 12, 14], 7: [10, 7, 8, 9, 12, 11, 13, 14], 8: [10, 6, 5, 7, 8, 9, 13, 14], 9: [10, 7, 8, 9, 13, 11, 12, 14]})}), 11: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed781ccb80>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ccc10>, {0: [11, 4, 2, 1], 1: [11, 12, 9, 8, 1], 2: [11, 13, 9, 8, 1], 3: [11, 12, 14, 13, 9, 8, 1], 4: [11, 13, 14, 12, 9, 8, 1], 5: [11, 4, 2, 3, 1], 6: [11, 12, 9, 8, 7, 5, 4, 2, 1], 7: [11, 13, 9, 8, 7, 5, 4, 2, 1], 8: [11, 12, 14, 13, 9, 8, 7, 5, 4, 2, 1], 9: [11, 12, 9, 10, 6, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ccca0>, {0: [11, 4, 2], 1: [11, 12, 9, 8, 7, 5, 4, 2], 2: [11, 13, 9, 8, 7, 5, 4, 2], 3: [11, 12, 14, 13, 9, 8, 7, 5, 4, 2], 4: [11, 12, 9, 10, 7, 5, 4, 2], 5: [11, 13, 14, 12, 9, 8, 7, 5, 4, 2], 6: [11, 12, 9, 8, 1, 2], 7: [11, 13, 9, 10, 7, 5, 4, 2], 8: [11, 12, 14, 6, 3, 2], 9: [11, 12, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ccd30>, {0: [11, 4, 2, 3], 1: [11, 12, 14, 6, 3], 2: [11, 13, 14, 6, 3], 3: [11, 12, 9, 10, 6, 3], 4: [11, 13, 9, 10, 6, 3], 5: [11, 12, 14, 13, 9, 10, 6, 3], 6: [11, 12, 9, 13, 14, 6, 3], 7: [11, 12, 9, 8, 7, 5, 4, 2, 3], 8: [11, 13, 14, 12, 9, 10, 6, 3], 9: [11, 13, 9, 8, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ccdc0>, {0: [11, 4], 1: [11, 12, 9, 8, 7, 5, 4], 2: [11, 13, 9, 8, 7, 5, 4], 3: [11, 12, 14, 13, 9, 8, 7, 5, 4], 4: [11, 12, 9, 10, 7, 5, 4], 5: [11, 13, 14, 12, 9, 8, 7, 5, 4], 6: [11, 13, 9, 10, 7, 5, 4], 7: [11, 12, 14, 6, 5, 4], 8: [11, 12, 9, 10, 6, 5, 4], 9: [11, 13, 14, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cce50>, {0: [11, 4, 5], 1: [11, 12, 9, 8, 7, 5], 2: [11, 13, 9, 8, 7, 5], 3: [11, 12, 14, 13, 9, 8, 7, 5], 4: [11, 12, 9, 10, 7, 5], 5: [11, 13, 14, 12, 9, 8, 7, 5], 6: [11, 13, 9, 10, 7, 5], 7: [11, 12, 14, 6, 5], 8: [11, 12, 9, 10, 6, 5], 9: [11, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ccee0>, {0: [11, 12, 14, 6], 1: [11, 13, 14, 6], 2: [11, 12, 9, 10, 6], 3: [11, 13, 9, 10, 6], 4: [11, 12, 14, 13, 9, 10, 6], 5: [11, 12, 9, 13, 14, 6], 6: [11, 13, 14, 12, 9, 10, 6], 7: [11, 13, 9, 12, 14, 6], 8: [11, 4, 5, 6], 9: [11, 12, 9, 8, 7, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ccf70>, {0: [11, 12, 9, 8, 7], 1: [11, 13, 9, 8, 7], 2: [11, 12, 14, 13, 9, 8, 7], 3: [11, 12, 9, 10, 7], 4: [11, 13, 14, 12, 9, 8, 7], 5: [11, 4, 5, 7], 6: [11, 13, 9, 10, 7], 7: [11, 12, 14, 13, 9, 10, 7], 8: [11, 13, 14, 12, 9, 10, 7], 9: [11, 12, 14, 6, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd000>, {0: [11, 12, 9, 8], 1: [11, 13, 9, 8], 2: [11, 12, 14, 13, 9, 8], 3: [11, 13, 14, 12, 9, 8], 4: [11, 12, 9, 10, 7, 8], 5: [11, 4, 5, 7, 8], 6: [11, 13, 9, 10, 7, 8], 7: [11, 12, 14, 13, 9, 10, 7, 8], 8: [11, 13, 14, 12, 9, 10, 7, 8], 9: [11, 12, 14, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd090>, {0: [11, 12, 9], 1: [11, 13, 9], 2: [11, 12, 14, 13, 9], 3: [11, 13, 14, 12, 9], 4: [11, 12, 14, 6, 10, 9], 5: [11, 13, 14, 6, 10, 9], 6: [11, 4, 5, 7, 8, 9], 7: [11, 4, 5, 7, 10, 9], 8: [11, 4, 5, 6, 10, 9], 9: [11, 12, 14, 6, 5, 7, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd120>, {0: [11, 12, 9, 10], 1: [11, 13, 9, 10], 2: [11, 12, 14, 13, 9, 10], 3: [11, 13, 14, 12, 9, 10], 4: [11, 12, 9, 8, 7, 10], 5: [11, 12, 14, 6, 10], 6: [11, 13, 14, 6, 10], 7: [11, 13, 9, 8, 7, 10], 8: [11, 12, 14, 13, 9, 8, 7, 10], 9: [11, 12, 9, 13, 14, 6, 10]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd1b0>, {0: [11, 12], 1: [11, 13, 14, 12], 2: [11, 13, 9, 12], 3: [11, 13, 14, 6, 10, 9, 12], 4: [11, 4, 5, 7, 8, 9, 12], 5: [11, 13, 9, 10, 6, 14, 12], 6: [11, 4, 5, 7, 8, 9, 13, 14, 12], 7: [11, 4, 5, 7, 10, 9, 12], 8: [11, 4, 5, 6, 10, 9, 12], 9: [11, 4, 5, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd240>, {0: [11, 13], 1: [11, 12, 14, 13], 2: [11, 12, 9, 13], 3: [11, 12, 9, 10, 6, 14, 13], 4: [11, 12, 14, 6, 10, 9, 13], 5: [11, 4, 5, 7, 8, 9, 13], 6: [11, 4, 5, 7, 8, 9, 12, 14, 13], 7: [11, 4, 5, 7, 10, 9, 13], 8: [11, 4, 5, 6, 14, 13], 9: [11, 4, 5, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd2d0>, {0: [11, 12, 14], 1: [11, 13, 14], 2: [11, 12, 9, 13, 14], 3: [11, 13, 9, 12, 14], 4: [11, 12, 9, 10, 6, 14], 5: [11, 13, 9, 10, 6, 14], 6: [11, 4, 5, 7, 8, 9, 13, 14], 7: [11, 4, 5, 7, 8, 9, 12, 14], 8: [11, 4, 5, 6, 14], 9: [11, 4, 5, 7, 10, 9, 13, 14]})}), 12: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed781cd360>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd3f0>, {0: [12, 9, 8, 1], 1: [12, 14, 13, 9, 8, 1], 2: [12, 11, 4, 2, 1], 3: [12, 9, 8, 7, 5, 4, 2, 1], 4: [12, 11, 13, 9, 8, 1], 5: [12, 14, 13, 11, 4, 2, 1], 6: [12, 9, 13, 11, 4, 2, 1], 7: [12, 14, 13, 9, 8, 7, 5, 4, 2, 1], 8: [12, 14, 6, 3, 1], 9: [12, 11, 4, 2, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd480>, {0: [12, 11, 4, 2], 1: [12, 9, 8, 7, 5, 4, 2], 2: [12, 14, 13, 11, 4, 2], 3: [12, 9, 13, 11, 4, 2], 4: [12, 14, 13, 9, 8, 7, 5, 4, 2], 5: [12, 9, 10, 7, 5, 4, 2], 6: [12, 9, 8, 1, 2], 7: [12, 14, 6, 3, 2], 8: [12, 9, 10, 6, 3, 2], 9: [12, 14, 6, 5, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd510>, {0: [12, 14, 6, 3], 1: [12, 9, 10, 6, 3], 2: [12, 11, 4, 2, 3], 3: [12, 14, 13, 9, 10, 6, 3], 4: [12, 9, 13, 14, 6, 3], 5: [12, 9, 8, 7, 5, 4, 2, 3], 6: [12, 14, 13, 11, 4, 2, 3], 7: [12, 9, 13, 11, 4, 2, 3], 8: [12, 14, 13, 9, 8, 7, 5, 4, 2, 3], 9: [12, 9, 10, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd5a0>, {0: [12, 11, 4], 1: [12, 9, 8, 7, 5, 4], 2: [12, 14, 13, 11, 4], 3: [12, 9, 13, 11, 4], 4: [12, 14, 13, 9, 8, 7, 5, 4], 5: [12, 9, 10, 7, 5, 4], 6: [12, 14, 6, 5, 4], 7: [12, 9, 10, 6, 5, 4], 8: [12, 14, 13, 9, 10, 7, 5, 4], 9: [12, 11, 13, 9, 8, 7, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd630>, {0: [12, 9, 8, 7, 5], 1: [12, 14, 13, 9, 8, 7, 5], 2: [12, 9, 10, 7, 5], 3: [12, 11, 4, 5], 4: [12, 14, 6, 5], 5: [12, 9, 10, 6, 5], 6: [12, 14, 13, 9, 10, 7, 5], 7: [12, 14, 13, 11, 4, 5], 8: [12, 9, 13, 14, 6, 5], 9: [12, 11, 13, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd6c0>, {0: [12, 14, 6], 1: [12, 9, 10, 6], 2: [12, 14, 13, 9, 10, 6], 3: [12, 9, 13, 14, 6], 4: [12, 11, 13, 14, 6], 5: [12, 11, 13, 9, 10, 6], 6: [12, 9, 8, 7, 5, 6], 7: [12, 14, 13, 9, 8, 7, 5, 6], 8: [12, 9, 10, 7, 5, 6], 9: [12, 9, 8, 7, 10, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd750>, {0: [12, 9, 8, 7], 1: [12, 14, 13, 9, 8, 7], 2: [12, 9, 10, 7], 3: [12, 14, 13, 9, 10, 7], 4: [12, 11, 13, 9, 8, 7], 5: [12, 11, 4, 5, 7], 6: [12, 11, 13, 9, 10, 7], 7: [12, 14, 6, 5, 7], 8: [12, 9, 10, 6, 5, 7], 9: [12, 14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd7e0>, {0: [12, 9, 8], 1: [12, 14, 13, 9, 8], 2: [12, 11, 13, 9, 8], 3: [12, 9, 10, 7, 8], 4: [12, 14, 13, 9, 10, 7, 8], 5: [12, 11, 4, 5, 7, 8], 6: [12, 11, 13, 9, 10, 7, 8], 7: [12, 14, 6, 5, 7, 8], 8: [12, 9, 10, 6, 5, 7, 8], 9: [12, 14, 6, 10, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd870>, {0: [12, 9], 1: [12, 14, 13, 9], 2: [12, 11, 13, 9], 3: [12, 14, 6, 10, 9], 4: [12, 11, 13, 14, 6, 10, 9], 5: [12, 11, 4, 5, 7, 8, 9], 6: [12, 14, 6, 5, 7, 8, 9], 7: [12, 14, 13, 11, 4, 5, 7, 8, 9], 8: [12, 11, 4, 5, 7, 10, 9], 9: [12, 14, 6, 10, 7, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd900>, {0: [12, 9, 10], 1: [12, 14, 13, 9, 10], 2: [12, 11, 13, 9, 10], 3: [12, 9, 8, 7, 10], 4: [12, 14, 6, 10], 5: [12, 14, 13, 9, 8, 7, 10], 6: [12, 9, 13, 14, 6, 10], 7: [12, 11, 13, 14, 6, 10], 8: [12, 11, 13, 9, 8, 7, 10], 9: [12, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cd990>, {0: [12, 11], 1: [12, 14, 13, 11], 2: [12, 9, 13, 11], 3: [12, 9, 10, 6, 14, 13, 11], 4: [12, 14, 6, 10, 9, 13, 11], 5: [12, 9, 8, 7, 5, 4, 11], 6: [12, 14, 13, 9, 8, 7, 5, 4, 11], 7: [12, 9, 10, 7, 5, 4, 11], 8: [12, 9, 10, 6, 5, 4, 11], 9: [12, 14, 6, 5, 4, 11]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cda20>, {0: [12, 14, 13], 1: [12, 9, 13], 2: [12, 11, 13], 3: [12, 9, 10, 6, 14, 13], 4: [12, 14, 6, 10, 9, 13], 5: [12, 11, 4, 5, 7, 8, 9, 13], 6: [12, 9, 8, 7, 5, 6, 14, 13], 7: [12, 14, 6, 5, 7, 8, 9, 13], 8: [12, 9, 8, 7, 5, 4, 11, 13], 9: [12, 9, 10, 7, 5, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cdab0>, {0: [12, 14], 1: [12, 9, 13, 14], 2: [12, 11, 13, 14], 3: [12, 9, 10, 6, 14], 4: [12, 11, 13, 9, 10, 6, 14], 5: [12, 9, 8, 7, 5, 6, 14], 6: [12, 11, 4, 5, 7, 8, 9, 13, 14], 7: [12, 9, 8, 7, 5, 4, 11, 13, 14], 8: [12, 9, 10, 7, 5, 6, 14], 9: [12, 9, 8, 7, 10, 6, 14]})}), 13: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed781cdb40>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cdbd0>, {0: [13, 9, 8, 1], 1: [13, 14, 12, 9, 8, 1], 2: [13, 11, 4, 2, 1], 3: [13, 9, 8, 7, 5, 4, 2, 1], 4: [13, 14, 12, 11, 4, 2, 1], 5: [13, 11, 12, 9, 8, 1], 6: [13, 9, 12, 11, 4, 2, 1], 7: [13, 14, 6, 3, 1], 8: [13, 14, 12, 9, 8, 7, 5, 4, 2, 1], 9: [13, 9, 10, 6, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cdc60>, {0: [13, 11, 4, 2], 1: [13, 14, 12, 11, 4, 2], 2: [13, 9, 8, 7, 5, 4, 2], 3: [13, 9, 12, 11, 4, 2], 4: [13, 14, 12, 9, 8, 7, 5, 4, 2], 5: [13, 14, 6, 3, 2], 6: [13, 9, 10, 7, 5, 4, 2], 7: [13, 9, 8, 1, 2], 8: [13, 14, 6, 5, 4, 2], 9: [13, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cdcf0>, {0: [13, 14, 6, 3], 1: [13, 9, 10, 6, 3], 2: [13, 11, 4, 2, 3], 3: [13, 14, 12, 9, 10, 6, 3], 4: [13, 9, 8, 7, 5, 4, 2, 3], 5: [13, 14, 12, 11, 4, 2, 3], 6: [13, 9, 12, 14, 6, 3], 7: [13, 9, 12, 11, 4, 2, 3], 8: [13, 14, 12, 9, 8, 7, 5, 4, 2, 3], 9: [13, 9, 10, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cdd80>, {0: [13, 11, 4], 1: [13, 14, 12, 11, 4], 2: [13, 9, 8, 7, 5, 4], 3: [13, 9, 12, 11, 4], 4: [13, 14, 12, 9, 8, 7, 5, 4], 5: [13, 9, 10, 7, 5, 4], 6: [13, 14, 6, 5, 4], 7: [13, 9, 10, 6, 5, 4], 8: [13, 14, 12, 9, 10, 7, 5, 4], 9: [13, 11, 12, 9, 8, 7, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cde10>, {0: [13, 9, 8, 7, 5], 1: [13, 14, 12, 9, 8, 7, 5], 2: [13, 9, 10, 7, 5], 3: [13, 14, 6, 5], 4: [13, 11, 4, 5], 5: [13, 9, 10, 6, 5], 6: [13, 14, 12, 9, 10, 7, 5], 7: [13, 14, 12, 11, 4, 5], 8: [13, 9, 12, 11, 4, 5], 9: [13, 11, 12, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cdea0>, {0: [13, 14, 6], 1: [13, 9, 10, 6], 2: [13, 14, 12, 9, 10, 6], 3: [13, 9, 12, 14, 6], 4: [13, 11, 12, 14, 6], 5: [13, 11, 12, 9, 10, 6], 6: [13, 9, 8, 7, 5, 6], 7: [13, 14, 12, 9, 8, 7, 5, 6], 8: [13, 9, 10, 7, 5, 6], 9: [13, 9, 8, 7, 10, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cdf30>, {0: [13, 9, 8, 7], 1: [13, 14, 12, 9, 8, 7], 2: [13, 9, 10, 7], 3: [13, 14, 12, 9, 10, 7], 4: [13, 11, 12, 9, 8, 7], 5: [13, 14, 6, 5, 7], 6: [13, 11, 12, 9, 10, 7], 7: [13, 9, 10, 6, 5, 7], 8: [13, 11, 4, 5, 7], 9: [13, 14, 12, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cdfc0>, {0: [13, 9, 8], 1: [13, 14, 12, 9, 8], 2: [13, 11, 12, 9, 8], 3: [13, 9, 10, 7, 8], 4: [13, 14, 12, 9, 10, 7, 8], 5: [13, 14, 6, 5, 7, 8], 6: [13, 11, 12, 9, 10, 7, 8], 7: [13, 14, 6, 10, 9, 8], 8: [13, 11, 4, 5, 7, 8], 9: [13, 9, 10, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce050>, {0: [13, 9], 1: [13, 14, 12, 9], 2: [13, 11, 12, 9], 3: [13, 14, 6, 10, 9], 4: [13, 11, 12, 14, 6, 10, 9], 5: [13, 14, 6, 5, 7, 8, 9], 6: [13, 11, 4, 5, 7, 8, 9], 7: [13, 14, 12, 11, 4, 5, 7, 8, 9], 8: [13, 14, 6, 10, 7, 8, 9], 9: [13, 14, 6, 5, 7, 10, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce0e0>, {0: [13, 9, 10], 1: [13, 14, 12, 9, 10], 2: [13, 11, 12, 9, 10], 3: [13, 14, 6, 10], 4: [13, 9, 8, 7, 10], 5: [13, 14, 12, 9, 8, 7, 10], 6: [13, 9, 12, 14, 6, 10], 7: [13, 11, 12, 14, 6, 10], 8: [13, 11, 12, 9, 8, 7, 10], 9: [13, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce170>, {0: [13, 11], 1: [13, 14, 12, 11], 2: [13, 9, 12, 11], 3: [13, 14, 6, 10, 9, 12, 11], 4: [13, 9, 10, 6, 14, 12, 11], 5: [13, 9, 8, 7, 5, 4, 11], 6: [13, 14, 12, 9, 8, 7, 5, 4, 11], 7: [13, 9, 10, 7, 5, 4, 11], 8: [13, 14, 6, 5, 4, 11], 9: [13, 9, 10, 6, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce200>, {0: [13, 14, 12], 1: [13, 9, 12], 2: [13, 11, 12], 3: [13, 14, 6, 10, 9, 12], 4: [13, 9, 10, 6, 14, 12], 5: [13, 14, 6, 5, 7, 8, 9, 12], 6: [13, 9, 8, 7, 5, 4, 11, 12], 7: [13, 11, 4, 5, 7, 8, 9, 12], 8: [13, 9, 8, 7, 5, 6, 14, 12], 9: [13, 14, 6, 10, 7, 8, 9, 12]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce290>, {0: [13, 14], 1: [13, 9, 12, 14], 2: [13, 11, 12, 14], 3: [13, 9, 10, 6, 14], 4: [13, 11, 12, 9, 10, 6, 14], 5: [13, 9, 8, 7, 5, 6, 14], 6: [13, 9, 8, 7, 5, 4, 11, 12, 14], 7: [13, 11, 4, 5, 7, 8, 9, 12, 14], 8: [13, 9, 10, 7, 5, 6, 14], 9: [13, 9, 8, 7, 10, 6, 14]})}), 14: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fed781ce320>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce3b0>, {0: [14, 13, 9, 8, 1], 1: [14, 12, 9, 8, 1], 2: [14, 13, 11, 4, 2, 1], 3: [14, 12, 11, 4, 2, 1], 4: [14, 13, 9, 8, 7, 5, 4, 2, 1], 5: [14, 13, 11, 12, 9, 8, 1], 6: [14, 13, 9, 12, 11, 4, 2, 1], 7: [14, 6, 3, 1], 8: [14, 12, 9, 8, 7, 5, 4, 2, 1], 9: [14, 12, 11, 13, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce440>, {0: [14, 13, 11, 4, 2], 1: [14, 12, 11, 4, 2], 2: [14, 13, 9, 8, 7, 5, 4, 2], 3: [14, 12, 9, 8, 7, 5, 4, 2], 4: [14, 13, 9, 12, 11, 4, 2], 5: [14, 6, 3, 2], 6: [14, 12, 9, 13, 11, 4, 2], 7: [14, 6, 5, 4, 2], 8: [14, 13, 9, 10, 7, 5, 4, 2], 9: [14, 13, 9, 8, 1, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce4d0>, {0: [14, 6, 3], 1: [14, 13, 9, 10, 6, 3], 2: [14, 12, 9, 10, 6, 3], 3: [14, 13, 11, 4, 2, 3], 4: [14, 12, 11, 4, 2, 3], 5: [14, 13, 9, 8, 7, 5, 4, 2, 3], 6: [14, 12, 9, 8, 7, 5, 4, 2, 3], 7: [14, 13, 9, 12, 11, 4, 2, 3], 8: [14, 6, 5, 4, 2, 3], 9: [14, 12, 9, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce560>, {0: [14, 13, 11, 4], 1: [14, 12, 11, 4], 2: [14, 13, 9, 8, 7, 5, 4], 3: [14, 12, 9, 8, 7, 5, 4], 4: [14, 13, 9, 12, 11, 4], 5: [14, 6, 5, 4], 6: [14, 12, 9, 13, 11, 4], 7: [14, 13, 9, 10, 7, 5, 4], 8: [14, 12, 9, 10, 7, 5, 4], 9: [14, 13, 9, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce5f0>, {0: [14, 13, 9, 8, 7, 5], 1: [14, 12, 9, 8, 7, 5], 2: [14, 6, 5], 3: [14, 13, 9, 10, 7, 5], 4: [14, 12, 9, 10, 7, 5], 5: [14, 13, 11, 4, 5], 6: [14, 12, 11, 4, 5], 7: [14, 13, 9, 10, 6, 5], 8: [14, 12, 9, 10, 6, 5], 9: [14, 13, 9, 12, 11, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce680>, {0: [14, 6], 1: [14, 13, 9, 10, 6], 2: [14, 12, 9, 10, 6], 3: [14, 13, 11, 12, 9, 10, 6], 4: [14, 13, 9, 8, 7, 5, 6], 5: [14, 12, 11, 13, 9, 10, 6], 6: [14, 12, 9, 8, 7, 5, 6], 7: [14, 13, 9, 10, 7, 5, 6], 8: [14, 13, 9, 8, 7, 10, 6], 9: [14, 12, 9, 10, 7, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce710>, {0: [14, 13, 9, 8, 7], 1: [14, 12, 9, 8, 7], 2: [14, 13, 9, 10, 7], 3: [14, 12, 9, 10, 7], 4: [14, 13, 11, 12, 9, 8, 7], 5: [14, 12, 11, 13, 9, 8, 7], 6: [14, 6, 5, 7], 7: [14, 13, 11, 12, 9, 10, 7], 8: [14, 13, 9, 10, 6, 5, 7], 9: [14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce7a0>, {0: [14, 13, 9, 8], 1: [14, 12, 9, 8], 2: [14, 13, 11, 12, 9, 8], 3: [14, 12, 11, 13, 9, 8], 4: [14, 13, 9, 10, 7, 8], 5: [14, 12, 9, 10, 7, 8], 6: [14, 6, 5, 7, 8], 7: [14, 6, 10, 9, 8], 8: [14, 13, 11, 12, 9, 10, 7, 8], 9: [14, 13, 11, 4, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce830>, {0: [14, 13, 9], 1: [14, 12, 9], 2: [14, 13, 11, 12, 9], 3: [14, 12, 11, 13, 9], 4: [14, 6, 10, 9], 5: [14, 6, 5, 7, 8, 9], 6: [14, 13, 11, 4, 5, 7, 8, 9], 7: [14, 12, 11, 4, 5, 7, 8, 9], 8: [14, 6, 10, 7, 8, 9], 9: [14, 6, 5, 7, 10, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce8c0>, {0: [14, 13, 9, 10], 1: [14, 12, 9, 10], 2: [14, 13, 11, 12, 9, 10], 3: [14, 12, 11, 13, 9, 10], 4: [14, 6, 10], 5: [14, 13, 9, 8, 7, 10], 6: [14, 12, 9, 8, 7, 10], 7: [14, 13, 11, 12, 9, 8, 7, 10], 8: [14, 12, 11, 13, 9, 8, 7, 10], 9: [14, 13, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce950>, {0: [14, 13, 11], 1: [14, 12, 11], 2: [14, 13, 9, 12, 11], 3: [14, 12, 9, 13, 11], 4: [14, 6, 10, 9, 12, 11], 5: [14, 6, 10, 9, 13, 11], 6: [14, 13, 9, 8, 7, 5, 4, 11], 7: [14, 12, 9, 8, 7, 5, 4, 11], 8: [14, 6, 5, 4, 11], 9: [14, 13, 9, 10, 7, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781ce9e0>, {0: [14, 12], 1: [14, 13, 9, 12], 2: [14, 13, 11, 12], 3: [14, 6, 10, 9, 12], 4: [14, 6, 10, 9, 13, 11, 12], 5: [14, 6, 5, 7, 8, 9, 12], 6: [14, 13, 9, 8, 7, 5, 4, 11, 12], 7: [14, 13, 11, 4, 5, 7, 8, 9, 12], 8: [14, 6, 10, 7, 8, 9, 12], 9: [14, 6, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fed781cea70>, {0: [14, 13], 1: [14, 12, 9, 13], 2: [14, 12, 11, 13], 3: [14, 6, 10, 9, 13], 4: [14, 6, 10, 9, 12, 11, 13], 5: [14, 6, 5, 7, 8, 9, 13], 6: [14, 12, 11, 4, 5, 7, 8, 9, 13], 7: [14, 12, 9, 8, 7, 5, 4, 11, 13], 8: [14, 6, 10, 7, 8, 9, 13], 9: [14, 6, 5, 7, 10, 9, 13]})})})
Starting agent_0
stored successfully!
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Starting agent_1
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Exception in thread Thread-4 (agent_rmsa):
Traceback (most recent call last):
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/emil/Documents/MyRMSA/My_Deep_RMSA_A3C.py", line 261, in agent_rmsa
    agent.rmsa(sess, coord, saver)
  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 947, in rmsa
    wandb.log(demand_dict, step=self.global_episodes)
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 370, in wrapper
    return func(self, *args, **kwargs)
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 333, in wrapper
    return func(self, *args, **kwargs)
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1703, in log
    self._log(data=data, step=step, commit=commit)
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1483, in _log
    raise ValueError("Key values passed to `wandb.log` must be strings.")
ValueError: Key values passed to `wandb.log` must be strings.
Test successful
