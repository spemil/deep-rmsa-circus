WARNING:tensorflow:From /Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/compat/v2_compat.py:107: disable_resource_variables (from tensorflow.python.ops.variable_scope) is deprecated and will be removed in a future version.
Instructions for updating:
non-resource variables are not supported in the long term
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/keras/engine/base_layer_v1.py:1694: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  warnings.warn('`layer.apply` is deprecated and '
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/keras/engine/base_layer_v1.py:1694: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  warnings.warn('`layer.apply` is deprecated and '
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/keras/engine/base_layer_v1.py:1694: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  warnings.warn('`layer.apply` is deprecated and '
defaultdict(<function <lambda> at 0x7f82cc71f2e0>, {1: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71f250>, {2: (0, 1050), 3: (1, 1500), 8: (2, 2400)}), 2: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71f1c0>, {1: (3, 1050), 3: (4, 600), 4: (5, 750)}), 3: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71f130>, {1: (6, 1500), 2: (7, 600), 6: (8, 1800)}), 8: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71f0a0>, {1: (22, 2400), 7: (23, 750), 9: (24, 750)}), 4: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71f010>, {2: (9, 750), 5: (10, 600), 11: (11, 1950)}), 6: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71ef80>, {3: (15, 1800), 5: (16, 1200), 10: (17, 1050), 14: (18, 1800)}), 5: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71eef0>, {4: (12, 600), 6: (13, 1200), 7: (14, 600)}), 11: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71ee60>, {4: (32, 1950), 12: (33, 600), 13: (34, 750)}), 7: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71edd0>, {5: (19, 600), 8: (20, 750), 10: (21, 1350)}), 10: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71ed40>, {6: (29, 1050), 7: (30, 1350), 9: (31, 750)}), 14: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71ecb0>, {6: (41, 1800), 12: (42, 300), 13: (43, 150)}), 9: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71ec20>, {8: (25, 750), 10: (26, 750), 12: (27, 300), 13: (28, 300)}), 12: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71eb90>, {9: (35, 300), 11: (36, 600), 14: (37, 300)}), 13: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71eb00>, {9: (38, 300), 11: (39, 750), 14: (40, 150)})})
defaultdict(<function <lambda> at 0x7f82cc71ea70>, {1: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71e9e0>, {2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e950>, {0: [1, 2], 1: [1, 3, 2], 2: [1, 8, 7, 5, 4, 2], 3: [1, 3, 6, 5, 4, 2], 4: [1, 8, 9, 12, 11, 4, 2], 5: [1, 8, 9, 13, 11, 4, 2], 6: [1, 8, 9, 10, 7, 5, 4, 2], 7: [1, 8, 9, 13, 14, 12, 11, 4, 2], 8: [1, 8, 7, 5, 6, 3, 2], 9: [1, 8, 9, 12, 14, 13, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e8c0>, {0: [1, 3], 1: [1, 2, 3], 2: [1, 2, 4, 5, 6, 3], 3: [1, 8, 7, 5, 4, 2, 3], 4: [1, 8, 9, 10, 6, 3], 5: [1, 8, 7, 5, 6, 3], 6: [1, 2, 4, 5, 7, 10, 6, 3], 7: [1, 8, 9, 13, 14, 6, 3], 8: [1, 8, 7, 10, 6, 3], 9: [1, 8, 9, 12, 14, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e830>, {0: [1, 2, 4], 1: [1, 3, 2, 4], 2: [1, 8, 7, 5, 4], 3: [1, 3, 6, 5, 4], 4: [1, 2, 3, 6, 5, 4], 5: [1, 8, 9, 12, 11, 4], 6: [1, 8, 9, 13, 11, 4], 7: [1, 8, 9, 10, 7, 5, 4], 8: [1, 8, 9, 13, 14, 12, 11, 4], 9: [1, 8, 9, 12, 14, 13, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e7a0>, {0: [1, 2, 4, 5], 1: [1, 3, 2, 4, 5], 2: [1, 8, 7, 5], 3: [1, 3, 6, 5], 4: [1, 2, 3, 6, 5], 5: [1, 8, 9, 10, 7, 5], 6: [1, 8, 9, 10, 6, 5], 7: [1, 3, 6, 10, 7, 5], 8: [1, 2, 3, 6, 10, 7, 5], 9: [1, 8, 9, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e710>, {0: [1, 3, 6], 1: [1, 2, 3, 6], 2: [1, 2, 4, 5, 6], 3: [1, 3, 2, 4, 5, 6], 4: [1, 8, 7, 5, 6], 5: [1, 8, 9, 10, 6], 6: [1, 2, 4, 5, 7, 10, 6], 7: [1, 8, 9, 13, 14, 6], 8: [1, 8, 7, 10, 6], 9: [1, 8, 9, 12, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e680>, {0: [1, 2, 4, 5, 7], 1: [1, 8, 7], 2: [1, 3, 2, 4, 5, 7], 3: [1, 3, 6, 5, 7], 4: [1, 2, 3, 6, 5, 7], 5: [1, 8, 9, 10, 7], 6: [1, 3, 6, 10, 7], 7: [1, 2, 3, 6, 10, 7], 8: [1, 2, 4, 5, 6, 10, 7], 9: [1, 2, 4, 11, 12, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e5f0>, {0: [1, 8], 1: [1, 2, 4, 5, 7, 8], 2: [1, 3, 2, 4, 5, 7, 8], 3: [1, 2, 4, 11, 12, 9, 8], 4: [1, 2, 4, 11, 13, 9, 8], 5: [1, 2, 4, 5, 7, 10, 9, 8], 6: [1, 3, 6, 5, 7, 8], 7: [1, 2, 4, 11, 12, 14, 13, 9, 8], 8: [1, 3, 6, 10, 9, 8], 9: [1, 2, 3, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e560>, {0: [1, 8, 9], 1: [1, 2, 4, 5, 7, 8, 9], 2: [1, 2, 4, 11, 12, 9], 3: [1, 2, 4, 11, 13, 9], 4: [1, 3, 6, 10, 9], 5: [1, 2, 4, 5, 7, 10, 9], 6: [1, 2, 4, 11, 12, 14, 13, 9], 7: [1, 8, 7, 10, 9], 8: [1, 2, 3, 6, 10, 9], 9: [1, 2, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e4d0>, {0: [1, 8, 9, 10], 1: [1, 2, 4, 5, 7, 10], 2: [1, 3, 6, 10], 3: [1, 8, 7, 10], 4: [1, 2, 3, 6, 10], 5: [1, 2, 4, 5, 6, 10], 6: [1, 2, 4, 5, 7, 8, 9, 10], 7: [1, 2, 4, 11, 12, 9, 10], 8: [1, 3, 2, 4, 5, 7, 10], 9: [1, 2, 4, 11, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e440>, {0: [1, 2, 4, 11], 1: [1, 8, 9, 12, 11], 2: [1, 8, 9, 13, 11], 3: [1, 8, 9, 13, 14, 12, 11], 4: [1, 8, 9, 12, 14, 13, 11], 5: [1, 3, 2, 4, 11], 6: [1, 2, 4, 5, 7, 8, 9, 12, 11], 7: [1, 2, 4, 5, 7, 8, 9, 13, 11], 8: [1, 2, 4, 5, 7, 8, 9, 13, 14, 12, 11], 9: [1, 3, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e3b0>, {0: [1, 8, 9, 12], 1: [1, 8, 9, 13, 14, 12], 2: [1, 2, 4, 11, 12], 3: [1, 8, 9, 13, 11, 12], 4: [1, 2, 4, 5, 7, 8, 9, 12], 5: [1, 2, 4, 11, 13, 14, 12], 6: [1, 2, 4, 11, 13, 9, 12], 7: [1, 2, 4, 5, 7, 8, 9, 13, 14, 12], 8: [1, 3, 2, 4, 11, 12], 9: [1, 2, 4, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e320>, {0: [1, 8, 9, 13], 1: [1, 8, 9, 12, 14, 13], 2: [1, 2, 4, 11, 13], 3: [1, 8, 9, 12, 11, 13], 4: [1, 2, 4, 5, 7, 8, 9, 13], 5: [1, 2, 4, 11, 12, 14, 13], 6: [1, 2, 4, 11, 12, 9, 13], 7: [1, 3, 6, 14, 13], 8: [1, 2, 4, 5, 7, 8, 9, 12, 14, 13], 9: [1, 2, 3, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e290>, {0: [1, 8, 9, 13, 14], 1: [1, 8, 9, 12, 14], 2: [1, 2, 4, 11, 12, 14], 3: [1, 2, 4, 11, 13, 14], 4: [1, 8, 9, 12, 11, 13, 14], 5: [1, 2, 4, 5, 7, 8, 9, 13, 14], 6: [1, 8, 9, 13, 11, 12, 14], 7: [1, 3, 6, 14], 8: [1, 2, 4, 11, 12, 9, 13, 14], 9: [1, 2, 4, 5, 7, 8, 9, 12, 14]})}), 2: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71e200>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e170>, {0: [2, 1], 1: [2, 3, 1], 2: [2, 4, 5, 7, 8, 1], 3: [2, 4, 5, 6, 3, 1], 4: [2, 4, 11, 12, 9, 8, 1], 5: [2, 4, 11, 13, 9, 8, 1], 6: [2, 4, 5, 7, 10, 9, 8, 1], 7: [2, 4, 11, 12, 14, 13, 9, 8, 1], 8: [2, 3, 6, 5, 7, 8, 1], 9: [2, 4, 11, 13, 14, 12, 9, 8, 1]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e0e0>, {0: [2, 3], 1: [2, 1, 3], 2: [2, 4, 5, 6, 3], 3: [2, 4, 5, 7, 10, 6, 3], 4: [2, 4, 5, 7, 8, 1, 3], 5: [2, 4, 5, 7, 8, 9, 10, 6, 3], 6: [2, 4, 11, 12, 14, 6, 3], 7: [2, 4, 11, 13, 14, 6, 3], 8: [2, 4, 11, 12, 9, 10, 6, 3], 9: [2, 4, 11, 13, 9, 10, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71e050>, {0: [2, 4], 1: [2, 3, 6, 5, 4], 2: [2, 1, 8, 7, 5, 4], 3: [2, 3, 6, 10, 7, 5, 4], 4: [2, 1, 3, 6, 5, 4], 5: [2, 3, 1, 8, 7, 5, 4], 6: [2, 3, 6, 10, 9, 8, 7, 5, 4], 7: [2, 1, 8, 9, 12, 11, 4], 8: [2, 3, 6, 14, 13, 11, 4], 9: [2, 3, 6, 10, 9, 12, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71dfc0>, {0: [2, 4, 5], 1: [2, 3, 6, 5], 2: [2, 1, 8, 7, 5], 3: [2, 3, 6, 10, 7, 5], 4: [2, 1, 3, 6, 5], 5: [2, 4, 11, 12, 9, 8, 7, 5], 6: [2, 3, 1, 8, 7, 5], 7: [2, 4, 11, 13, 9, 8, 7, 5], 8: [2, 4, 11, 12, 14, 13, 9, 8, 7, 5], 9: [2, 3, 6, 10, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71df30>, {0: [2, 3, 6], 1: [2, 4, 5, 6], 2: [2, 1, 3, 6], 3: [2, 4, 5, 7, 10, 6], 4: [2, 4, 5, 7, 8, 9, 10, 6], 5: [2, 4, 11, 12, 14, 6], 6: [2, 4, 11, 13, 14, 6], 7: [2, 4, 11, 12, 9, 10, 6], 8: [2, 4, 11, 13, 9, 10, 6], 9: [2, 4, 5, 7, 8, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71dea0>, {0: [2, 4, 5, 7], 1: [2, 1, 8, 7], 2: [2, 3, 6, 5, 7], 3: [2, 3, 6, 10, 7], 4: [2, 4, 5, 6, 10, 7], 5: [2, 4, 11, 12, 9, 8, 7], 6: [2, 3, 1, 8, 7], 7: [2, 4, 11, 13, 9, 8, 7], 8: [2, 4, 11, 12, 14, 13, 9, 8, 7], 9: [2, 3, 6, 10, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71de10>, {0: [2, 4, 5, 7, 8], 1: [2, 1, 8], 2: [2, 4, 11, 12, 9, 8], 3: [2, 3, 1, 8], 4: [2, 4, 11, 13, 9, 8], 5: [2, 4, 5, 7, 10, 9, 8], 6: [2, 4, 11, 12, 14, 13, 9, 8], 7: [2, 3, 6, 5, 7, 8], 8: [2, 4, 11, 13, 14, 12, 9, 8], 9: [2, 3, 6, 10, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71dd80>, {0: [2, 4, 5, 7, 8, 9], 1: [2, 4, 11, 12, 9], 2: [2, 4, 11, 13, 9], 3: [2, 4, 5, 7, 10, 9], 4: [2, 4, 11, 12, 14, 13, 9], 5: [2, 1, 8, 9], 6: [2, 4, 11, 13, 14, 12, 9], 7: [2, 3, 6, 10, 9], 8: [2, 4, 5, 6, 10, 9], 9: [2, 3, 6, 14, 13, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71dcf0>, {0: [2, 4, 5, 7, 10], 1: [2, 3, 6, 10], 2: [2, 4, 5, 6, 10], 3: [2, 4, 5, 7, 8, 9, 10], 4: [2, 4, 11, 12, 9, 10], 5: [2, 4, 11, 13, 9, 10], 6: [2, 4, 11, 12, 14, 13, 9, 10], 7: [2, 1, 8, 9, 10], 8: [2, 4, 11, 13, 14, 12, 9, 10], 9: [2, 3, 6, 14, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71dc60>, {0: [2, 4, 11], 1: [2, 4, 5, 7, 8, 9, 12, 11], 2: [2, 4, 5, 7, 8, 9, 13, 11], 3: [2, 4, 5, 7, 8, 9, 13, 14, 12, 11], 4: [2, 4, 5, 7, 10, 9, 12, 11], 5: [2, 4, 5, 7, 8, 9, 12, 14, 13, 11], 6: [2, 3, 6, 14, 13, 11], 7: [2, 4, 5, 7, 10, 9, 13, 11], 8: [2, 1, 8, 9, 12, 11], 9: [2, 3, 6, 10, 9, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71dbd0>, {0: [2, 4, 11, 12], 1: [2, 4, 5, 7, 8, 9, 12], 2: [2, 4, 11, 13, 14, 12], 3: [2, 4, 11, 13, 9, 12], 4: [2, 4, 5, 7, 8, 9, 13, 14, 12], 5: [2, 4, 5, 7, 10, 9, 12], 6: [2, 1, 8, 9, 12], 7: [2, 3, 6, 10, 9, 12], 8: [2, 3, 6, 14, 12], 9: [2, 4, 5, 6, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71db40>, {0: [2, 4, 11, 13], 1: [2, 4, 5, 7, 8, 9, 13], 2: [2, 4, 11, 12, 14, 13], 3: [2, 4, 11, 12, 9, 13], 4: [2, 4, 5, 7, 8, 9, 12, 14, 13], 5: [2, 3, 6, 14, 13], 6: [2, 4, 5, 7, 10, 9, 13], 7: [2, 4, 5, 6, 14, 13], 8: [2, 1, 8, 9, 13], 9: [2, 3, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71dab0>, {0: [2, 4, 11, 12, 14], 1: [2, 4, 11, 13, 14], 2: [2, 4, 5, 7, 8, 9, 13, 14], 3: [2, 4, 11, 12, 9, 13, 14], 4: [2, 4, 5, 7, 8, 9, 12, 14], 5: [2, 3, 6, 14], 6: [2, 4, 11, 13, 9, 12, 14], 7: [2, 4, 5, 6, 14], 8: [2, 4, 5, 7, 10, 9, 13, 14], 9: [2, 1, 8, 9, 13, 14]})}), 3: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71da20>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d990>, {0: [3, 1], 1: [3, 2, 1], 2: [3, 6, 5, 4, 2, 1], 3: [3, 2, 4, 5, 7, 8, 1], 4: [3, 6, 10, 9, 8, 1], 5: [3, 6, 5, 7, 8, 1], 6: [3, 6, 14, 13, 9, 8, 1], 7: [3, 6, 10, 7, 5, 4, 2, 1], 8: [3, 2, 4, 11, 12, 9, 8, 1], 9: [3, 6, 14, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d900>, {0: [3, 2], 1: [3, 1, 2], 2: [3, 6, 5, 4, 2], 3: [3, 6, 10, 7, 5, 4, 2], 4: [3, 1, 8, 7, 5, 4, 2], 5: [3, 6, 10, 9, 8, 7, 5, 4, 2], 6: [3, 6, 14, 13, 11, 4, 2], 7: [3, 6, 10, 9, 12, 11, 4, 2], 8: [3, 6, 14, 12, 11, 4, 2], 9: [3, 6, 10, 9, 13, 11, 4, 2]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d870>, {0: [3, 2, 4], 1: [3, 1, 2, 4], 2: [3, 6, 5, 4], 3: [3, 6, 10, 7, 5, 4], 4: [3, 1, 8, 7, 5, 4], 5: [3, 2, 1, 8, 7, 5, 4], 6: [3, 6, 10, 9, 8, 7, 5, 4], 7: [3, 6, 14, 13, 11, 4], 8: [3, 6, 10, 9, 12, 11, 4], 9: [3, 6, 14, 12, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d7e0>, {0: [3, 2, 4, 5], 1: [3, 6, 5], 2: [3, 1, 2, 4, 5], 3: [3, 6, 10, 7, 5], 4: [3, 1, 8, 7, 5], 5: [3, 2, 1, 8, 7, 5], 6: [3, 6, 10, 9, 8, 7, 5], 7: [3, 6, 14, 13, 9, 8, 7, 5], 8: [3, 2, 4, 11, 12, 9, 8, 7, 5], 9: [3, 6, 14, 12, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d750>, {0: [3, 6], 1: [3, 2, 4, 5, 6], 2: [3, 2, 4, 5, 7, 10, 6], 3: [3, 1, 2, 4, 5, 6], 4: [3, 2, 4, 5, 7, 8, 9, 10, 6], 5: [3, 2, 4, 11, 12, 14, 6], 6: [3, 2, 4, 11, 13, 14, 6], 7: [3, 2, 4, 11, 12, 9, 10, 6], 8: [3, 2, 4, 11, 13, 9, 10, 6], 9: [3, 2, 4, 5, 7, 8, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d6c0>, {0: [3, 2, 4, 5, 7], 1: [3, 6, 5, 7], 2: [3, 6, 10, 7], 3: [3, 1, 2, 4, 5, 7], 4: [3, 1, 8, 7], 5: [3, 2, 1, 8, 7], 6: [3, 6, 10, 9, 8, 7], 7: [3, 2, 4, 5, 6, 10, 7], 8: [3, 6, 14, 13, 9, 8, 7], 9: [3, 2, 4, 11, 12, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d630>, {0: [3, 2, 4, 5, 7, 8], 1: [3, 1, 8], 2: [3, 2, 1, 8], 3: [3, 6, 5, 7, 8], 4: [3, 6, 10, 9, 8], 5: [3, 6, 14, 13, 9, 8], 6: [3, 2, 4, 11, 12, 9, 8], 7: [3, 6, 10, 7, 8], 8: [3, 6, 14, 12, 9, 8], 9: [3, 2, 4, 11, 13, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d5a0>, {0: [3, 6, 10, 9], 1: [3, 2, 4, 5, 7, 8, 9], 2: [3, 6, 14, 13, 9], 3: [3, 2, 4, 11, 12, 9], 4: [3, 6, 14, 12, 9], 5: [3, 2, 4, 11, 13, 9], 6: [3, 1, 8, 9], 7: [3, 2, 4, 5, 7, 10, 9], 8: [3, 2, 4, 11, 12, 14, 13, 9], 9: [3, 2, 1, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d510>, {0: [3, 6, 10], 1: [3, 2, 4, 5, 7, 10], 2: [3, 2, 4, 5, 6, 10], 3: [3, 6, 14, 13, 9, 10], 4: [3, 2, 4, 5, 7, 8, 9, 10], 5: [3, 2, 4, 11, 12, 9, 10], 6: [3, 6, 5, 7, 10], 7: [3, 6, 14, 12, 9, 10], 8: [3, 2, 4, 11, 13, 9, 10], 9: [3, 1, 8, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d480>, {0: [3, 2, 4, 11], 1: [3, 6, 14, 13, 11], 2: [3, 6, 10, 9, 12, 11], 3: [3, 6, 14, 12, 11], 4: [3, 6, 10, 9, 13, 11], 5: [3, 2, 4, 5, 7, 8, 9, 12, 11], 6: [3, 6, 14, 13, 9, 12, 11], 7: [3, 6, 10, 9, 13, 14, 12, 11], 8: [3, 6, 10, 9, 12, 14, 13, 11], 9: [3, 2, 4, 5, 7, 8, 9, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d3f0>, {0: [3, 2, 4, 11, 12], 1: [3, 6, 10, 9, 12], 2: [3, 6, 14, 12], 3: [3, 2, 4, 5, 7, 8, 9, 12], 4: [3, 6, 10, 9, 13, 14, 12], 5: [3, 6, 14, 13, 9, 12], 6: [3, 2, 4, 11, 13, 14, 12], 7: [3, 2, 4, 11, 13, 9, 12], 8: [3, 2, 4, 5, 7, 8, 9, 13, 14, 12], 9: [3, 1, 8, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d360>, {0: [3, 6, 14, 13], 1: [3, 6, 10, 9, 13], 2: [3, 2, 4, 11, 13], 3: [3, 6, 10, 9, 12, 14, 13], 4: [3, 2, 4, 5, 7, 8, 9, 13], 5: [3, 2, 4, 11, 12, 14, 13], 6: [3, 6, 14, 12, 9, 13], 7: [3, 2, 4, 11, 12, 9, 13], 8: [3, 2, 4, 5, 7, 8, 9, 12, 14, 13], 9: [3, 1, 8, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d2d0>, {0: [3, 6, 14], 1: [3, 6, 10, 9, 13, 14], 2: [3, 2, 4, 11, 12, 14], 3: [3, 6, 10, 9, 12, 14], 4: [3, 2, 4, 11, 13, 14], 5: [3, 2, 4, 5, 7, 8, 9, 13, 14], 6: [3, 2, 4, 11, 12, 9, 13, 14], 7: [3, 2, 4, 5, 7, 8, 9, 12, 14], 8: [3, 2, 4, 11, 13, 9, 12, 14], 9: [3, 2, 4, 5, 6, 14]})}), 4: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71d240>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d1b0>, {0: [4, 2, 1], 1: [4, 2, 3, 1], 2: [4, 5, 7, 8, 1], 3: [4, 5, 6, 3, 1], 4: [4, 5, 6, 3, 2, 1], 5: [4, 11, 12, 9, 8, 1], 6: [4, 11, 13, 9, 8, 1], 7: [4, 5, 7, 10, 9, 8, 1], 8: [4, 11, 12, 14, 13, 9, 8, 1], 9: [4, 11, 13, 14, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d120>, {0: [4, 2], 1: [4, 5, 6, 3, 2], 2: [4, 5, 7, 8, 1, 2], 3: [4, 5, 7, 10, 6, 3, 2], 4: [4, 5, 6, 3, 1, 2], 5: [4, 5, 7, 8, 1, 3, 2], 6: [4, 5, 7, 8, 9, 10, 6, 3, 2], 7: [4, 11, 12, 9, 8, 1, 2], 8: [4, 11, 13, 14, 6, 3, 2], 9: [4, 11, 12, 14, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d090>, {0: [4, 2, 3], 1: [4, 2, 1, 3], 2: [4, 5, 6, 3], 3: [4, 5, 7, 10, 6, 3], 4: [4, 5, 7, 8, 1, 3], 5: [4, 5, 7, 8, 1, 2, 3], 6: [4, 5, 7, 8, 9, 10, 6, 3], 7: [4, 11, 12, 14, 6, 3], 8: [4, 11, 13, 14, 6, 3], 9: [4, 11, 12, 9, 10, 6, 3]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71d000>, {0: [4, 5], 1: [4, 2, 3, 6, 5], 2: [4, 11, 12, 9, 8, 7, 5], 3: [4, 11, 13, 9, 8, 7, 5], 4: [4, 11, 12, 14, 13, 9, 8, 7, 5], 5: [4, 2, 1, 8, 7, 5], 6: [4, 11, 12, 9, 10, 7, 5], 7: [4, 11, 13, 14, 12, 9, 8, 7, 5], 8: [4, 11, 13, 9, 10, 7, 5], 9: [4, 11, 12, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71cf70>, {0: [4, 5, 6], 1: [4, 2, 3, 6], 2: [4, 5, 7, 10, 6], 3: [4, 5, 7, 8, 9, 10, 6], 4: [4, 11, 12, 14, 6], 5: [4, 11, 13, 14, 6], 6: [4, 11, 12, 9, 10, 6], 7: [4, 11, 13, 9, 10, 6], 8: [4, 5, 7, 8, 9, 13, 14, 6], 9: [4, 2, 1, 3, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71cee0>, {0: [4, 5, 7], 1: [4, 5, 6, 10, 7], 2: [4, 11, 12, 9, 8, 7], 3: [4, 11, 13, 9, 8, 7], 4: [4, 11, 12, 14, 13, 9, 8, 7], 5: [4, 2, 1, 8, 7], 6: [4, 11, 12, 9, 10, 7], 7: [4, 11, 13, 14, 12, 9, 8, 7], 8: [4, 2, 3, 6, 5, 7], 9: [4, 5, 6, 10, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71ce50>, {0: [4, 5, 7, 8], 1: [4, 11, 12, 9, 8], 2: [4, 11, 13, 9, 8], 3: [4, 5, 7, 10, 9, 8], 4: [4, 11, 12, 14, 13, 9, 8], 5: [4, 2, 1, 8], 6: [4, 11, 13, 14, 12, 9, 8], 7: [4, 5, 6, 10, 9, 8], 8: [4, 5, 6, 14, 13, 9, 8], 9: [4, 5, 6, 10, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71cdc0>, {0: [4, 5, 7, 8, 9], 1: [4, 11, 12, 9], 2: [4, 11, 13, 9], 3: [4, 5, 7, 10, 9], 4: [4, 11, 12, 14, 13, 9], 5: [4, 11, 13, 14, 12, 9], 6: [4, 5, 6, 10, 9], 7: [4, 5, 6, 14, 13, 9], 8: [4, 5, 6, 14, 12, 9], 9: [4, 2, 1, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71cd30>, {0: [4, 5, 7, 10], 1: [4, 5, 6, 10], 2: [4, 5, 7, 8, 9, 10], 3: [4, 11, 12, 9, 10], 4: [4, 11, 13, 9, 10], 5: [4, 11, 12, 14, 13, 9, 10], 6: [4, 2, 3, 6, 10], 7: [4, 11, 13, 14, 12, 9, 10], 8: [4, 5, 6, 14, 13, 9, 10], 9: [4, 5, 6, 14, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71cca0>, {0: [4, 11], 1: [4, 5, 7, 8, 9, 12, 11], 2: [4, 5, 7, 8, 9, 13, 11], 3: [4, 5, 7, 8, 9, 13, 14, 12, 11], 4: [4, 5, 7, 10, 9, 12, 11], 5: [4, 5, 7, 8, 9, 12, 14, 13, 11], 6: [4, 5, 7, 10, 9, 13, 11], 7: [4, 5, 6, 14, 13, 11], 8: [4, 5, 6, 10, 9, 12, 11], 9: [4, 5, 6, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71cc10>, {0: [4, 11, 12], 1: [4, 5, 7, 8, 9, 12], 2: [4, 11, 13, 14, 12], 3: [4, 11, 13, 9, 12], 4: [4, 5, 7, 8, 9, 13, 14, 12], 5: [4, 5, 7, 10, 9, 12], 6: [4, 5, 6, 10, 9, 12], 7: [4, 5, 6, 14, 12], 8: [4, 5, 7, 10, 9, 13, 14, 12], 9: [4, 5, 7, 8, 9, 13, 11, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71cb80>, {0: [4, 11, 13], 1: [4, 5, 7, 8, 9, 13], 2: [4, 11, 12, 14, 13], 3: [4, 11, 12, 9, 13], 4: [4, 5, 7, 8, 9, 12, 14, 13], 5: [4, 5, 7, 10, 9, 13], 6: [4, 5, 6, 14, 13], 7: [4, 5, 6, 10, 9, 13], 8: [4, 5, 7, 10, 9, 12, 14, 13], 9: [4, 5, 7, 8, 9, 12, 11, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71caf0>, {0: [4, 11, 12, 14], 1: [4, 11, 13, 14], 2: [4, 5, 7, 8, 9, 13, 14], 3: [4, 11, 12, 9, 13, 14], 4: [4, 5, 7, 8, 9, 12, 14], 5: [4, 11, 13, 9, 12, 14], 6: [4, 5, 6, 14], 7: [4, 5, 7, 10, 9, 13, 14], 8: [4, 5, 7, 10, 9, 12, 14], 9: [4, 5, 6, 10, 9, 13, 14]})}), 5: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71ca60>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c9d0>, {0: [5, 4, 2, 1], 1: [5, 4, 2, 3, 1], 2: [5, 7, 8, 1], 3: [5, 6, 3, 1], 4: [5, 6, 3, 2, 1], 5: [5, 7, 10, 9, 8, 1], 6: [5, 6, 10, 9, 8, 1], 7: [5, 7, 10, 6, 3, 1], 8: [5, 7, 10, 6, 3, 2, 1], 9: [5, 4, 11, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c940>, {0: [5, 4, 2], 1: [5, 6, 3, 2], 2: [5, 7, 8, 1, 2], 3: [5, 7, 10, 6, 3, 2], 4: [5, 6, 3, 1, 2], 5: [5, 7, 8, 9, 12, 11, 4, 2], 6: [5, 7, 8, 1, 3, 2], 7: [5, 7, 8, 9, 13, 11, 4, 2], 8: [5, 7, 8, 9, 13, 14, 12, 11, 4, 2], 9: [5, 7, 10, 9, 12, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c8b0>, {0: [5, 4, 2, 3], 1: [5, 6, 3], 2: [5, 4, 2, 1, 3], 3: [5, 7, 10, 6, 3], 4: [5, 7, 8, 1, 3], 5: [5, 7, 8, 1, 2, 3], 6: [5, 7, 8, 9, 10, 6, 3], 7: [5, 7, 8, 9, 13, 14, 6, 3], 8: [5, 7, 8, 9, 12, 14, 6, 3], 9: [5, 7, 8, 9, 12, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c820>, {0: [5, 4], 1: [5, 6, 3, 2, 4], 2: [5, 7, 8, 9, 12, 11, 4], 3: [5, 7, 8, 9, 13, 11, 4], 4: [5, 7, 8, 9, 13, 14, 12, 11, 4], 5: [5, 7, 10, 9, 12, 11, 4], 6: [5, 7, 8, 1, 2, 4], 7: [5, 7, 8, 9, 12, 14, 13, 11, 4], 8: [5, 7, 10, 9, 13, 11, 4], 9: [5, 6, 14, 13, 11, 4]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c790>, {0: [5, 6], 1: [5, 7, 10, 6], 2: [5, 4, 2, 3, 6], 3: [5, 7, 8, 9, 10, 6], 4: [5, 7, 8, 9, 13, 14, 6], 5: [5, 7, 8, 9, 12, 14, 6], 6: [5, 7, 10, 9, 13, 14, 6], 7: [5, 7, 10, 9, 12, 14, 6], 8: [5, 4, 11, 12, 14, 6], 9: [5, 4, 11, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c700>, {0: [5, 7], 1: [5, 6, 10, 7], 2: [5, 6, 10, 9, 8, 7], 3: [5, 4, 11, 12, 9, 8, 7], 4: [5, 6, 14, 13, 9, 8, 7], 5: [5, 4, 11, 13, 9, 8, 7], 6: [5, 6, 14, 12, 9, 8, 7], 7: [5, 4, 11, 12, 14, 13, 9, 8, 7], 8: [5, 4, 2, 1, 8, 7], 9: [5, 4, 11, 12, 9, 10, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c670>, {0: [5, 7, 8], 1: [5, 7, 10, 9, 8], 2: [5, 6, 10, 9, 8], 3: [5, 4, 11, 12, 9, 8], 4: [5, 6, 14, 13, 9, 8], 5: [5, 6, 10, 7, 8], 6: [5, 4, 11, 13, 9, 8], 7: [5, 6, 14, 12, 9, 8], 8: [5, 4, 11, 12, 14, 13, 9, 8], 9: [5, 4, 2, 1, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c5e0>, {0: [5, 7, 8, 9], 1: [5, 7, 10, 9], 2: [5, 6, 10, 9], 3: [5, 4, 11, 12, 9], 4: [5, 6, 14, 13, 9], 5: [5, 4, 11, 13, 9], 6: [5, 6, 14, 12, 9], 7: [5, 4, 11, 12, 14, 13, 9], 8: [5, 4, 11, 13, 14, 12, 9], 9: [5, 6, 14, 13, 11, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c550>, {0: [5, 7, 10], 1: [5, 6, 10], 2: [5, 7, 8, 9, 10], 3: [5, 4, 11, 12, 9, 10], 4: [5, 6, 14, 13, 9, 10], 5: [5, 4, 11, 13, 9, 10], 6: [5, 6, 14, 12, 9, 10], 7: [5, 4, 11, 12, 14, 13, 9, 10], 8: [5, 4, 2, 3, 6, 10], 9: [5, 4, 11, 13, 14, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c4c0>, {0: [5, 4, 11], 1: [5, 7, 8, 9, 12, 11], 2: [5, 7, 8, 9, 13, 11], 3: [5, 7, 8, 9, 13, 14, 12, 11], 4: [5, 7, 10, 9, 12, 11], 5: [5, 7, 8, 9, 12, 14, 13, 11], 6: [5, 7, 10, 9, 13, 11], 7: [5, 6, 14, 13, 11], 8: [5, 6, 10, 9, 12, 11], 9: [5, 6, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c430>, {0: [5, 7, 8, 9, 12], 1: [5, 7, 8, 9, 13, 14, 12], 2: [5, 7, 10, 9, 12], 3: [5, 4, 11, 12], 4: [5, 6, 10, 9, 12], 5: [5, 6, 14, 12], 6: [5, 7, 10, 9, 13, 14, 12], 7: [5, 7, 8, 9, 13, 11, 12], 8: [5, 4, 11, 13, 14, 12], 9: [5, 6, 10, 9, 13, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c3a0>, {0: [5, 7, 8, 9, 13], 1: [5, 7, 8, 9, 12, 14, 13], 2: [5, 7, 10, 9, 13], 3: [5, 6, 14, 13], 4: [5, 4, 11, 13], 5: [5, 6, 10, 9, 13], 6: [5, 7, 10, 9, 12, 14, 13], 7: [5, 4, 11, 12, 14, 13], 8: [5, 7, 8, 9, 12, 11, 13], 9: [5, 6, 10, 9, 12, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c310>, {0: [5, 7, 8, 9, 13, 14], 1: [5, 7, 8, 9, 12, 14], 2: [5, 6, 14], 3: [5, 7, 10, 9, 13, 14], 4: [5, 7, 10, 9, 12, 14], 5: [5, 4, 11, 12, 14], 6: [5, 6, 10, 9, 13, 14], 7: [5, 4, 11, 13, 14], 8: [5, 6, 10, 9, 12, 14], 9: [5, 7, 8, 9, 12, 11, 13, 14]})}), 6: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc71c280>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c1f0>, {0: [6, 3, 1], 1: [6, 3, 2, 1], 2: [6, 5, 4, 2, 1], 3: [6, 5, 4, 2, 3, 1], 4: [6, 10, 9, 8, 1], 5: [6, 5, 7, 8, 1], 6: [6, 14, 13, 9, 8, 1], 7: [6, 10, 7, 5, 4, 2, 1], 8: [6, 14, 12, 9, 8, 1], 9: [6, 10, 7, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c160>, {0: [6, 3, 2], 1: [6, 5, 4, 2], 2: [6, 3, 1, 2], 3: [6, 10, 7, 5, 4, 2], 4: [6, 10, 9, 8, 7, 5, 4, 2], 5: [6, 14, 13, 11, 4, 2], 6: [6, 10, 9, 12, 11, 4, 2], 7: [6, 14, 12, 11, 4, 2], 8: [6, 10, 9, 13, 11, 4, 2], 9: [6, 14, 13, 9, 8, 7, 5, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c0d0>, {0: [6, 3], 1: [6, 5, 4, 2, 3], 2: [6, 10, 7, 5, 4, 2, 3], 3: [6, 5, 4, 2, 1, 3], 4: [6, 10, 9, 8, 7, 5, 4, 2, 3], 5: [6, 14, 13, 11, 4, 2, 3], 6: [6, 10, 9, 12, 11, 4, 2, 3], 7: [6, 14, 12, 11, 4, 2, 3], 8: [6, 10, 9, 13, 11, 4, 2, 3], 9: [6, 14, 13, 9, 8, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc71c040>, {0: [6, 5, 4], 1: [6, 3, 2, 4], 2: [6, 10, 7, 5, 4], 3: [6, 10, 9, 8, 7, 5, 4], 4: [6, 14, 13, 11, 4], 5: [6, 10, 9, 12, 11, 4], 6: [6, 14, 12, 11, 4], 7: [6, 10, 9, 13, 11, 4], 8: [6, 14, 13, 9, 8, 7, 5, 4], 9: [6, 3, 1, 2, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70edd0>, {0: [6, 5], 1: [6, 10, 7, 5], 2: [6, 3, 2, 4, 5], 3: [6, 10, 9, 8, 7, 5], 4: [6, 14, 13, 9, 8, 7, 5], 5: [6, 14, 12, 9, 8, 7, 5], 6: [6, 14, 13, 9, 10, 7, 5], 7: [6, 14, 12, 9, 10, 7, 5], 8: [6, 10, 9, 12, 11, 4, 5], 9: [6, 14, 13, 11, 4, 5]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70ed40>, {0: [6, 5, 7], 1: [6, 10, 7], 2: [6, 10, 9, 8, 7], 3: [6, 14, 13, 9, 8, 7], 4: [6, 14, 12, 9, 8, 7], 5: [6, 3, 2, 4, 5, 7], 6: [6, 14, 13, 9, 10, 7], 7: [6, 14, 12, 9, 10, 7], 8: [6, 14, 13, 11, 12, 9, 8, 7], 9: [6, 14, 12, 11, 13, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70ecb0>, {0: [6, 5, 7, 8], 1: [6, 10, 9, 8], 2: [6, 14, 13, 9, 8], 3: [6, 10, 7, 8], 4: [6, 14, 12, 9, 8], 5: [6, 14, 13, 11, 12, 9, 8], 6: [6, 14, 12, 11, 13, 9, 8], 7: [6, 5, 7, 10, 9, 8], 8: [6, 3, 2, 4, 5, 7, 8], 9: [6, 14, 13, 9, 10, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70ec20>, {0: [6, 10, 9], 1: [6, 14, 13, 9], 2: [6, 14, 12, 9], 3: [6, 5, 7, 8, 9], 4: [6, 14, 13, 11, 12, 9], 5: [6, 14, 12, 11, 13, 9], 6: [6, 10, 7, 8, 9], 7: [6, 5, 7, 10, 9], 8: [6, 5, 4, 11, 12, 9], 9: [6, 5, 4, 11, 13, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70eb90>, {0: [6, 10], 1: [6, 14, 13, 9, 10], 2: [6, 5, 7, 10], 3: [6, 14, 12, 9, 10], 4: [6, 5, 7, 8, 9, 10], 5: [6, 14, 13, 11, 12, 9, 10], 6: [6, 14, 12, 11, 13, 9, 10], 7: [6, 14, 13, 9, 8, 7, 10], 8: [6, 14, 12, 9, 8, 7, 10], 9: [6, 5, 4, 11, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70eb00>, {0: [6, 14, 13, 11], 1: [6, 10, 9, 12, 11], 2: [6, 14, 12, 11], 3: [6, 10, 9, 13, 11], 4: [6, 14, 13, 9, 12, 11], 5: [6, 10, 9, 13, 14, 12, 11], 6: [6, 10, 9, 12, 14, 13, 11], 7: [6, 14, 12, 9, 13, 11], 8: [6, 5, 4, 11], 9: [6, 5, 7, 8, 9, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70ea70>, {0: [6, 10, 9, 12], 1: [6, 14, 12], 2: [6, 10, 9, 13, 14, 12], 3: [6, 14, 13, 9, 12], 4: [6, 14, 13, 11, 12], 5: [6, 10, 9, 13, 11, 12], 6: [6, 5, 7, 8, 9, 12], 7: [6, 5, 7, 8, 9, 13, 14, 12], 8: [6, 10, 7, 8, 9, 12], 9: [6, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e9e0>, {0: [6, 14, 13], 1: [6, 10, 9, 13], 2: [6, 10, 9, 12, 14, 13], 3: [6, 14, 12, 9, 13], 4: [6, 10, 9, 12, 11, 13], 5: [6, 14, 12, 11, 13], 6: [6, 5, 7, 8, 9, 13], 7: [6, 5, 7, 8, 9, 12, 14, 13], 8: [6, 10, 7, 8, 9, 13], 9: [6, 5, 7, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e950>, {0: [6, 14], 1: [6, 10, 9, 13, 14], 2: [6, 10, 9, 12, 14], 3: [6, 10, 9, 12, 11, 13, 14], 4: [6, 5, 7, 8, 9, 13, 14], 5: [6, 10, 9, 13, 11, 12, 14], 6: [6, 5, 7, 8, 9, 12, 14], 7: [6, 10, 7, 8, 9, 13, 14], 8: [6, 5, 7, 10, 9, 13, 14], 9: [6, 10, 7, 8, 9, 12, 14]})}), 7: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc70e8c0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e830>, {0: [7, 5, 4, 2, 1], 1: [7, 8, 1], 2: [7, 5, 4, 2, 3, 1], 3: [7, 5, 6, 3, 1], 4: [7, 10, 9, 8, 1], 5: [7, 5, 6, 3, 2, 1], 6: [7, 10, 6, 3, 1], 7: [7, 10, 6, 3, 2, 1], 8: [7, 10, 6, 5, 4, 2, 1], 9: [7, 8, 9, 12, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e7a0>, {0: [7, 5, 4, 2], 1: [7, 8, 1, 2], 2: [7, 5, 6, 3, 2], 3: [7, 10, 6, 3, 2], 4: [7, 10, 6, 5, 4, 2], 5: [7, 8, 9, 12, 11, 4, 2], 6: [7, 8, 1, 3, 2], 7: [7, 8, 9, 13, 11, 4, 2], 8: [7, 8, 9, 13, 14, 12, 11, 4, 2], 9: [7, 10, 9, 12, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e710>, {0: [7, 5, 4, 2, 3], 1: [7, 5, 6, 3], 2: [7, 10, 6, 3], 3: [7, 5, 4, 2, 1, 3], 4: [7, 8, 1, 3], 5: [7, 8, 1, 2, 3], 6: [7, 8, 9, 10, 6, 3], 7: [7, 10, 6, 5, 4, 2, 3], 8: [7, 8, 9, 13, 14, 6, 3], 9: [7, 8, 9, 12, 14, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e680>, {0: [7, 5, 4], 1: [7, 10, 6, 5, 4], 2: [7, 8, 9, 12, 11, 4], 3: [7, 8, 9, 13, 11, 4], 4: [7, 8, 9, 13, 14, 12, 11, 4], 5: [7, 5, 6, 3, 2, 4], 6: [7, 10, 9, 12, 11, 4], 7: [7, 8, 1, 2, 4], 8: [7, 8, 9, 12, 14, 13, 11, 4], 9: [7, 8, 9, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e5f0>, {0: [7, 5], 1: [7, 10, 6, 5], 2: [7, 8, 9, 10, 6, 5], 3: [7, 8, 9, 13, 14, 6, 5], 4: [7, 8, 9, 12, 11, 4, 5], 5: [7, 8, 9, 13, 11, 4, 5], 6: [7, 8, 9, 12, 14, 6, 5], 7: [7, 8, 9, 13, 14, 12, 11, 4, 5], 8: [7, 10, 9, 13, 14, 6, 5], 9: [7, 8, 1, 2, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e560>, {0: [7, 5, 6], 1: [7, 10, 6], 2: [7, 8, 9, 10, 6], 3: [7, 8, 9, 13, 14, 6], 4: [7, 8, 9, 12, 14, 6], 5: [7, 5, 4, 2, 3, 6], 6: [7, 10, 9, 13, 14, 6], 7: [7, 10, 9, 12, 14, 6], 8: [7, 8, 9, 12, 11, 13, 14, 6], 9: [7, 8, 9, 13, 11, 12, 14, 6]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e4d0>, {0: [7, 8], 1: [7, 10, 9, 8], 2: [7, 5, 6, 10, 9, 8], 3: [7, 5, 4, 11, 12, 9, 8], 4: [7, 5, 6, 14, 13, 9, 8], 5: [7, 5, 4, 11, 13, 9, 8], 6: [7, 5, 6, 14, 12, 9, 8], 7: [7, 5, 4, 11, 12, 14, 13, 9, 8], 8: [7, 10, 6, 14, 13, 9, 8], 9: [7, 5, 4, 2, 1, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e440>, {0: [7, 8, 9], 1: [7, 10, 9], 2: [7, 5, 6, 10, 9], 3: [7, 5, 4, 11, 12, 9], 4: [7, 5, 6, 14, 13, 9], 5: [7, 5, 4, 11, 13, 9], 6: [7, 5, 6, 14, 12, 9], 7: [7, 5, 4, 11, 12, 14, 13, 9], 8: [7, 10, 6, 14, 13, 9], 9: [7, 5, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e3b0>, {0: [7, 10], 1: [7, 8, 9, 10], 2: [7, 5, 6, 10], 3: [7, 8, 9, 13, 14, 6, 10], 4: [7, 5, 4, 11, 12, 9, 10], 5: [7, 5, 6, 14, 13, 9, 10], 6: [7, 8, 9, 12, 14, 6, 10], 7: [7, 5, 4, 11, 13, 9, 10], 8: [7, 5, 6, 14, 12, 9, 10], 9: [7, 5, 4, 11, 12, 14, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e320>, {0: [7, 8, 9, 12, 11], 1: [7, 8, 9, 13, 11], 2: [7, 8, 9, 13, 14, 12, 11], 3: [7, 10, 9, 12, 11], 4: [7, 8, 9, 12, 14, 13, 11], 5: [7, 5, 4, 11], 6: [7, 10, 9, 13, 11], 7: [7, 10, 9, 13, 14, 12, 11], 8: [7, 10, 9, 12, 14, 13, 11], 9: [7, 5, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e290>, {0: [7, 8, 9, 12], 1: [7, 8, 9, 13, 14, 12], 2: [7, 10, 9, 12], 3: [7, 10, 9, 13, 14, 12], 4: [7, 8, 9, 13, 11, 12], 5: [7, 5, 4, 11, 12], 6: [7, 10, 9, 13, 11, 12], 7: [7, 5, 6, 10, 9, 12], 8: [7, 5, 6, 14, 12], 9: [7, 5, 4, 11, 13, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e200>, {0: [7, 8, 9, 13], 1: [7, 8, 9, 12, 14, 13], 2: [7, 10, 9, 13], 3: [7, 10, 9, 12, 14, 13], 4: [7, 8, 9, 12, 11, 13], 5: [7, 5, 6, 14, 13], 6: [7, 10, 9, 12, 11, 13], 7: [7, 5, 4, 11, 13], 8: [7, 5, 6, 10, 9, 13], 9: [7, 5, 4, 11, 12, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e170>, {0: [7, 8, 9, 13, 14], 1: [7, 8, 9, 12, 14], 2: [7, 10, 9, 13, 14], 3: [7, 10, 9, 12, 14], 4: [7, 8, 9, 12, 11, 13, 14], 5: [7, 8, 9, 13, 11, 12, 14], 6: [7, 5, 6, 14], 7: [7, 10, 9, 12, 11, 13, 14], 8: [7, 10, 9, 13, 11, 12, 14], 9: [7, 5, 4, 11, 12, 14]})}), 8: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc70e0e0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70e050>, {0: [8, 1], 1: [8, 7, 5, 4, 2, 1], 2: [8, 7, 5, 4, 2, 3, 1], 3: [8, 9, 12, 11, 4, 2, 1], 4: [8, 9, 13, 11, 4, 2, 1], 5: [8, 7, 5, 6, 3, 1], 6: [8, 9, 10, 6, 3, 1], 7: [8, 9, 13, 14, 12, 11, 4, 2, 1], 8: [8, 9, 10, 7, 5, 4, 2, 1], 9: [8, 9, 12, 14, 13, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70dfc0>, {0: [8, 7, 5, 4, 2], 1: [8, 1, 2], 2: [8, 9, 12, 11, 4, 2], 3: [8, 1, 3, 2], 4: [8, 9, 13, 11, 4, 2], 5: [8, 9, 10, 7, 5, 4, 2], 6: [8, 9, 13, 14, 12, 11, 4, 2], 7: [8, 7, 5, 6, 3, 2], 8: [8, 9, 12, 14, 13, 11, 4, 2], 9: [8, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70df30>, {0: [8, 7, 5, 4, 2, 3], 1: [8, 1, 3], 2: [8, 1, 2, 3], 3: [8, 7, 5, 6, 3], 4: [8, 9, 10, 6, 3], 5: [8, 9, 13, 14, 6, 3], 6: [8, 7, 10, 6, 3], 7: [8, 9, 12, 14, 6, 3], 8: [8, 9, 12, 11, 4, 2, 3], 9: [8, 9, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70dea0>, {0: [8, 7, 5, 4], 1: [8, 9, 12, 11, 4], 2: [8, 9, 13, 11, 4], 3: [8, 9, 10, 7, 5, 4], 4: [8, 9, 13, 14, 12, 11, 4], 5: [8, 1, 2, 4], 6: [8, 9, 12, 14, 13, 11, 4], 7: [8, 9, 10, 6, 5, 4], 8: [8, 9, 13, 14, 6, 5, 4], 9: [8, 7, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70de10>, {0: [8, 7, 5], 1: [8, 9, 10, 7, 5], 2: [8, 9, 10, 6, 5], 3: [8, 9, 13, 14, 6, 5], 4: [8, 9, 12, 11, 4, 5], 5: [8, 7, 10, 6, 5], 6: [8, 9, 13, 11, 4, 5], 7: [8, 9, 12, 14, 6, 5], 8: [8, 9, 13, 14, 12, 11, 4, 5], 9: [8, 1, 2, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70dd80>, {0: [8, 7, 5, 6], 1: [8, 9, 10, 6], 2: [8, 9, 13, 14, 6], 3: [8, 7, 10, 6], 4: [8, 9, 12, 14, 6], 5: [8, 9, 12, 11, 13, 14, 6], 6: [8, 9, 13, 11, 12, 14, 6], 7: [8, 9, 10, 7, 5, 6], 8: [8, 7, 5, 4, 2, 3, 6], 9: [8, 7, 10, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70dcf0>, {0: [8, 7], 1: [8, 9, 10, 7], 2: [8, 9, 10, 6, 5, 7], 3: [8, 9, 13, 14, 6, 5, 7], 4: [8, 9, 12, 11, 4, 5, 7], 5: [8, 9, 13, 11, 4, 5, 7], 6: [8, 9, 12, 14, 6, 5, 7], 7: [8, 9, 13, 14, 12, 11, 4, 5, 7], 8: [8, 1, 2, 4, 5, 7], 9: [8, 9, 13, 14, 6, 10, 7]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70dc60>, {0: [8, 9], 1: [8, 7, 10, 9], 2: [8, 7, 5, 6, 10, 9], 3: [8, 7, 5, 4, 11, 12, 9], 4: [8, 7, 5, 6, 14, 13, 9], 5: [8, 7, 5, 4, 11, 13, 9], 6: [8, 7, 5, 6, 14, 12, 9], 7: [8, 7, 5, 4, 11, 12, 14, 13, 9], 8: [8, 7, 10, 6, 14, 13, 9], 9: [8, 7, 5, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70ff40>, {0: [8, 9, 10], 1: [8, 7, 10], 2: [8, 7, 5, 6, 10], 3: [8, 9, 13, 14, 6, 10], 4: [8, 9, 12, 14, 6, 10], 5: [8, 9, 12, 11, 13, 14, 6, 10], 6: [8, 7, 5, 4, 11, 12, 9, 10], 7: [8, 7, 5, 6, 14, 13, 9, 10], 8: [8, 9, 13, 11, 12, 14, 6, 10], 9: [8, 7, 5, 4, 11, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70feb0>, {0: [8, 9, 12, 11], 1: [8, 9, 13, 11], 2: [8, 9, 13, 14, 12, 11], 3: [8, 9, 12, 14, 13, 11], 4: [8, 7, 10, 9, 12, 11], 5: [8, 7, 5, 4, 11], 6: [8, 7, 10, 9, 13, 11], 7: [8, 7, 10, 9, 13, 14, 12, 11], 8: [8, 7, 10, 9, 12, 14, 13, 11], 9: [8, 9, 10, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70fe20>, {0: [8, 9, 12], 1: [8, 9, 13, 14, 12], 2: [8, 9, 13, 11, 12], 3: [8, 7, 10, 9, 12], 4: [8, 7, 10, 9, 13, 14, 12], 5: [8, 7, 5, 4, 11, 12], 6: [8, 7, 10, 9, 13, 11, 12], 7: [8, 9, 10, 6, 14, 12], 8: [8, 7, 5, 6, 10, 9, 12], 9: [8, 7, 5, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70fd90>, {0: [8, 9, 13], 1: [8, 9, 12, 14, 13], 2: [8, 9, 12, 11, 13], 3: [8, 7, 10, 9, 13], 4: [8, 7, 10, 9, 12, 14, 13], 5: [8, 9, 10, 6, 14, 13], 6: [8, 7, 5, 6, 14, 13], 7: [8, 7, 10, 9, 12, 11, 13], 8: [8, 7, 5, 4, 11, 13], 9: [8, 7, 5, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70fd00>, {0: [8, 9, 13, 14], 1: [8, 9, 12, 14], 2: [8, 9, 12, 11, 13, 14], 3: [8, 9, 13, 11, 12, 14], 4: [8, 7, 10, 9, 13, 14], 5: [8, 7, 10, 9, 12, 14], 6: [8, 9, 10, 6, 14], 7: [8, 7, 5, 6, 14], 8: [8, 7, 10, 9, 12, 11, 13, 14], 9: [8, 7, 10, 9, 13, 11, 12, 14]})}), 9: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc70dab0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70fc70>, {0: [9, 8, 1], 1: [9, 8, 7, 5, 4, 2, 1], 2: [9, 12, 11, 4, 2, 1], 3: [9, 13, 11, 4, 2, 1], 4: [9, 10, 6, 3, 1], 5: [9, 13, 14, 12, 11, 4, 2, 1], 6: [9, 10, 7, 5, 4, 2, 1], 7: [9, 12, 14, 13, 11, 4, 2, 1], 8: [9, 10, 6, 3, 2, 1], 9: [9, 10, 7, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70da20>, {0: [9, 8, 7, 5, 4, 2], 1: [9, 12, 11, 4, 2], 2: [9, 13, 11, 4, 2], 3: [9, 10, 7, 5, 4, 2], 4: [9, 13, 14, 12, 11, 4, 2], 5: [9, 8, 1, 2], 6: [9, 12, 14, 13, 11, 4, 2], 7: [9, 10, 6, 3, 2], 8: [9, 10, 6, 5, 4, 2], 9: [9, 13, 14, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70fbe0>, {0: [9, 10, 6, 3], 1: [9, 13, 14, 6, 3], 2: [9, 8, 7, 5, 4, 2, 3], 3: [9, 12, 14, 6, 3], 4: [9, 12, 11, 4, 2, 3], 5: [9, 13, 11, 4, 2, 3], 6: [9, 10, 7, 5, 4, 2, 3], 7: [9, 13, 14, 12, 11, 4, 2, 3], 8: [9, 8, 1, 3], 9: [9, 12, 14, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70fb50>, {0: [9, 8, 7, 5, 4], 1: [9, 12, 11, 4], 2: [9, 13, 11, 4], 3: [9, 10, 7, 5, 4], 4: [9, 13, 14, 12, 11, 4], 5: [9, 12, 14, 13, 11, 4], 6: [9, 10, 6, 5, 4], 7: [9, 13, 14, 6, 5, 4], 8: [9, 12, 14, 6, 5, 4], 9: [9, 8, 1, 2, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70fac0>, {0: [9, 8, 7, 5], 1: [9, 10, 7, 5], 2: [9, 10, 6, 5], 3: [9, 13, 14, 6, 5], 4: [9, 12, 11, 4, 5], 5: [9, 13, 11, 4, 5], 6: [9, 12, 14, 6, 5], 7: [9, 13, 14, 12, 11, 4, 5], 8: [9, 12, 14, 13, 11, 4, 5], 9: [9, 12, 11, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70fa30>, {0: [9, 10, 6], 1: [9, 13, 14, 6], 2: [9, 12, 14, 6], 3: [9, 8, 7, 5, 6], 4: [9, 12, 11, 13, 14, 6], 5: [9, 13, 11, 12, 14, 6], 6: [9, 10, 7, 5, 6], 7: [9, 8, 7, 10, 6], 8: [9, 12, 11, 4, 5, 6], 9: [9, 13, 11, 4, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f9a0>, {0: [9, 8, 7], 1: [9, 10, 7], 2: [9, 10, 6, 5, 7], 3: [9, 13, 14, 6, 5, 7], 4: [9, 12, 11, 4, 5, 7], 5: [9, 13, 11, 4, 5, 7], 6: [9, 12, 14, 6, 5, 7], 7: [9, 13, 14, 12, 11, 4, 5, 7], 8: [9, 13, 14, 6, 10, 7], 9: [9, 12, 14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70d990>, {0: [9, 8], 1: [9, 10, 7, 8], 2: [9, 10, 6, 5, 7, 8], 3: [9, 13, 14, 6, 5, 7, 8], 4: [9, 12, 11, 4, 5, 7, 8], 5: [9, 13, 11, 4, 5, 7, 8], 6: [9, 12, 14, 6, 5, 7, 8], 7: [9, 13, 14, 12, 11, 4, 5, 7, 8], 8: [9, 13, 14, 6, 10, 7, 8], 9: [9, 12, 14, 13, 11, 4, 5, 7, 8]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f910>, {0: [9, 10], 1: [9, 8, 7, 10], 2: [9, 13, 14, 6, 10], 3: [9, 12, 14, 6, 10], 4: [9, 8, 7, 5, 6, 10], 5: [9, 12, 11, 13, 14, 6, 10], 6: [9, 13, 11, 12, 14, 6, 10], 7: [9, 13, 14, 6, 5, 7, 10], 8: [9, 12, 11, 4, 5, 7, 10], 9: [9, 12, 14, 6, 5, 7, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f880>, {0: [9, 12, 11], 1: [9, 13, 11], 2: [9, 13, 14, 12, 11], 3: [9, 12, 14, 13, 11], 4: [9, 10, 6, 14, 13, 11], 5: [9, 10, 6, 14, 12, 11], 6: [9, 8, 7, 5, 4, 11], 7: [9, 10, 7, 5, 4, 11], 8: [9, 10, 6, 5, 4, 11], 9: [9, 13, 14, 6, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f7f0>, {0: [9, 12], 1: [9, 13, 14, 12], 2: [9, 13, 11, 12], 3: [9, 10, 6, 14, 12], 4: [9, 10, 6, 14, 13, 11, 12], 5: [9, 8, 7, 5, 4, 11, 12], 6: [9, 8, 7, 5, 6, 14, 12], 7: [9, 10, 7, 5, 4, 11, 12], 8: [9, 8, 7, 5, 4, 11, 13, 14, 12], 9: [9, 8, 7, 10, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f760>, {0: [9, 13], 1: [9, 12, 14, 13], 2: [9, 12, 11, 13], 3: [9, 10, 6, 14, 13], 4: [9, 8, 7, 5, 6, 14, 13], 5: [9, 10, 6, 14, 12, 11, 13], 6: [9, 8, 7, 5, 4, 11, 13], 7: [9, 8, 7, 5, 4, 11, 12, 14, 13], 8: [9, 10, 7, 5, 6, 14, 13], 9: [9, 8, 7, 10, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70d900>, {0: [9, 13, 14], 1: [9, 12, 14], 2: [9, 12, 11, 13, 14], 3: [9, 13, 11, 12, 14], 4: [9, 10, 6, 14], 5: [9, 8, 7, 5, 6, 14], 6: [9, 8, 7, 5, 4, 11, 12, 14], 7: [9, 8, 7, 5, 4, 11, 13, 14], 8: [9, 10, 7, 5, 6, 14], 9: [9, 8, 7, 10, 6, 14]})}), 10: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc70f6d0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f640>, {0: [10, 9, 8, 1], 1: [10, 6, 3, 1], 2: [10, 7, 5, 4, 2, 1], 3: [10, 6, 3, 2, 1], 4: [10, 7, 8, 1], 5: [10, 6, 5, 4, 2, 1], 6: [10, 9, 8, 7, 5, 4, 2, 1], 7: [10, 9, 12, 11, 4, 2, 1], 8: [10, 7, 5, 4, 2, 3, 1], 9: [10, 9, 13, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f5b0>, {0: [10, 7, 5, 4, 2], 1: [10, 6, 3, 2], 2: [10, 6, 5, 4, 2], 3: [10, 9, 8, 7, 5, 4, 2], 4: [10, 9, 12, 11, 4, 2], 5: [10, 9, 13, 11, 4, 2], 6: [10, 9, 13, 14, 12, 11, 4, 2], 7: [10, 9, 8, 1, 2], 8: [10, 9, 12, 14, 13, 11, 4, 2], 9: [10, 6, 3, 1, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70db40>, {0: [10, 6, 3], 1: [10, 7, 5, 4, 2, 3], 2: [10, 6, 5, 4, 2, 3], 3: [10, 9, 13, 14, 6, 3], 4: [10, 9, 8, 7, 5, 4, 2, 3], 5: [10, 7, 5, 6, 3], 6: [10, 9, 12, 14, 6, 3], 7: [10, 9, 12, 11, 4, 2, 3], 8: [10, 9, 13, 11, 4, 2, 3], 9: [10, 9, 13, 14, 12, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f520>, {0: [10, 7, 5, 4], 1: [10, 6, 5, 4], 2: [10, 9, 8, 7, 5, 4], 3: [10, 9, 12, 11, 4], 4: [10, 9, 13, 11, 4], 5: [10, 9, 13, 14, 12, 11, 4], 6: [10, 6, 3, 2, 4], 7: [10, 9, 12, 14, 13, 11, 4], 8: [10, 9, 13, 14, 6, 5, 4], 9: [10, 9, 12, 14, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70dbd0>, {0: [10, 7, 5], 1: [10, 6, 5], 2: [10, 9, 8, 7, 5], 3: [10, 9, 13, 14, 6, 5], 4: [10, 9, 12, 11, 4, 5], 5: [10, 9, 13, 11, 4, 5], 6: [10, 9, 12, 14, 6, 5], 7: [10, 9, 13, 14, 12, 11, 4, 5], 8: [10, 6, 3, 2, 4, 5], 9: [10, 9, 12, 14, 13, 11, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f490>, {0: [10, 6], 1: [10, 9, 13, 14, 6], 2: [10, 7, 5, 6], 3: [10, 9, 12, 14, 6], 4: [10, 9, 8, 7, 5, 6], 5: [10, 9, 12, 11, 13, 14, 6], 6: [10, 9, 13, 11, 12, 14, 6], 7: [10, 7, 8, 9, 13, 14, 6], 8: [10, 7, 8, 9, 12, 14, 6], 9: [10, 9, 12, 11, 4, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f400>, {0: [10, 7], 1: [10, 9, 8, 7], 2: [10, 6, 5, 7], 3: [10, 9, 13, 14, 6, 5, 7], 4: [10, 6, 14, 13, 9, 8, 7], 5: [10, 9, 12, 11, 4, 5, 7], 6: [10, 9, 13, 11, 4, 5, 7], 7: [10, 6, 14, 12, 9, 8, 7], 8: [10, 9, 12, 14, 6, 5, 7], 9: [10, 9, 13, 14, 12, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f370>, {0: [10, 9, 8], 1: [10, 7, 8], 2: [10, 6, 5, 7, 8], 3: [10, 6, 14, 13, 9, 8], 4: [10, 6, 14, 12, 9, 8], 5: [10, 6, 14, 13, 11, 12, 9, 8], 6: [10, 9, 13, 14, 6, 5, 7, 8], 7: [10, 6, 14, 12, 11, 13, 9, 8], 8: [10, 9, 12, 11, 4, 5, 7, 8], 9: [10, 9, 13, 11, 4, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f2e0>, {0: [10, 9], 1: [10, 7, 8, 9], 2: [10, 6, 14, 13, 9], 3: [10, 6, 14, 12, 9], 4: [10, 6, 5, 7, 8, 9], 5: [10, 6, 14, 13, 11, 12, 9], 6: [10, 6, 14, 12, 11, 13, 9], 7: [10, 7, 5, 4, 11, 12, 9], 8: [10, 7, 5, 6, 14, 13, 9], 9: [10, 7, 5, 4, 11, 13, 9]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f250>, {0: [10, 9, 12, 11], 1: [10, 9, 13, 11], 2: [10, 9, 13, 14, 12, 11], 3: [10, 9, 12, 14, 13, 11], 4: [10, 6, 14, 13, 11], 5: [10, 7, 8, 9, 12, 11], 6: [10, 6, 14, 12, 11], 7: [10, 7, 8, 9, 13, 11], 8: [10, 6, 14, 13, 9, 12, 11], 9: [10, 7, 8, 9, 13, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f1c0>, {0: [10, 9, 12], 1: [10, 9, 13, 14, 12], 2: [10, 9, 13, 11, 12], 3: [10, 7, 8, 9, 12], 4: [10, 6, 14, 12], 5: [10, 7, 8, 9, 13, 14, 12], 6: [10, 6, 14, 13, 9, 12], 7: [10, 6, 14, 13, 11, 12], 8: [10, 7, 8, 9, 13, 11, 12], 9: [10, 6, 5, 7, 8, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f130>, {0: [10, 9, 13], 1: [10, 9, 12, 14, 13], 2: [10, 9, 12, 11, 13], 3: [10, 6, 14, 13], 4: [10, 7, 8, 9, 13], 5: [10, 7, 8, 9, 12, 14, 13], 6: [10, 6, 14, 12, 9, 13], 7: [10, 7, 8, 9, 12, 11, 13], 8: [10, 6, 14, 12, 11, 13], 9: [10, 6, 5, 7, 8, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70d870>, {0: [10, 9, 13, 14], 1: [10, 9, 12, 14], 2: [10, 9, 12, 11, 13, 14], 3: [10, 9, 13, 11, 12, 14], 4: [10, 6, 14], 5: [10, 7, 8, 9, 13, 14], 6: [10, 7, 8, 9, 12, 14], 7: [10, 7, 8, 9, 12, 11, 13, 14], 8: [10, 6, 5, 7, 8, 9, 13, 14], 9: [10, 7, 8, 9, 13, 11, 12, 14]})}), 11: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc70f0a0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70f010>, {0: [11, 4, 2, 1], 1: [11, 12, 9, 8, 1], 2: [11, 13, 9, 8, 1], 3: [11, 12, 14, 13, 9, 8, 1], 4: [11, 13, 14, 12, 9, 8, 1], 5: [11, 4, 2, 3, 1], 6: [11, 12, 9, 8, 7, 5, 4, 2, 1], 7: [11, 13, 9, 8, 7, 5, 4, 2, 1], 8: [11, 12, 14, 13, 9, 8, 7, 5, 4, 2, 1], 9: [11, 12, 9, 10, 6, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70d7e0>, {0: [11, 4, 2], 1: [11, 12, 9, 8, 7, 5, 4, 2], 2: [11, 13, 9, 8, 7, 5, 4, 2], 3: [11, 12, 14, 13, 9, 8, 7, 5, 4, 2], 4: [11, 12, 9, 10, 7, 5, 4, 2], 5: [11, 13, 14, 12, 9, 8, 7, 5, 4, 2], 6: [11, 12, 9, 8, 1, 2], 7: [11, 13, 9, 10, 7, 5, 4, 2], 8: [11, 12, 14, 6, 3, 2], 9: [11, 12, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70ef80>, {0: [11, 4, 2, 3], 1: [11, 12, 14, 6, 3], 2: [11, 13, 14, 6, 3], 3: [11, 12, 9, 10, 6, 3], 4: [11, 13, 9, 10, 6, 3], 5: [11, 12, 14, 13, 9, 10, 6, 3], 6: [11, 12, 9, 13, 14, 6, 3], 7: [11, 12, 9, 8, 7, 5, 4, 2, 3], 8: [11, 13, 14, 12, 9, 10, 6, 3], 9: [11, 13, 9, 8, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70eef0>, {0: [11, 4], 1: [11, 12, 9, 8, 7, 5, 4], 2: [11, 13, 9, 8, 7, 5, 4], 3: [11, 12, 14, 13, 9, 8, 7, 5, 4], 4: [11, 12, 9, 10, 7, 5, 4], 5: [11, 13, 14, 12, 9, 8, 7, 5, 4], 6: [11, 13, 9, 10, 7, 5, 4], 7: [11, 12, 14, 6, 5, 4], 8: [11, 12, 9, 10, 6, 5, 4], 9: [11, 13, 14, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc70ee60>, {0: [11, 4, 5], 1: [11, 12, 9, 8, 7, 5], 2: [11, 13, 9, 8, 7, 5], 3: [11, 12, 14, 13, 9, 8, 7, 5], 4: [11, 12, 9, 10, 7, 5], 5: [11, 13, 14, 12, 9, 8, 7, 5], 6: [11, 13, 9, 10, 7, 5], 7: [11, 12, 14, 6, 5], 8: [11, 12, 9, 10, 6, 5], 9: [11, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82ca1b3640>, {0: [11, 12, 14, 6], 1: [11, 13, 14, 6], 2: [11, 12, 9, 10, 6], 3: [11, 13, 9, 10, 6], 4: [11, 12, 14, 13, 9, 10, 6], 5: [11, 12, 9, 13, 14, 6], 6: [11, 13, 14, 12, 9, 10, 6], 7: [11, 13, 9, 12, 14, 6], 8: [11, 4, 5, 6], 9: [11, 12, 9, 8, 7, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82ca1b3520>, {0: [11, 12, 9, 8, 7], 1: [11, 13, 9, 8, 7], 2: [11, 12, 14, 13, 9, 8, 7], 3: [11, 12, 9, 10, 7], 4: [11, 13, 14, 12, 9, 8, 7], 5: [11, 4, 5, 7], 6: [11, 13, 9, 10, 7], 7: [11, 12, 14, 13, 9, 10, 7], 8: [11, 13, 14, 12, 9, 10, 7], 9: [11, 12, 14, 6, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82ca1b35b0>, {0: [11, 12, 9, 8], 1: [11, 13, 9, 8], 2: [11, 12, 14, 13, 9, 8], 3: [11, 13, 14, 12, 9, 8], 4: [11, 12, 9, 10, 7, 8], 5: [11, 4, 5, 7, 8], 6: [11, 13, 9, 10, 7, 8], 7: [11, 12, 14, 13, 9, 10, 7, 8], 8: [11, 13, 14, 12, 9, 10, 7, 8], 9: [11, 12, 14, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82ca1b36d0>, {0: [11, 12, 9], 1: [11, 13, 9], 2: [11, 12, 14, 13, 9], 3: [11, 13, 14, 12, 9], 4: [11, 12, 14, 6, 10, 9], 5: [11, 13, 14, 6, 10, 9], 6: [11, 4, 5, 7, 8, 9], 7: [11, 4, 5, 7, 10, 9], 8: [11, 4, 5, 6, 10, 9], 9: [11, 12, 14, 6, 5, 7, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82ca1b3490>, {0: [11, 12, 9, 10], 1: [11, 13, 9, 10], 2: [11, 12, 14, 13, 9, 10], 3: [11, 13, 14, 12, 9, 10], 4: [11, 12, 9, 8, 7, 10], 5: [11, 12, 14, 6, 10], 6: [11, 13, 14, 6, 10], 7: [11, 13, 9, 8, 7, 10], 8: [11, 12, 14, 13, 9, 8, 7, 10], 9: [11, 12, 9, 13, 14, 6, 10]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82ca1b3400>, {0: [11, 12], 1: [11, 13, 14, 12], 2: [11, 13, 9, 12], 3: [11, 13, 14, 6, 10, 9, 12], 4: [11, 4, 5, 7, 8, 9, 12], 5: [11, 13, 9, 10, 6, 14, 12], 6: [11, 4, 5, 7, 8, 9, 13, 14, 12], 7: [11, 4, 5, 7, 10, 9, 12], 8: [11, 4, 5, 6, 10, 9, 12], 9: [11, 4, 5, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82ca1b3370>, {0: [11, 13], 1: [11, 12, 14, 13], 2: [11, 12, 9, 13], 3: [11, 12, 9, 10, 6, 14, 13], 4: [11, 12, 14, 6, 10, 9, 13], 5: [11, 4, 5, 7, 8, 9, 13], 6: [11, 4, 5, 7, 8, 9, 12, 14, 13], 7: [11, 4, 5, 7, 10, 9, 13], 8: [11, 4, 5, 6, 14, 13], 9: [11, 4, 5, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82ca1b32e0>, {0: [11, 12, 14], 1: [11, 13, 14], 2: [11, 12, 9, 13, 14], 3: [11, 13, 9, 12, 14], 4: [11, 12, 9, 10, 6, 14], 5: [11, 13, 9, 10, 6, 14], 6: [11, 4, 5, 7, 8, 9, 13, 14], 7: [11, 4, 5, 7, 8, 9, 12, 14], 8: [11, 4, 5, 6, 14], 9: [11, 4, 5, 7, 10, 9, 13, 14]})}), 12: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc739000>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739090>, {0: [12, 9, 8, 1], 1: [12, 14, 13, 9, 8, 1], 2: [12, 11, 4, 2, 1], 3: [12, 9, 8, 7, 5, 4, 2, 1], 4: [12, 11, 13, 9, 8, 1], 5: [12, 14, 13, 11, 4, 2, 1], 6: [12, 9, 13, 11, 4, 2, 1], 7: [12, 14, 13, 9, 8, 7, 5, 4, 2, 1], 8: [12, 14, 6, 3, 1], 9: [12, 11, 4, 2, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc738ee0>, {0: [12, 11, 4, 2], 1: [12, 9, 8, 7, 5, 4, 2], 2: [12, 14, 13, 11, 4, 2], 3: [12, 9, 13, 11, 4, 2], 4: [12, 14, 13, 9, 8, 7, 5, 4, 2], 5: [12, 9, 10, 7, 5, 4, 2], 6: [12, 9, 8, 1, 2], 7: [12, 14, 6, 3, 2], 8: [12, 9, 10, 6, 3, 2], 9: [12, 14, 6, 5, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc738f70>, {0: [12, 14, 6, 3], 1: [12, 9, 10, 6, 3], 2: [12, 11, 4, 2, 3], 3: [12, 14, 13, 9, 10, 6, 3], 4: [12, 9, 13, 14, 6, 3], 5: [12, 9, 8, 7, 5, 4, 2, 3], 6: [12, 14, 13, 11, 4, 2, 3], 7: [12, 9, 13, 11, 4, 2, 3], 8: [12, 14, 13, 9, 8, 7, 5, 4, 2, 3], 9: [12, 9, 10, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc738040>, {0: [12, 11, 4], 1: [12, 9, 8, 7, 5, 4], 2: [12, 14, 13, 11, 4], 3: [12, 9, 13, 11, 4], 4: [12, 14, 13, 9, 8, 7, 5, 4], 5: [12, 9, 10, 7, 5, 4], 6: [12, 14, 6, 5, 4], 7: [12, 9, 10, 6, 5, 4], 8: [12, 14, 13, 9, 10, 7, 5, 4], 9: [12, 11, 13, 9, 8, 7, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc738280>, {0: [12, 9, 8, 7, 5], 1: [12, 14, 13, 9, 8, 7, 5], 2: [12, 9, 10, 7, 5], 3: [12, 11, 4, 5], 4: [12, 14, 6, 5], 5: [12, 9, 10, 6, 5], 6: [12, 14, 13, 9, 10, 7, 5], 7: [12, 14, 13, 11, 4, 5], 8: [12, 9, 13, 14, 6, 5], 9: [12, 11, 13, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc738d30>, {0: [12, 14, 6], 1: [12, 9, 10, 6], 2: [12, 14, 13, 9, 10, 6], 3: [12, 9, 13, 14, 6], 4: [12, 11, 13, 14, 6], 5: [12, 11, 13, 9, 10, 6], 6: [12, 9, 8, 7, 5, 6], 7: [12, 14, 13, 9, 8, 7, 5, 6], 8: [12, 9, 10, 7, 5, 6], 9: [12, 9, 8, 7, 10, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc738dc0>, {0: [12, 9, 8, 7], 1: [12, 14, 13, 9, 8, 7], 2: [12, 9, 10, 7], 3: [12, 14, 13, 9, 10, 7], 4: [12, 11, 13, 9, 8, 7], 5: [12, 11, 4, 5, 7], 6: [12, 11, 13, 9, 10, 7], 7: [12, 14, 6, 5, 7], 8: [12, 9, 10, 6, 5, 7], 9: [12, 14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc7384c0>, {0: [12, 9, 8], 1: [12, 14, 13, 9, 8], 2: [12, 11, 13, 9, 8], 3: [12, 9, 10, 7, 8], 4: [12, 14, 13, 9, 10, 7, 8], 5: [12, 11, 4, 5, 7, 8], 6: [12, 11, 13, 9, 10, 7, 8], 7: [12, 14, 6, 5, 7, 8], 8: [12, 9, 10, 6, 5, 7, 8], 9: [12, 14, 6, 10, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739120>, {0: [12, 9], 1: [12, 14, 13, 9], 2: [12, 11, 13, 9], 3: [12, 14, 6, 10, 9], 4: [12, 11, 13, 14, 6, 10, 9], 5: [12, 11, 4, 5, 7, 8, 9], 6: [12, 14, 6, 5, 7, 8, 9], 7: [12, 14, 13, 11, 4, 5, 7, 8, 9], 8: [12, 11, 4, 5, 7, 10, 9], 9: [12, 14, 6, 10, 7, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc738e50>, {0: [12, 9, 10], 1: [12, 14, 13, 9, 10], 2: [12, 11, 13, 9, 10], 3: [12, 9, 8, 7, 10], 4: [12, 14, 6, 10], 5: [12, 14, 13, 9, 8, 7, 10], 6: [12, 9, 13, 14, 6, 10], 7: [12, 11, 13, 14, 6, 10], 8: [12, 11, 13, 9, 8, 7, 10], 9: [12, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc738430>, {0: [12, 11], 1: [12, 14, 13, 11], 2: [12, 9, 13, 11], 3: [12, 9, 10, 6, 14, 13, 11], 4: [12, 14, 6, 10, 9, 13, 11], 5: [12, 9, 8, 7, 5, 4, 11], 6: [12, 14, 13, 9, 8, 7, 5, 4, 11], 7: [12, 9, 10, 7, 5, 4, 11], 8: [12, 9, 10, 6, 5, 4, 11], 9: [12, 14, 6, 5, 4, 11]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc7391b0>, {0: [12, 14, 13], 1: [12, 9, 13], 2: [12, 11, 13], 3: [12, 9, 10, 6, 14, 13], 4: [12, 14, 6, 10, 9, 13], 5: [12, 11, 4, 5, 7, 8, 9, 13], 6: [12, 9, 8, 7, 5, 6, 14, 13], 7: [12, 14, 6, 5, 7, 8, 9, 13], 8: [12, 9, 8, 7, 5, 4, 11, 13], 9: [12, 9, 10, 7, 5, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739240>, {0: [12, 14], 1: [12, 9, 13, 14], 2: [12, 11, 13, 14], 3: [12, 9, 10, 6, 14], 4: [12, 11, 13, 9, 10, 6, 14], 5: [12, 9, 8, 7, 5, 6, 14], 6: [12, 11, 4, 5, 7, 8, 9, 13, 14], 7: [12, 9, 8, 7, 5, 4, 11, 13, 14], 8: [12, 9, 10, 7, 5, 6, 14], 9: [12, 9, 8, 7, 10, 6, 14]})}), 13: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc7392d0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739360>, {0: [13, 9, 8, 1], 1: [13, 14, 12, 9, 8, 1], 2: [13, 11, 4, 2, 1], 3: [13, 9, 8, 7, 5, 4, 2, 1], 4: [13, 14, 12, 11, 4, 2, 1], 5: [13, 11, 12, 9, 8, 1], 6: [13, 9, 12, 11, 4, 2, 1], 7: [13, 14, 6, 3, 1], 8: [13, 14, 12, 9, 8, 7, 5, 4, 2, 1], 9: [13, 9, 10, 6, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc7393f0>, {0: [13, 11, 4, 2], 1: [13, 14, 12, 11, 4, 2], 2: [13, 9, 8, 7, 5, 4, 2], 3: [13, 9, 12, 11, 4, 2], 4: [13, 14, 12, 9, 8, 7, 5, 4, 2], 5: [13, 14, 6, 3, 2], 6: [13, 9, 10, 7, 5, 4, 2], 7: [13, 9, 8, 1, 2], 8: [13, 14, 6, 5, 4, 2], 9: [13, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739480>, {0: [13, 14, 6, 3], 1: [13, 9, 10, 6, 3], 2: [13, 11, 4, 2, 3], 3: [13, 14, 12, 9, 10, 6, 3], 4: [13, 9, 8, 7, 5, 4, 2, 3], 5: [13, 14, 12, 11, 4, 2, 3], 6: [13, 9, 12, 14, 6, 3], 7: [13, 9, 12, 11, 4, 2, 3], 8: [13, 14, 12, 9, 8, 7, 5, 4, 2, 3], 9: [13, 9, 10, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739510>, {0: [13, 11, 4], 1: [13, 14, 12, 11, 4], 2: [13, 9, 8, 7, 5, 4], 3: [13, 9, 12, 11, 4], 4: [13, 14, 12, 9, 8, 7, 5, 4], 5: [13, 9, 10, 7, 5, 4], 6: [13, 14, 6, 5, 4], 7: [13, 9, 10, 6, 5, 4], 8: [13, 14, 12, 9, 10, 7, 5, 4], 9: [13, 11, 12, 9, 8, 7, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc7395a0>, {0: [13, 9, 8, 7, 5], 1: [13, 14, 12, 9, 8, 7, 5], 2: [13, 9, 10, 7, 5], 3: [13, 14, 6, 5], 4: [13, 11, 4, 5], 5: [13, 9, 10, 6, 5], 6: [13, 14, 12, 9, 10, 7, 5], 7: [13, 14, 12, 11, 4, 5], 8: [13, 9, 12, 11, 4, 5], 9: [13, 11, 12, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739630>, {0: [13, 14, 6], 1: [13, 9, 10, 6], 2: [13, 14, 12, 9, 10, 6], 3: [13, 9, 12, 14, 6], 4: [13, 11, 12, 14, 6], 5: [13, 11, 12, 9, 10, 6], 6: [13, 9, 8, 7, 5, 6], 7: [13, 14, 12, 9, 8, 7, 5, 6], 8: [13, 9, 10, 7, 5, 6], 9: [13, 9, 8, 7, 10, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc7396c0>, {0: [13, 9, 8, 7], 1: [13, 14, 12, 9, 8, 7], 2: [13, 9, 10, 7], 3: [13, 14, 12, 9, 10, 7], 4: [13, 11, 12, 9, 8, 7], 5: [13, 14, 6, 5, 7], 6: [13, 11, 12, 9, 10, 7], 7: [13, 9, 10, 6, 5, 7], 8: [13, 11, 4, 5, 7], 9: [13, 14, 12, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739750>, {0: [13, 9, 8], 1: [13, 14, 12, 9, 8], 2: [13, 11, 12, 9, 8], 3: [13, 9, 10, 7, 8], 4: [13, 14, 12, 9, 10, 7, 8], 5: [13, 14, 6, 5, 7, 8], 6: [13, 11, 12, 9, 10, 7, 8], 7: [13, 14, 6, 10, 9, 8], 8: [13, 11, 4, 5, 7, 8], 9: [13, 9, 10, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc7397e0>, {0: [13, 9], 1: [13, 14, 12, 9], 2: [13, 11, 12, 9], 3: [13, 14, 6, 10, 9], 4: [13, 11, 12, 14, 6, 10, 9], 5: [13, 14, 6, 5, 7, 8, 9], 6: [13, 11, 4, 5, 7, 8, 9], 7: [13, 14, 12, 11, 4, 5, 7, 8, 9], 8: [13, 14, 6, 10, 7, 8, 9], 9: [13, 14, 6, 5, 7, 10, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739870>, {0: [13, 9, 10], 1: [13, 14, 12, 9, 10], 2: [13, 11, 12, 9, 10], 3: [13, 14, 6, 10], 4: [13, 9, 8, 7, 10], 5: [13, 14, 12, 9, 8, 7, 10], 6: [13, 9, 12, 14, 6, 10], 7: [13, 11, 12, 14, 6, 10], 8: [13, 11, 12, 9, 8, 7, 10], 9: [13, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739900>, {0: [13, 11], 1: [13, 14, 12, 11], 2: [13, 9, 12, 11], 3: [13, 14, 6, 10, 9, 12, 11], 4: [13, 9, 10, 6, 14, 12, 11], 5: [13, 9, 8, 7, 5, 4, 11], 6: [13, 14, 12, 9, 8, 7, 5, 4, 11], 7: [13, 9, 10, 7, 5, 4, 11], 8: [13, 14, 6, 5, 4, 11], 9: [13, 9, 10, 6, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739990>, {0: [13, 14, 12], 1: [13, 9, 12], 2: [13, 11, 12], 3: [13, 14, 6, 10, 9, 12], 4: [13, 9, 10, 6, 14, 12], 5: [13, 14, 6, 5, 7, 8, 9, 12], 6: [13, 9, 8, 7, 5, 4, 11, 12], 7: [13, 11, 4, 5, 7, 8, 9, 12], 8: [13, 9, 8, 7, 5, 6, 14, 12], 9: [13, 14, 6, 10, 7, 8, 9, 12]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739a20>, {0: [13, 14], 1: [13, 9, 12, 14], 2: [13, 11, 12, 14], 3: [13, 9, 10, 6, 14], 4: [13, 11, 12, 9, 10, 6, 14], 5: [13, 9, 8, 7, 5, 6, 14], 6: [13, 9, 8, 7, 5, 4, 11, 12, 14], 7: [13, 11, 4, 5, 7, 8, 9, 12, 14], 8: [13, 9, 10, 7, 5, 6, 14], 9: [13, 9, 8, 7, 10, 6, 14]})}), 14: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7f82cc739ab0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739b40>, {0: [14, 13, 9, 8, 1], 1: [14, 12, 9, 8, 1], 2: [14, 13, 11, 4, 2, 1], 3: [14, 12, 11, 4, 2, 1], 4: [14, 13, 9, 8, 7, 5, 4, 2, 1], 5: [14, 13, 11, 12, 9, 8, 1], 6: [14, 13, 9, 12, 11, 4, 2, 1], 7: [14, 6, 3, 1], 8: [14, 12, 9, 8, 7, 5, 4, 2, 1], 9: [14, 12, 11, 13, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739bd0>, {0: [14, 13, 11, 4, 2], 1: [14, 12, 11, 4, 2], 2: [14, 13, 9, 8, 7, 5, 4, 2], 3: [14, 12, 9, 8, 7, 5, 4, 2], 4: [14, 13, 9, 12, 11, 4, 2], 5: [14, 6, 3, 2], 6: [14, 12, 9, 13, 11, 4, 2], 7: [14, 6, 5, 4, 2], 8: [14, 13, 9, 10, 7, 5, 4, 2], 9: [14, 13, 9, 8, 1, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739c60>, {0: [14, 6, 3], 1: [14, 13, 9, 10, 6, 3], 2: [14, 12, 9, 10, 6, 3], 3: [14, 13, 11, 4, 2, 3], 4: [14, 12, 11, 4, 2, 3], 5: [14, 13, 9, 8, 7, 5, 4, 2, 3], 6: [14, 12, 9, 8, 7, 5, 4, 2, 3], 7: [14, 13, 9, 12, 11, 4, 2, 3], 8: [14, 6, 5, 4, 2, 3], 9: [14, 12, 9, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739cf0>, {0: [14, 13, 11, 4], 1: [14, 12, 11, 4], 2: [14, 13, 9, 8, 7, 5, 4], 3: [14, 12, 9, 8, 7, 5, 4], 4: [14, 13, 9, 12, 11, 4], 5: [14, 6, 5, 4], 6: [14, 12, 9, 13, 11, 4], 7: [14, 13, 9, 10, 7, 5, 4], 8: [14, 12, 9, 10, 7, 5, 4], 9: [14, 13, 9, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739d80>, {0: [14, 13, 9, 8, 7, 5], 1: [14, 12, 9, 8, 7, 5], 2: [14, 6, 5], 3: [14, 13, 9, 10, 7, 5], 4: [14, 12, 9, 10, 7, 5], 5: [14, 13, 11, 4, 5], 6: [14, 12, 11, 4, 5], 7: [14, 13, 9, 10, 6, 5], 8: [14, 12, 9, 10, 6, 5], 9: [14, 13, 9, 12, 11, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739e10>, {0: [14, 6], 1: [14, 13, 9, 10, 6], 2: [14, 12, 9, 10, 6], 3: [14, 13, 11, 12, 9, 10, 6], 4: [14, 13, 9, 8, 7, 5, 6], 5: [14, 12, 11, 13, 9, 10, 6], 6: [14, 12, 9, 8, 7, 5, 6], 7: [14, 13, 9, 10, 7, 5, 6], 8: [14, 13, 9, 8, 7, 10, 6], 9: [14, 12, 9, 10, 7, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739ea0>, {0: [14, 13, 9, 8, 7], 1: [14, 12, 9, 8, 7], 2: [14, 13, 9, 10, 7], 3: [14, 12, 9, 10, 7], 4: [14, 13, 11, 12, 9, 8, 7], 5: [14, 12, 11, 13, 9, 8, 7], 6: [14, 6, 5, 7], 7: [14, 13, 11, 12, 9, 10, 7], 8: [14, 13, 9, 10, 6, 5, 7], 9: [14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739f30>, {0: [14, 13, 9, 8], 1: [14, 12, 9, 8], 2: [14, 13, 11, 12, 9, 8], 3: [14, 12, 11, 13, 9, 8], 4: [14, 13, 9, 10, 7, 8], 5: [14, 12, 9, 10, 7, 8], 6: [14, 6, 5, 7, 8], 7: [14, 6, 10, 9, 8], 8: [14, 13, 11, 12, 9, 10, 7, 8], 9: [14, 13, 11, 4, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc739fc0>, {0: [14, 13, 9], 1: [14, 12, 9], 2: [14, 13, 11, 12, 9], 3: [14, 12, 11, 13, 9], 4: [14, 6, 10, 9], 5: [14, 6, 5, 7, 8, 9], 6: [14, 13, 11, 4, 5, 7, 8, 9], 7: [14, 12, 11, 4, 5, 7, 8, 9], 8: [14, 6, 10, 7, 8, 9], 9: [14, 6, 5, 7, 10, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc73a050>, {0: [14, 13, 9, 10], 1: [14, 12, 9, 10], 2: [14, 13, 11, 12, 9, 10], 3: [14, 12, 11, 13, 9, 10], 4: [14, 6, 10], 5: [14, 13, 9, 8, 7, 10], 6: [14, 12, 9, 8, 7, 10], 7: [14, 13, 11, 12, 9, 8, 7, 10], 8: [14, 12, 11, 13, 9, 8, 7, 10], 9: [14, 13, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc73a0e0>, {0: [14, 13, 11], 1: [14, 12, 11], 2: [14, 13, 9, 12, 11], 3: [14, 12, 9, 13, 11], 4: [14, 6, 10, 9, 12, 11], 5: [14, 6, 10, 9, 13, 11], 6: [14, 13, 9, 8, 7, 5, 4, 11], 7: [14, 12, 9, 8, 7, 5, 4, 11], 8: [14, 6, 5, 4, 11], 9: [14, 13, 9, 10, 7, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc73a170>, {0: [14, 12], 1: [14, 13, 9, 12], 2: [14, 13, 11, 12], 3: [14, 6, 10, 9, 12], 4: [14, 6, 10, 9, 13, 11, 12], 5: [14, 6, 5, 7, 8, 9, 12], 6: [14, 13, 9, 8, 7, 5, 4, 11, 12], 7: [14, 13, 11, 4, 5, 7, 8, 9, 12], 8: [14, 6, 10, 7, 8, 9, 12], 9: [14, 6, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7f82cc73a200>, {0: [14, 13], 1: [14, 12, 9, 13], 2: [14, 12, 11, 13], 3: [14, 6, 10, 9, 13], 4: [14, 6, 10, 9, 12, 11, 13], 5: [14, 6, 5, 7, 8, 9, 13], 6: [14, 12, 11, 4, 5, 7, 8, 9, 13], 7: [14, 12, 9, 8, 7, 5, 4, 11, 13], 8: [14, 6, 10, 7, 8, 9, 13], 9: [14, 6, 5, 7, 10, 9, 13]})})})
Starting agent_0
Starting agent_1
Starting agent_2
stored successfully!
stored successfully!
stored successfully!
Episode Count =  4
Blocking Probability =  0.413
Mean Resource Utilization = 0.31411636363636364
----
Episode Count =  5
Blocking Probability =  0.439
Mean Resource Utilization = 0.32358681818181817
----
Episode Count =  6
Blocking Probability =  0.436
Mean Resource Utilization = 0.3200625
----
Episode Count =  7
Blocking Probability =  0.433
Mean Resource Utilization = 0.3080031818181818
----
Episode Count =  8
Blocking Probability =  0.424
Mean Resource Utilization = 0.33090818181818177
----
Episode Count =  9
Blocking Probability =  0.463
Mean Resource Utilization = 0.33026659090909094
----
Episode Count =  10
Blocking Probability =  0.452
Mean Resource Utilization = 0.3101222727272727
----
Episode Count =  11
Blocking Probability =  0.444
Mean Resource Utilization = 0.3204068181818182
----
Episode Count =  12
Blocking Probability =  0.435
Mean Resource Utilization = 0.3151684090909091
----
Episode Count =  13
Blocking Probability =  0.449
Mean Resource Utilization = 0.31184522727272723
----
Episode Count =  14
Blocking Probability =  0.434
Mean Resource Utilization = 0.2988245454545455
----
Episode Count =  15
Blocking Probability =  0.429
Mean Resource Utilization = 0.30946022727272726
----
Episode Count =  16
Blocking Probability =  0.449
Mean Resource Utilization = 0.3208465909090909
----
Episode Count =  17
Blocking Probability =  0.446
Mean Resource Utilization = 0.3239959090909091
----
Episode Count =  18
Blocking Probability =  0.453
Mean Resource Utilization = 0.3112677272727273
----
Episode Count =  19
Blocking Probability =  0.461
Mean Resource Utilization = 0.3338515909090909
----
Episode Count =  20
Blocking Probability =  0.421
Mean Resource Utilization = 0.31470272727272725
----
Episode Count =  21
Blocking Probability =  0.43
Mean Resource Utilization = 0.3132327272727273
----
Episode Count =  22
Blocking Probability =  0.447
Mean Resource Utilization = 0.3074897727272727
----
Episode Count =  23
Blocking Probability =  0.445
Mean Resource Utilization = 0.31926750000000004
----
Episode Count =  24
Blocking Probability =  0.449
Mean Resource Utilization = 0.3149134090909091
----
Episode Count =  25
Blocking Probability =  0.429
Mean Resource Utilization = 0.3306818181818182
----
Episode Count =  26
Blocking Probability =  0.45
Mean Resource Utilization = 0.3268765909090909
----
Episode Count =  27
Blocking Probability =  0.449
Mean Resource Utilization = 0.29921250000000005
----
Episode Count =  28
Blocking Probability =  0.436
Mean Resource Utilization = 0.31589590909090914
----
Episode Count =  29
Blocking Probability =  0.47
Mean Resource Utilization = 0.32160954545454545
----
Episode Count =  30
Blocking Probability =  0.423
Mean Resource Utilization = 0.32483931818181816
----
Episode Count =  31
Blocking Probability =  0.452
Mean Resource Utilization = 0.33019772727272734
----
Episode Count =  32
Blocking Probability =  0.438
Mean Resource Utilization = 0.3283554545454545
----
Episode Count =  33
Blocking Probability =  0.458
Mean Resource Utilization = 0.34189227272727274
----
Episode Count =  34
Blocking Probability =  0.429
Mean Resource Utilization = 0.32612795454545457
----
Episode Count =  35
Blocking Probability =  0.45
Mean Resource Utilization = 0.32255045454545456
----
Episode Count =  36
Blocking Probability =  0.425
Mean Resource Utilization = 0.3269175
----
Episode Count =  37
Blocking Probability =  0.458
Mean Resource Utilization = 0.33606136363636363
----
Episode Count =  38
Blocking Probability =  0.424
Mean Resource Utilization = 0.3149175
----
Episode Count =  39
Blocking Probability =  0.439
Mean Resource Utilization = 0.32070477272727277
----
Episode Count =  40
Blocking Probability =  0.438
Mean Resource Utilization = 0.31529250000000003
----
Episode Count =  41
Blocking Probability =  0.479
Mean Resource Utilization = 0.32000795454545455
----
Episode Count =  42
Blocking Probability =  0.407
Mean Resource Utilization = 0.3175097727272727
----
Episode Count =  43
Blocking Probability =  0.427
Mean Resource Utilization = 0.33631568181818183
----
Episode Count =  44
Blocking Probability =  0.429
Mean Resource Utilization = 0.3252443181818182
----
Episode Count =  45
Blocking Probability =  0.418
Mean Resource Utilization = 0.3356809090909091
----
Episode Count =  46
Blocking Probability =  0.426
Mean Resource Utilization = 0.31715590909090907
----
Episode Count =  47
Blocking Probability =  0.4
Mean Resource Utilization = 0.32912522727272725
----
Episode Count =  48
Blocking Probability =  0.434
Mean Resource Utilization = 0.32875363636363636
----
Episode Count =  49
Blocking Probability =  0.427
Mean Resource Utilization = 0.3483484090909091
----
Episode Count =  50
Blocking Probability =  0.42
Mean Resource Utilization = 0.3182188636363636
----
Episode Count =  51
Blocking Probability =  0.413
Mean Resource Utilization = 0.3254147727272727
----
Episode Count =  52
Blocking Probability =  0.415
Mean Resource Utilization = 0.32298068181818185
----
Episode Count =  53
Blocking Probability =  0.393
Mean Resource Utilization = 0.31689340909090913
----
Episode Count =  54
Blocking Probability =  0.409
Mean Resource Utilization = 0.34591568181818183
----
Episode Count =  55
Blocking Probability =  0.425
Mean Resource Utilization = 0.33126613636363633
----
Episode Count =  56
Blocking Probability =  0.429
Mean Resource Utilization = 0.3223220454545455
----
Episode Count =  57
Blocking Probability =  0.438
Mean Resource Utilization = 0.34341750000000004
----
Episode Count =  58
Blocking Probability =  0.413
Mean Resource Utilization = 0.3348572727272727
----
Episode Count =  59
Blocking Probability =  0.414
Mean Resource Utilization = 0.3447784090909091
----
Episode Count =  60
Blocking Probability =  0.394
Mean Resource Utilization = 0.3478431818181818
----
Episode Count =  61
Blocking Probability =  0.408
Mean Resource Utilization = 0.3383495454545455
----
Episode Count =  62
Blocking Probability =  0.393
Mean Resource Utilization = 0.32910272727272727
----
Episode Count =  63
Blocking Probability =  0.36
Mean Resource Utilization = 0.34549227272727273
----
Episode Count =  64
Blocking Probability =  0.409
Mean Resource Utilization = 0.3504654545454546
----
Episode Count =  65
Blocking Probability =  0.396
Mean Resource Utilization = 0.3369375
----
Episode Count =  66
Blocking Probability =  0.392
Mean Resource Utilization = 0.342855
----
Episode Count =  67
Blocking Probability =  0.371
Mean Resource Utilization = 0.33482727272727264
----
Episode Count =  68
Blocking Probability =  0.387
Mean Resource Utilization = 0.33022977272727266
----
Episode Count =  69
Blocking Probability =  0.398
Mean Resource Utilization = 0.3297538636363636
----
Episode Count =  70
Blocking Probability =  0.367
Mean Resource Utilization = 0.3435115909090909
----
Episode Count =  71
Blocking Probability =  0.383
Mean Resource Utilization = 0.34741704545454544
----
Episode Count =  72
Blocking Probability =  0.363
Mean Resource Utilization = 0.3503993181818182
----
Episode Count =  73
Blocking Probability =  0.4
Mean Resource Utilization = 0.3442356818181818
----
Episode Count =  74
Blocking Probability =  0.332
Mean Resource Utilization = 0.3372531818181818
----
Episode Count =  75
Blocking Probability =  0.345
Mean Resource Utilization = 0.3410584090909091
----
Episode Count =  76
Blocking Probability =  0.366
Mean Resource Utilization = 0.3484056818181818
----
Episode Count =  77
Blocking Probability =  0.337
Mean Resource Utilization = 0.3565343181818182
----
Episode Count =  78
Blocking Probability =  0.345
Mean Resource Utilization = 0.3402395454545455
----
Episode Count =  79
Blocking Probability =  0.346
Mean Resource Utilization = 0.3380686363636364
----
Episode Count =  80
Blocking Probability =  0.363
Mean Resource Utilization = 0.3437134090909091
----
Episode Count =  81
Blocking Probability =  0.324
Mean Resource Utilization = 0.34062886363636363
----
Episode Count =  82
Blocking Probability =  0.347
Mean Resource Utilization = 0.3455931818181818
----
Episode Count =  83
Blocking Probability =  0.343
Mean Resource Utilization = 0.35062295454545456
----
Episode Count =  84
Blocking Probability =  0.333
Mean Resource Utilization = 0.3602434090909091
----
Episode Count =  85
Blocking Probability =  0.344
Mean Resource Utilization = 0.35905227272727275
----
Episode Count =  86
Blocking Probability =  0.308
Mean Resource Utilization = 0.32339659090909095
----
Episode Count =  87
Blocking Probability =  0.308
Mean Resource Utilization = 0.3527611363636364
----
Episode Count =  88
Blocking Probability =  0.323
Mean Resource Utilization = 0.3506018181818182
----
Episode Count =  89
Blocking Probability =  0.3
Mean Resource Utilization = 0.34211454545454545
----
Episode Count =  90
Blocking Probability =  0.312
Mean Resource Utilization = 0.34811454545454545
----
Episode Count =  91
Blocking Probability =  0.299
Mean Resource Utilization = 0.34167613636363636
----
Episode Count =  92
Blocking Probability =  0.323
Mean Resource Utilization = 0.33478568181818186
----
Episode Count =  93
Blocking Probability =  0.293
Mean Resource Utilization = 0.3433568181818182
----
Episode Count =  94
Blocking Probability =  0.311
Mean Resource Utilization = 0.35269022727272725
----
Episode Count =  95
Blocking Probability =  0.295
Mean Resource Utilization = 0.3265029545454546
----
Episode Count =  96
Blocking Probability =  0.316
Mean Resource Utilization = 0.3514793181818182
----
Episode Count =  97
Blocking Probability =  0.323
Mean Resource Utilization = 0.36419181818181817
----
stored successfully!
Episode Count =  98
Blocking Probability =  0.295
Mean Resource Utilization = 0.3418220454545454
----
stored successfully!
Episode Count =  99
Blocking Probability =  0.315
Mean Resource Utilization = 0.3588054545454545
----
Episode Count =  100
Blocking Probability =  0.337
Mean Resource Utilization = 0.3475322727272727
----
Model Saved
stored successfully!
Episode Count =  101
Blocking Probability =  0.248
Mean Resource Utilization = 0.33228818181818176
----
Episode Count =  102
Blocking Probability =  0.299
Mean Resource Utilization = 0.3523125
----
Episode Count =  103
Blocking Probability =  0.249
Mean Resource Utilization = 0.3436779545454546
----
Episode Count =  104
Blocking Probability =  0.273
Mean Resource Utilization = 0.3491181818181818
----
Episode Count =  105
Blocking Probability =  0.297
Mean Resource Utilization = 0.3411525
----
Episode Count =  106
Blocking Probability =  0.285
Mean Resource Utilization = 0.33391977272727275
----
Episode Count =  107
Blocking Probability =  0.323
Mean Resource Utilization = 0.3393306818181818
----
Episode Count =  108
Blocking Probability =  0.281
Mean Resource Utilization = 0.33888613636363635
----
Episode Count =  109
Blocking Probability =  0.273
Mean Resource Utilization = 0.34527204545454543
----
Episode Count =  110
Blocking Probability =  0.285
Mean Resource Utilization = 0.3459518181818182
----
Episode Count =  111
Blocking Probability =  0.307
Mean Resource Utilization = 0.3496588636363636
----
Episode Count =  112
Blocking Probability =  0.287
Mean Resource Utilization = 0.3388684090909091
----
Episode Count =  113
Blocking Probability =  0.287
Mean Resource Utilization = 0.33163431818181816
----
Episode Count =  114
Blocking Probability =  0.292
Mean Resource Utilization = 0.354295909090909
----
Episode Count =  115
Blocking Probability =  0.27
Mean Resource Utilization = 0.33359249999999996
----
Episode Count =  116
Blocking Probability =  0.302
Mean Resource Utilization = 0.33193090909090905
----
Episode Count =  117
Blocking Probability =  0.309
Mean Resource Utilization = 0.36229977272727276
----
Episode Count =  118
Blocking Probability =  0.304
Mean Resource Utilization = 0.3605604545454545
----
Episode Count =  119
Blocking Probability =  0.281
Mean Resource Utilization = 0.3340875
----
Episode Count =  120
Blocking Probability =  0.288
Mean Resource Utilization = 0.3427015909090909
----
Episode Count =  121
Blocking Probability =  0.266
Mean Resource Utilization = 0.3525715909090909
----
Episode Count =  122
Blocking Probability =  0.284
Mean Resource Utilization = 0.3362720454545455
----
Episode Count =  123
Blocking Probability =  0.294
Mean Resource Utilization = 0.3453893181818182
----
Episode Count =  124
Blocking Probability =  0.282
Mean Resource Utilization = 0.3496493181818182
----
Episode Count =  125
Blocking Probability =  0.277
Mean Resource Utilization = 0.33704590909090903
----
Episode Count =  126
Blocking Probability =  0.286
Mean Resource Utilization = 0.3501238636363636
----
Episode Count =  127
Blocking Probability =  0.275
Mean Resource Utilization = 0.33651681818181817
----
Episode Count =  128
Blocking Probability =  0.285
Mean Resource Utilization = 0.3234640909090909
----
Episode Count =  129
Blocking Probability =  0.257
Mean Resource Utilization = 0.34032545454545454
----
Episode Count =  130
Blocking Probability =  0.259
Mean Resource Utilization = 0.34249772727272726
----
Episode Count =  131
Blocking Probability =  0.271
Mean Resource Utilization = 0.3525961363636364
----
Episode Count =  132
Blocking Probability =  0.273
Mean Resource Utilization = 0.3425011363636364
----
Episode Count =  133
Blocking Probability =  0.285
Mean Resource Utilization = 0.3415929545454545
----
Episode Count =  134
Blocking Probability =  0.303
Mean Resource Utilization = 0.332655
----
Episode Count =  135
Blocking Probability =  0.297
Mean Resource Utilization = 0.35254704545454546
----
Episode Count =  136
Blocking Probability =  0.259
Mean Resource Utilization = 0.342225
----
Episode Count =  137
Blocking Probability =  0.297
Mean Resource Utilization = 0.33675136363636365
----
Episode Count =  138
Blocking Probability =  0.268
Mean Resource Utilization = 0.3569434090909091
----
Episode Count =  139
Blocking Probability =  0.246
Mean Resource Utilization = 0.32190749999999996
----
Episode Count =  140
Blocking Probability =  0.286
Mean Resource Utilization = 0.3570156818181819
----
Episode Count =  141
Blocking Probability =  0.273
Mean Resource Utilization = 0.34943386363636364
----
Episode Count =  142
Blocking Probability =  0.292
Mean Resource Utilization = 0.3352015909090909
----
Episode Count =  143
Blocking Probability =  0.257
Mean Resource Utilization = 0.34485818181818184
----
Episode Count =  144
Blocking Probability =  0.277
Mean Resource Utilization = 0.3423368181818182
----
Episode Count =  145
Blocking Probability =  0.28
Mean Resource Utilization = 0.3526438636363637
----
Episode Count =  146
Blocking Probability =  0.285
Mean Resource Utilization = 0.33411613636363635
----
Episode Count =  147
Blocking Probability =  0.301
Mean Resource Utilization = 0.3548018181818181
----
Episode Count =  148
Blocking Probability =  0.286
Mean Resource Utilization = 0.34406045454545453
----
Episode Count =  149
Blocking Probability =  0.278
Mean Resource Utilization = 0.33076159090909085
----
Episode Count =  150
Blocking Probability =  0.279
Mean Resource Utilization = 0.3360688636363636
----
Episode Count =  151
Blocking Probability =  0.259
Mean Resource Utilization = 0.33414886363636365
----
Episode Count =  152
Blocking Probability =  0.31
Mean Resource Utilization = 0.3556834090909091
----
Episode Count =  153
Blocking Probability =  0.249
Mean Resource Utilization = 0.3232247727272727
----
Episode Count =  154
Blocking Probability =  0.288
Mean Resource Utilization = 0.35816999999999993
----
Episode Count =  155
Blocking Probability =  0.281
Mean Resource Utilization = 0.3287140909090909
----
Episode Count =  156
Blocking Probability =  0.288
Mean Resource Utilization = 0.35324863636363635
----
Episode Count =  157
Blocking Probability =  0.255
Mean Resource Utilization = 0.3255361363636364
----
Episode Count =  158
Blocking Probability =  0.272
Mean Resource Utilization = 0.3375695454545454
----
Episode Count =  159
Blocking Probability =  0.314
Mean Resource Utilization = 0.33275454545454547
----
Episode Count =  160
Blocking Probability =  0.268
Mean Resource Utilization = 0.33896659090909087
----
Episode Count =  161
Blocking Probability =  0.273
Mean Resource Utilization = 0.35672727272727267
----
Episode Count =  162
Blocking Probability =  0.25
Mean Resource Utilization = 0.34098068181818186
----
Episode Count =  163
Blocking Probability =  0.282
Mean Resource Utilization = 0.3452543181818182
----
Episode Count =  164
Blocking Probability =  0.253
Mean Resource Utilization = 0.34788613636363636
----
Episode Count =  165
Blocking Probability =  0.259
Mean Resource Utilization = 0.3398004545454545
----
Episode Count =  166
Blocking Probability =  0.263
Mean Resource Utilization = 0.34403590909090914
----
Episode Count =  167
Blocking Probability =  0.266
Mean Resource Utilization = 0.35324659090909083
----
Episode Count =  168
Blocking Probability =  0.299
Mean Resource Utilization = 0.34927568181818186
----
Episode Count =  169
Blocking Probability =  0.272
Mean Resource Utilization = 0.3437584090909091
----
Episode Count =  170
Blocking Probability =  0.269
Mean Resource Utilization = 0.3311584090909091
----
Episode Count =  171
Blocking Probability =  0.299
Mean Resource Utilization = 0.3557188636363637
----
Episode Count =  172
Blocking Probability =  0.265
Mean Resource Utilization = 0.33665454545454543
----
Episode Count =  173
Blocking Probability =  0.252
Mean Resource Utilization = 0.3283227272727273
----
Episode Count =  174
Blocking Probability =  0.27
Mean Resource Utilization = 0.34978295454545455
----
Episode Count =  175
Blocking Probability =  0.287
Mean Resource Utilization = 0.3530236363636363
----
Episode Count =  176
Blocking Probability =  0.289
Mean Resource Utilization = 0.3485809090909091
----
Episode Count =  177
Blocking Probability =  0.278
Mean Resource Utilization = 0.3498075
----
Episode Count =  178
Blocking Probability =  0.237
Mean Resource Utilization = 0.33448227272727277
----
Episode Count =  179
Blocking Probability =  0.259
Mean Resource Utilization = 0.3242877272727273
----
Episode Count =  180
Blocking Probability =  0.284
Mean Resource Utilization = 0.3477879545454546
----
Episode Count =  181
Blocking Probability =  0.263
Mean Resource Utilization = 0.34201363636363635
----
Episode Count =  182
Blocking Probability =  0.28
Mean Resource Utilization = 0.3342327272727273
----
Episode Count =  183
Blocking Probability =  0.273
Mean Resource Utilization = 0.33083863636363636
----
Episode Count =  184
Blocking Probability =  0.247
Mean Resource Utilization = 0.33471954545454546
----
Episode Count =  185
Blocking Probability =  0.258
Mean Resource Utilization = 0.3430431818181818
----
Episode Count =  186
Blocking Probability =  0.272
Mean Resource Utilization = 0.3274622727272727
----
Episode Count =  187
Blocking Probability =  0.292
Mean Resource Utilization = 0.3467318181818182
----
Episode Count =  188
Blocking Probability =  0.259
Mean Resource Utilization = 0.33356386363636364
----
Episode Count =  189
Blocking Probability =  0.264
Mean Resource Utilization = 0.33469363636363636
----
Episode Count =  190
Blocking Probability =  0.26
Mean Resource Utilization = 0.3384143181818182
----
Episode Count =  191
Blocking Probability =  0.28
Mean Resource Utilization = 0.3548570454545455
----
Episode Count =  192
Blocking Probability =  0.273
Mean Resource Utilization = 0.3305665909090909
----
stored successfully!
Episode Count =  193
Blocking Probability =  0.259
Mean Resource Utilization = 0.3376322727272727
----
Episode Count =  194
Blocking Probability =  0.254
Mean Resource Utilization = 0.33570136363636366
----
Episode Count =  195
Blocking Probability =  0.255
Mean Resource Utilization = 0.3406111363636363
----
Episode Count =  196
Blocking Probability =  0.277
Mean Resource Utilization = 0.3572788636363637
----
stored successfully!
Episode Count =  197
Blocking Probability =  0.257
Mean Resource Utilization = 0.32275159090909084
----
Episode Count =  198
Blocking Probability =  0.278
Mean Resource Utilization = 0.33581999999999995
----
Episode Count =  199
Blocking Probability =  0.244
Mean Resource Utilization = 0.3387027272727273
----
Episode Count =  200
Blocking Probability =  0.251
Mean Resource Utilization = 0.3442731818181818
----
Model Saved
stored successfully!
Episode Count =  201
Blocking Probability =  0.281
Mean Resource Utilization = 0.33494113636363637
----
Episode Count =  202
Blocking Probability =  0.295
Mean Resource Utilization = 0.3459456818181818
----
Episode Count =  203
Blocking Probability =  0.247
Mean Resource Utilization = 0.32779568181818186
----
Episode Count =  204
Blocking Probability =  0.271
Mean Resource Utilization = 0.3398509090909091
----
Episode Count =  205
Blocking Probability =  0.254
Mean Resource Utilization = 0.33276613636363633
----
Episode Count =  206
Blocking Probability =  0.25
Mean Resource Utilization = 0.33922431818181814
----
Episode Count =  207
Blocking Probability =  0.287
Mean Resource Utilization = 0.34509886363636366
----
Episode Count =  208
Blocking Probability =  0.29
Mean Resource Utilization = 0.35677568181818187
----
Episode Count =  209
Blocking Probability =  0.251
Mean Resource Utilization = 0.3489225
----
Episode Count =  210
Blocking Probability =  0.291
Mean Resource Utilization = 0.3444927272727273
----
Episode Count =  211
Blocking Probability =  0.247
Mean Resource Utilization = 0.33292295454545456
----
Episode Count =  212
Blocking Probability =  0.251
Mean Resource Utilization = 0.3260931818181818
----
Episode Count =  213
Blocking Probability =  0.281
Mean Resource Utilization = 0.3451909090909091
----
Episode Count =  214
Blocking Probability =  0.295
Mean Resource Utilization = 0.3496111363636364
----
Episode Count =  215
Blocking Probability =  0.279
Mean Resource Utilization = 0.3571909090909091
----
Episode Count =  216
Blocking Probability =  0.293
Mean Resource Utilization = 0.32125363636363635
----
Episode Count =  217
Blocking Probability =  0.261
Mean Resource Utilization = 0.3457036363636363
----
Episode Count =  218
Blocking Probability =  0.251
Mean Resource Utilization = 0.36000340909090917
----
Episode Count =  219
Blocking Probability =  0.237
Mean Resource Utilization = 0.32345113636363637
----
Episode Count =  220
Blocking Probability =  0.24
Mean Resource Utilization = 0.35203909090909086
----
Episode Count =  221
Blocking Probability =  0.272
Mean Resource Utilization = 0.34758204545454546
----
Episode Count =  222
Blocking Probability =  0.268
Mean Resource Utilization = 0.34885977272727275
----
Episode Count =  223
Blocking Probability =  0.265
Mean Resource Utilization = 0.35169954545454546
----
Episode Count =  224
Blocking Probability =  0.256
Mean Resource Utilization = 0.3414170454545455
----
Episode Count =  225
Blocking Probability =  0.282
Mean Resource Utilization = 0.3399013636363636
----
Episode Count =  226
Blocking Probability =  0.28
Mean Resource Utilization = 0.34345977272727274
----
Episode Count =  227
Blocking Probability =  0.237
Mean Resource Utilization = 0.34078363636363634
----
Episode Count =  228
Blocking Probability =  0.274
Mean Resource Utilization = 0.34571590909090905
----
Episode Count =  229
Blocking Probability =  0.302
Mean Resource Utilization = 0.34744977272727273
----
Episode Count =  230
Blocking Probability =  0.258
Mean Resource Utilization = 0.35079409090909086
----
Episode Count =  231
Blocking Probability =  0.247
Mean Resource Utilization = 0.3325247727272727
----
Episode Count =  232
Blocking Probability =  0.254
Mean Resource Utilization = 0.36238363636363635
----
Episode Count =  233
Blocking Probability =  0.231
Mean Resource Utilization = 0.3416570454545455
----
Episode Count =  234
Blocking Probability =  0.278
Mean Resource Utilization = 0.3568711363636364
----
Episode Count =  235
Blocking Probability =  0.267
Mean Resource Utilization = 0.3313070454545455
----
Episode Count =  236
Blocking Probability =  0.25
Mean Resource Utilization = 0.33428250000000004
----
Episode Count =  237
Blocking Probability =  0.283
Mean Resource Utilization = 0.36403159090909093
----
Episode Count =  238
Blocking Probability =  0.319
Mean Resource Utilization = 0.3520888636363636
----
Episode Count =  239
Blocking Probability =  0.27
Mean Resource Utilization = 0.3449659090909091
----
Episode Count =  240
Blocking Probability =  0.268
Mean Resource Utilization = 0.3439697727272727
----
Episode Count =  241
Blocking Probability =  0.294
Mean Resource Utilization = 0.35247818181818186
----
Episode Count =  242
Blocking Probability =  0.265
Mean Resource Utilization = 0.34552636363636363
----
Episode Count =  243
Blocking Probability =  0.28
Mean Resource Utilization = 0.3741790909090909
----
Episode Count =  244
Blocking Probability =  0.289
Mean Resource Utilization = 0.3494175
----
Episode Count =  245
Blocking Probability =  0.254
Mean Resource Utilization = 0.33905250000000003
----
Episode Count =  246
Blocking Probability =  0.271
Mean Resource Utilization = 0.3365325
----
Episode Count =  247
Blocking Probability =  0.254
Mean Resource Utilization = 0.3394186363636364
----
Episode Count =  248
Blocking Probability =  0.258
Mean Resource Utilization = 0.3505322727272727
----
Episode Count =  249
Blocking Probability =  0.247
Mean Resource Utilization = 0.34853727272727275
----
Episode Count =  250
Blocking Probability =  0.28
Mean Resource Utilization = 0.32941909090909094
----
Episode Count =  251
Blocking Probability =  0.254
Mean Resource Utilization = 0.34660227272727273
----
Episode Count =  252
Blocking Probability =  0.245
Mean Resource Utilization = 0.3480715909090909
----
Episode Count =  253
Blocking Probability =  0.268
Mean Resource Utilization = 0.3501156818181818
----
Episode Count =  254
Blocking Probability =  0.26
Mean Resource Utilization = 0.3436861363636364
----
Episode Count =  255
Blocking Probability =  0.252
Mean Resource Utilization = 0.34625659090909083
----
Episode Count =  256
Blocking Probability =  0.253
Mean Resource Utilization = 0.3489934090909091
----
Episode Count =  257
Blocking Probability =  0.265
Mean Resource Utilization = 0.3447613636363636
----
Episode Count =  258
Blocking Probability =  0.283
Mean Resource Utilization = 0.3480845454545454
----
Episode Count =  259
Blocking Probability =  0.283
Mean Resource Utilization = 0.3310015909090909
----
Episode Count =  260
Blocking Probability =  0.278
Mean Resource Utilization = 0.3591865909090909
----
Episode Count =  261
Blocking Probability =  0.265
Mean Resource Utilization = 0.3345545454545454
----
Episode Count =  262
Blocking Probability =  0.283
Mean Resource Utilization = 0.3337581818181818
----
Episode Count =  263
Blocking Probability =  0.249
Mean Resource Utilization = 0.3370309090909091
----
Episode Count =  264
Blocking Probability =  0.268
Mean Resource Utilization = 0.3597286363636364
----
Episode Count =  265
Blocking Probability =  0.277
Mean Resource Utilization = 0.33926590909090915
----
Episode Count =  266
Blocking Probability =  0.257
Mean Resource Utilization = 0.3414538636363636
----
Episode Count =  267
Blocking Probability =  0.282
Mean Resource Utilization = 0.3409493181818182
----
Episode Count =  268
Blocking Probability =  0.231
Mean Resource Utilization = 0.34062204545454544
----
Episode Count =  269
Blocking Probability =  0.275
Mean Resource Utilization = 0.3508438636363636
----
Episode Count =  270
Blocking Probability =  0.246
Mean Resource Utilization = 0.34904659090909085
----
Episode Count =  271
Blocking Probability =  0.271
Mean Resource Utilization = 0.3513825
----
Episode Count =  272
Blocking Probability =  0.257
Mean Resource Utilization = 0.34221613636363635
----
Episode Count =  273
Blocking Probability =  0.278
Mean Resource Utilization = 0.33380863636363634
----
Episode Count =  274
Blocking Probability =  0.282
Mean Resource Utilization = 0.35375045454545456
----
Episode Count =  275
Blocking Probability =  0.246
Mean Resource Utilization = 0.34020136363636355
----
Episode Count =  276
Blocking Probability =  0.293
Mean Resource Utilization = 0.3445090909090909
----
Episode Count =  277
Blocking Probability =  0.286
Mean Resource Utilization = 0.3476809090909091
----
Episode Count =  278
Blocking Probability =  0.266
Mean Resource Utilization = 0.33916090909090907
----
Episode Count =  279
Blocking Probability =  0.25
Mean Resource Utilization = 0.3499731818181818
----
Episode Count =  280
Blocking Probability =  0.251
Mean Resource Utilization = 0.3535875
----
Episode Count =  281
Blocking Probability =  0.246
Mean Resource Utilization = 0.3605631818181818
----
Episode Count =  282
Blocking Probability =  0.245
Mean Resource Utilization = 0.3410706818181818
----
Episode Count =  283
Blocking Probability =  0.256
Mean Resource Utilization = 0.3509979545454546
----
Episode Count =  284
Blocking Probability =  0.256
Mean Resource Utilization = 0.3389175
----
Episode Count =  285
Blocking Probability =  0.277
Mean Resource Utilization = 0.36946022727272726
----
Episode Count =  286
Blocking Probability =  0.241
Mean Resource Utilization = 0.35057659090909093
----
Episode Count =  287
Blocking Probability =  0.249
Mean Resource Utilization = 0.35357113636363635
----
Episode Count =  288
Blocking Probability =  0.254
Mean Resource Utilization = 0.33488659090909095
----
Episode Count =  289
Blocking Probability =  0.286
Mean Resource Utilization = 0.35533363636363635
----
stored successfully!
Episode Count =  290
Blocking Probability =  0.254
Mean Resource Utilization = 0.35821840909090913
----
Episode Count =  291
Blocking Probability =  0.249
Mean Resource Utilization = 0.3515325
----
Episode Count =  292
Blocking Probability =  0.282
Mean Resource Utilization = 0.34674272727272726
----
Episode Count =  293
Blocking Probability =  0.289
Mean Resource Utilization = 0.35138386363636365
----
Episode Count =  294
Blocking Probability =  0.248
Mean Resource Utilization = 0.35059431818181813
----
stored successfully!
Episode Count =  295
Blocking Probability =  0.257
Mean Resource Utilization = 0.35803704545454546
----
Episode Count =  296
Blocking Probability =  0.253
Mean Resource Utilization = 0.34929272727272725
----
Episode Count =  297
Blocking Probability =  0.251
Mean Resource Utilization = 0.35871749999999997
----
Episode Count =  298
Blocking Probability =  0.265
Mean Resource Utilization = 0.3461822727272728
----
Episode Count =  299
Blocking Probability =  0.242
Mean Resource Utilization = 0.3402081818181818
----
Episode Count =  300
Blocking Probability =  0.226
Mean Resource Utilization = 0.3416522727272727
----
Model Saved
stored successfully!
Episode Count =  301
Blocking Probability =  0.264
Mean Resource Utilization = 0.3458475
----
Episode Count =  302
Blocking Probability =  0.265
Mean Resource Utilization = 0.3507627272727273
----
Episode Count =  303
Blocking Probability =  0.273
Mean Resource Utilization = 0.3531429545454546
----
Episode Count =  304
Blocking Probability =  0.255
Mean Resource Utilization = 0.34990159090909095
----
Episode Count =  305
Blocking Probability =  0.261
Mean Resource Utilization = 0.34922113636363633
----
Episode Count =  306
Blocking Probability =  0.27
Mean Resource Utilization = 0.35328272727272725
----
Episode Count =  307
Blocking Probability =  0.266
Mean Resource Utilization = 0.3437659090909091
----
Episode Count =  308
Blocking Probability =  0.255
Mean Resource Utilization = 0.35606454545454547
----
Episode Count =  309
Blocking Probability =  0.266
Mean Resource Utilization = 0.34725954545454546
----
Episode Count =  310
Blocking Probability =  0.251
Mean Resource Utilization = 0.3422522727272727
----
Episode Count =  311
Blocking Probability =  0.266
Mean Resource Utilization = 0.34806136363636364
----
Episode Count =  312
Blocking Probability =  0.261
Mean Resource Utilization = 0.3639736363636364
----
Episode Count =  313
Blocking Probability =  0.277
Mean Resource Utilization = 0.3254686363636364
----
Episode Count =  314
Blocking Probability =  0.249
Mean Resource Utilization = 0.3430854545454546
----
Episode Count =  315
Blocking Probability =  0.275
Mean Resource Utilization = 0.36174340909090913
----
Episode Count =  316
Blocking Probability =  0.238
Mean Resource Utilization = 0.33994363636363634
----
Episode Count =  317
Blocking Probability =  0.263
Mean Resource Utilization = 0.34684227272727275
----
Episode Count =  318
Blocking Probability =  0.27
Mean Resource Utilization = 0.35230704545454544
----
Episode Count =  319
Blocking Probability =  0.24
Mean Resource Utilization = 0.3308229545454545
----
Episode Count =  320
Blocking Probability =  0.278
Mean Resource Utilization = 0.3530379545454545
----
Episode Count =  321
Blocking Probability =  0.278
Mean Resource Utilization = 0.3639627272727273
----
Episode Count =  322
Blocking Probability =  0.277
Mean Resource Utilization = 0.36854318181818185
----
Episode Count =  323
Blocking Probability =  0.269
Mean Resource Utilization = 0.35110977272727273
----
Episode Count =  324
Blocking Probability =  0.244
Mean Resource Utilization = 0.328095
----
Episode Count =  325
Blocking Probability =  0.249
Mean Resource Utilization = 0.33656522727272725
----
Episode Count =  326
Blocking Probability =  0.242
Mean Resource Utilization = 0.35033590909090906
----
Episode Count =  327
Blocking Probability =  0.238
Mean Resource Utilization = 0.3473045454545455
----
Episode Count =  328
Blocking Probability =  0.251
Mean Resource Utilization = 0.36759340909090904
----
Episode Count =  329
Blocking Probability =  0.268
Mean Resource Utilization = 0.36660818181818183
----
Episode Count =  330
Blocking Probability =  0.233
Mean Resource Utilization = 0.3510709090909091
----
Episode Count =  331
Blocking Probability =  0.277
Mean Resource Utilization = 0.37078431818181823
----
Episode Count =  332
Blocking Probability =  0.244
Mean Resource Utilization = 0.35436749999999995
----
Episode Count =  333
Blocking Probability =  0.265
Mean Resource Utilization = 0.3532097727272727
----
Episode Count =  334
Blocking Probability =  0.293
Mean Resource Utilization = 0.3611659090909091
----
Episode Count =  335
Blocking Probability =  0.261
Mean Resource Utilization = 0.3349540909090909
----
Episode Count =  336
Blocking Probability =  0.272
Mean Resource Utilization = 0.3613165909090909
----
Episode Count =  337
Blocking Probability =  0.273
Mean Resource Utilization = 0.35667272727272725
----
Episode Count =  338
Blocking Probability =  0.238
Mean Resource Utilization = 0.34295113636363633
----
Episode Count =  339
Blocking Probability =  0.257
Mean Resource Utilization = 0.35815022727272733
----
Episode Count =  340
Blocking Probability =  0.269
Mean Resource Utilization = 0.34918977272727275
----
Episode Count =  341
Blocking Probability =  0.246
Mean Resource Utilization = 0.35835477272727273
----
Episode Count =  342
Blocking Probability =  0.278
Mean Resource Utilization = 0.3586602272727273
----
Episode Count =  343
Blocking Probability =  0.265
Mean Resource Utilization = 0.36512045454545455
----
Episode Count =  344
Blocking Probability =  0.24
Mean Resource Utilization = 0.3488918181818182
----
Episode Count =  345
Blocking Probability =  0.252
Mean Resource Utilization = 0.35109954545454547
----
Episode Count =  346
Blocking Probability =  0.249
Mean Resource Utilization = 0.3478970454545455
----
Episode Count =  347
Blocking Probability =  0.276
Mean Resource Utilization = 0.35560568181818175
----
Episode Count =  348
Blocking Probability =  0.261
Mean Resource Utilization = 0.350565
----
Episode Count =  349
Blocking Probability =  0.258
Mean Resource Utilization = 0.35720999999999997
----
Episode Count =  350
Blocking Probability =  0.272
Mean Resource Utilization = 0.3585920454545454
----
Episode Count =  351
Blocking Probability =  0.245
Mean Resource Utilization = 0.34192500000000003
----
Episode Count =  352
Blocking Probability =  0.282
Mean Resource Utilization = 0.3707113636363636
----
Episode Count =  353
Blocking Probability =  0.247
Mean Resource Utilization = 0.3507306818181818
----
Episode Count =  354
Blocking Probability =  0.255
Mean Resource Utilization = 0.35749568181818187
----
Episode Count =  355
Blocking Probability =  0.278
Mean Resource Utilization = 0.3553206818181818
----
Episode Count =  356
Blocking Probability =  0.236
Mean Resource Utilization = 0.35617295454545456
----
Episode Count =  357
Blocking Probability =  0.262
Mean Resource Utilization = 0.3494986363636364
----
Episode Count =  358
Blocking Probability =  0.255
Mean Resource Utilization = 0.3603893181818182
----
Episode Count =  359
Blocking Probability =  0.264
Mean Resource Utilization = 0.35156590909090907
----
Episode Count =  360
Blocking Probability =  0.248
Mean Resource Utilization = 0.35907340909090907
----
Episode Count =  361
Blocking Probability =  0.27
Mean Resource Utilization = 0.3782079545454545
----
Episode Count =  362
Blocking Probability =  0.25
Mean Resource Utilization = 0.3586711363636364
----
Episode Count =  363
Blocking Probability =  0.268
Mean Resource Utilization = 0.3720320454545455
----
Episode Count =  364
Blocking Probability =  0.238
Mean Resource Utilization = 0.34134204545454544
----
Episode Count =  365
Blocking Probability =  0.25
Mean Resource Utilization = 0.35227363636363634
----
Episode Count =  366
Blocking Probability =  0.24
Mean Resource Utilization = 0.34751931818181825
----
Episode Count =  367
Blocking Probability =  0.253
Mean Resource Utilization = 0.3586438636363637
----
Episode Count =  368
Blocking Probability =  0.264
Mean Resource Utilization = 0.3457704545454545
----
Episode Count =  369
Blocking Probability =  0.236
Mean Resource Utilization = 0.3474225
----
Episode Count =  370
Blocking Probability =  0.264
Mean Resource Utilization = 0.3691997727272727
----
Episode Count =  371
Blocking Probability =  0.265
Mean Resource Utilization = 0.34565659090909095
----
Episode Count =  372
Blocking Probability =  0.272
Mean Resource Utilization = 0.3414770454545455
----
Episode Count =  373
Blocking Probability =  0.237
Mean Resource Utilization = 0.3641761363636364
----
Episode Count =  374
Blocking Probability =  0.261
Mean Resource Utilization = 0.36316499999999996
----
Episode Count =  375
Blocking Probability =  0.256
Mean Resource Utilization = 0.3654047727272727
----
Episode Count =  376
Blocking Probability =  0.23
Mean Resource Utilization = 0.3635365909090909
----
Episode Count =  377
Blocking Probability =  0.265
Mean Resource Utilization = 0.35660522727272725
----
Episode Count =  378
Blocking Probability =  0.226
Mean Resource Utilization = 0.3480675
----
Episode Count =  379
Blocking Probability =  0.275
Mean Resource Utilization = 0.38054386363636367
----
Episode Count =  380
Blocking Probability =  0.254
Mean Resource Utilization = 0.38006113636363636
----
Episode Count =  381
Blocking Probability =  0.217
Mean Resource Utilization = 0.3595363636363636
----
Episode Count =  382
Blocking Probability =  0.247
Mean Resource Utilization = 0.3635550000000001
----
Episode Count =  383
Blocking Probability =  0.224
Mean Resource Utilization = 0.36807818181818186
----
Episode Count =  384
Blocking Probability =  0.239
Mean Resource Utilization = 0.364815
----
Episode Count =  385
Blocking Probability =  0.269
Mean Resource Utilization = 0.37139181818181816
----
Episode Count =  386
Blocking Probability =  0.259
Mean Resource Utilization = 0.37111295454545457
----
stored successfully!
Episode Count =  387
Blocking Probability =  0.249
Mean Resource Utilization = 0.3614693181818182
----
Episode Count =  388
Blocking Probability =  0.252
Mean Resource Utilization = 0.3586268181818182
----
Episode Count =  389
Blocking Probability =  0.252
Mean Resource Utilization = 0.36304568181818175
----
Episode Count =  390
Blocking Probability =  0.263
Mean Resource Utilization = 0.3702184090909091
----
Episode Count =  391
Blocking Probability =  0.276
Mean Resource Utilization = 0.36070090909090907
----
Episode Count =  392
Blocking Probability =  0.252
Mean Resource Utilization = 0.35094136363636363
----
stored successfully!
Episode Count =  393
Blocking Probability =  0.233
Mean Resource Utilization = 0.35203090909090906
----
Episode Count =  394
Blocking Probability =  0.265
Mean Resource Utilization = 0.3677993181818182
----
Episode Count =  395
Blocking Probability =  0.257
Mean Resource Utilization = 0.3611802272727273
----
Episode Count =  396
Blocking Probability =  0.245
Mean Resource Utilization = 0.34431272727272727
----
Episode Count =  397
Blocking Probability =  0.245
Mean Resource Utilization = 0.3797754545454545
----
Episode Count =  398
Blocking Probability =  0.268
Mean Resource Utilization = 0.3463615909090909
----
Episode Count =  399
Blocking Probability =  0.264
Mean Resource Utilization = 0.3638468181818182
----
Episode Count =  400
Blocking Probability =  0.281
Mean Resource Utilization = 0.3414913636363636
----
Model Saved
stored successfully!
Episode Count =  401
Blocking Probability =  0.258
Mean Resource Utilization = 0.37636840909090913
----
Episode Count =  402
Blocking Probability =  0.225
Mean Resource Utilization = 0.3408429545454546
----
Episode Count =  403
Blocking Probability =  0.251
Mean Resource Utilization = 0.35596704545454544
----
Episode Count =  404
Blocking Probability =  0.27
Mean Resource Utilization = 0.3550329545454546
----
Episode Count =  405
Blocking Probability =  0.269
Mean Resource Utilization = 0.3524236363636364
----
Episode Count =  406
Blocking Probability =  0.245
Mean Resource Utilization = 0.33971045454545457
----
Episode Count =  407
Blocking Probability =  0.248
Mean Resource Utilization = 0.357825
----
Episode Count =  408
Blocking Probability =  0.224
Mean Resource Utilization = 0.3490520454545455
----
Episode Count =  409
Blocking Probability =  0.249
Mean Resource Utilization = 0.36026659090909097
----
Episode Count =  410
Blocking Probability =  0.244
Mean Resource Utilization = 0.35285659090909094
----
Episode Count =  411
Blocking Probability =  0.255
Mean Resource Utilization = 0.35323227272727276
----
Episode Count =  412
Blocking Probability =  0.258
Mean Resource Utilization = 0.3586793181818182
----
Episode Count =  413
Blocking Probability =  0.266
Mean Resource Utilization = 0.3654238636363636
----
Episode Count =  414
Blocking Probability =  0.252
Mean Resource Utilization = 0.35838886363636363
----
Episode Count =  415
Blocking Probability =  0.248
Mean Resource Utilization = 0.36071113636363633
----
Episode Count =  416
Blocking Probability =  0.233
Mean Resource Utilization = 0.36492409090909084
----
Episode Count =  417
Blocking Probability =  0.279
Mean Resource Utilization = 0.378015
----
Episode Count =  418
Blocking Probability =  0.312
Mean Resource Utilization = 0.378675
----
Episode Count =  419
Blocking Probability =  0.265
Mean Resource Utilization = 0.3580302272727273
----
Episode Count =  420
Blocking Probability =  0.254
Mean Resource Utilization = 0.3659386363636364
----
Episode Count =  421
Blocking Probability =  0.252
Mean Resource Utilization = 0.3554979545454545
----
Episode Count =  422
Blocking Probability =  0.279
Mean Resource Utilization = 0.36630136363636356
----
Episode Count =  423
Blocking Probability =  0.283
Mean Resource Utilization = 0.36765
----
Episode Count =  424
Blocking Probability =  0.222
Mean Resource Utilization = 0.36523295454545457
----
Episode Count =  425
Blocking Probability =  0.279
Mean Resource Utilization = 0.3744504545454546
----
Episode Count =  426
Blocking Probability =  0.276
Mean Resource Utilization = 0.3567402272727273
----
Episode Count =  427
Blocking Probability =  0.243
Mean Resource Utilization = 0.36280772727272725
----
Episode Count =  428
Blocking Probability =  0.289
Mean Resource Utilization = 0.37036704545454546
----
Episode Count =  429
Blocking Probability =  0.252
Mean Resource Utilization = 0.3581086363636364
----
Episode Count =  430
Blocking Probability =  0.256
Mean Resource Utilization = 0.36645954545454545
----
Episode Count =  431
Blocking Probability =  0.252
Mean Resource Utilization = 0.3552661363636364
----
Episode Count =  432
Blocking Probability =  0.228
Mean Resource Utilization = 0.3541977272727273
----
Episode Count =  433
Blocking Probability =  0.262
Mean Resource Utilization = 0.3603409090909091
----
Episode Count =  434
Blocking Probability =  0.247
Mean Resource Utilization = 0.36512386363636357
----
Episode Count =  435
Blocking Probability =  0.248
Mean Resource Utilization = 0.3484704545454545
----
Episode Count =  436
Blocking Probability =  0.216
Mean Resource Utilization = 0.3506740909090909
----
Episode Count =  437
Blocking Probability =  0.246
Mean Resource Utilization = 0.35655818181818183
----
Episode Count =  438
Blocking Probability =  0.228
Mean Resource Utilization = 0.3509822727272727
----
Episode Count =  439
Blocking Probability =  0.26
Mean Resource Utilization = 0.3629140909090909
----
Episode Count =  440
Blocking Probability =  0.257
Mean Resource Utilization = 0.36456818181818185
----
Episode Count =  441
Blocking Probability =  0.251
Mean Resource Utilization = 0.3514445454545455
----
Episode Count =  442
Blocking Probability =  0.264
Mean Resource Utilization = 0.3673322727272727
----
Episode Count =  443
Blocking Probability =  0.207
Mean Resource Utilization = 0.33900068181818177
----
Episode Count =  444
Blocking Probability =  0.248
Mean Resource Utilization = 0.3564525
----
Episode Count =  445
Blocking Probability =  0.265
Mean Resource Utilization = 0.38387045454545454
----
Episode Count =  446
Blocking Probability =  0.241
Mean Resource Utilization = 0.37253181818181813
----
Episode Count =  447
Blocking Probability =  0.243
Mean Resource Utilization = 0.3695311363636364
----
Episode Count =  448
Blocking Probability =  0.256
Mean Resource Utilization = 0.359265
----
Episode Count =  449
Blocking Probability =  0.259
Mean Resource Utilization = 0.35793545454545456
----
Episode Count =  450
Blocking Probability =  0.246
Mean Resource Utilization = 0.34884818181818184
----
Episode Count =  451
Blocking Probability =  0.279
Mean Resource Utilization = 0.36063477272727273
----
Episode Count =  452
Blocking Probability =  0.27
Mean Resource Utilization = 0.38189386363636363
----
Episode Count =  453
Blocking Probability =  0.227
Mean Resource Utilization = 0.35793409090909084
----
Episode Count =  454
Blocking Probability =  0.236
Mean Resource Utilization = 0.36660000000000004
----
Episode Count =  455
Blocking Probability =  0.245
Mean Resource Utilization = 0.36697840909090906
----
Episode Count =  456
Blocking Probability =  0.243
Mean Resource Utilization = 0.377715
----
Episode Count =  457
Blocking Probability =  0.243
Mean Resource Utilization = 0.3652765909090909
----
Episode Count =  458
Blocking Probability =  0.243
Mean Resource Utilization = 0.3582027272727273
----
Episode Count =  459
Blocking Probability =  0.244
Mean Resource Utilization = 0.3638304545454546
----
Episode Count =  460
Blocking Probability =  0.271
Mean Resource Utilization = 0.37622727272727274
----
Episode Count =  461
Blocking Probability =  0.253
Mean Resource Utilization = 0.37338
----
Episode Count =  462
Blocking Probability =  0.265
Mean Resource Utilization = 0.3641495454545454
----
Episode Count =  463
Blocking Probability =  0.222
Mean Resource Utilization = 0.36812727272727275
----
Episode Count =  464
Blocking Probability =  0.24
Mean Resource Utilization = 0.3624784090909091
----
Episode Count =  465
Blocking Probability =  0.265
Mean Resource Utilization = 0.3645906818181818
----
Episode Count =  466
Blocking Probability =  0.27
Mean Resource Utilization = 0.38686977272727274
----
Episode Count =  467
Blocking Probability =  0.264
Mean Resource Utilization = 0.3493213636363636
----
Episode Count =  468
Blocking Probability =  0.242
Mean Resource Utilization = 0.3570313636363636
----
Episode Count =  469
Blocking Probability =  0.235
Mean Resource Utilization = 0.36222340909090905
----
Episode Count =  470
Blocking Probability =  0.225
Mean Resource Utilization = 0.3620018181818182
----
Episode Count =  471
Blocking Probability =  0.276
Mean Resource Utilization = 0.3857352272727273
----
Episode Count =  472
Blocking Probability =  0.268
Mean Resource Utilization = 0.37497545454545456
----
Episode Count =  473
Blocking Probability =  0.265
Mean Resource Utilization = 0.3639409090909091
----
Episode Count =  474
Blocking Probability =  0.232
Mean Resource Utilization = 0.36676022727272733
----
Episode Count =  475
Blocking Probability =  0.228
Mean Resource Utilization = 0.35688954545454543
----
Episode Count =  476
Blocking Probability =  0.217
Mean Resource Utilization = 0.3651518181818182
----
Episode Count =  477
Blocking Probability =  0.272
Mean Resource Utilization = 0.3572638636363637
----
Episode Count =  478
Blocking Probability =  0.226
Mean Resource Utilization = 0.3557331818181818
----
Episode Count =  479
Blocking Probability =  0.247
Mean Resource Utilization = 0.3626775
----
Episode Count =  480
Blocking Probability =  0.246
Mean Resource Utilization = 0.3603613636363637
----
Episode Count =  481
Blocking Probability =  0.262
Mean Resource Utilization = 0.3799002272727273
----
Episode Count =  482
Blocking Probability =  0.22
Mean Resource Utilization = 0.33826431818181824
----
Episode Count =  483
Blocking Probability =  0.247
Mean Resource Utilization = 0.36972340909090906
----
stored successfully!
Episode Count =  484
Blocking Probability =  0.236
Mean Resource Utilization = 0.35303659090909095
----
Episode Count =  485
Blocking Probability =  0.234
Mean Resource Utilization = 0.35518568181818183
----
Episode Count =  486
Blocking Probability =  0.225
Mean Resource Utilization = 0.36298090909090913
----
Exception in thread Thread-6 (agent_rmsa):
Traceback (most recent call last):
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
Exception in thread Thread-5 (agent_rmsa):
Traceback (most recent call last):
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 953, in run
    self.run()
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/emil/Documents/MyRMSA/My_Deep_RMSA_A3C.py", line 240, in agent_rmsa
    self._target(*self._args, **self._kwargs)
  File "/Users/emil/Documents/MyRMSA/My_Deep_RMSA_A3C.py", line 240, in agent_rmsa
    agent.rmsa(sess, coord, saver)
    agent.rmsa(sess, coord, saver)
  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 667, in rmsa
  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 667, in rmsa
    prob_dist, value, entro = sess.run(
      File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 967, in run
prob_dist, value, entro = sess.run(
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 967, in run
    result = self._run(None, fetches, feed_dict, options_ptr,
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 1115, in _run
    result = self._run(None, fetches, feed_dict, options_ptr,
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 1115, in _run
        raise RuntimeError('Attempted to use a closed Session.')raise RuntimeError('Attempted to use a closed Session.')
RuntimeError: Attempted to use a closed Session.
Exception in thread RuntimeError: Attempted to use a closed Session.
Thread-4 (agent_rmsa):
Traceback (most recent call last):
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/emil/Documents/MyRMSA/My_Deep_RMSA_A3C.py", line 240, in agent_rmsa
    agent.rmsa(sess, coord, saver)
  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 667, in rmsa
    prob_dist, value, entro = sess.run(
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 967, in run
    result = self._run(None, fetches, feed_dict, options_ptr,
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 1115, in _run
    raise RuntimeError('Attempted to use a closed Session.')
RuntimeError: Attempted to use a closed Session.
Traceback (most recent call last):
  File "/Users/emil/Documents/MyRMSA/My_Deep_RMSA_A3C.py", line 250, in <module>
    coord.join(agent_threads)
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/training/coordinator.py", line 359, in join
    while any(t.is_alive() for t in threads) and not self.wait_for_stop(1.0):
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/training/coordinator.py", line 307, in wait_for_stop
    return self._stop_event.wait(timeout)
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 607, in wait
    signaled = self._cond.wait(timeout)
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 324, in wait
    gotit = waiter.acquire(True, timeout)
