WARNING:tensorflow:From /Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/compat/v2_compat.py:107: disable_resource_variables (from tensorflow.python.ops.variable_scope) is deprecated and will be removed in a future version.
Instructions for updating:
non-resource variables are not supported in the long term
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/keras/engine/base_layer_v1.py:1694: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  warnings.warn('`layer.apply` is deprecated and '
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/keras/engine/base_layer_v1.py:1694: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  warnings.warn('`layer.apply` is deprecated and '
defaultdict(<function <lambda> at 0x7fe0f28e31c0>, {1: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e3130>, {2: (0, 1050), 3: (1, 1500), 8: (2, 2400)}), 2: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e30a0>, {1: (3, 1050), 3: (4, 600), 4: (5, 750)}), 3: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e3010>, {1: (6, 1500), 2: (7, 600), 6: (8, 1800)}), 8: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e2f80>, {1: (22, 2400), 7: (23, 750), 9: (24, 750)}), 4: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e2ef0>, {2: (9, 750), 5: (10, 600), 11: (11, 1950)}), 6: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e2e60>, {3: (15, 1800), 5: (16, 1200), 10: (17, 1050), 14: (18, 1800)}), 5: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e2dd0>, {4: (12, 600), 6: (13, 1200), 7: (14, 600)}), 11: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e2d40>, {4: (32, 1950), 12: (33, 600), 13: (34, 750)}), 7: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e2cb0>, {5: (19, 600), 8: (20, 750), 10: (21, 1350)}), 10: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e2c20>, {6: (29, 1050), 7: (30, 1350), 9: (31, 750)}), 14: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e2b90>, {6: (41, 1800), 12: (42, 300), 13: (43, 150)}), 9: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e2b00>, {8: (25, 750), 10: (26, 750), 12: (27, 300), 13: (28, 300)}), 12: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e2a70>, {9: (35, 300), 11: (36, 600), 14: (37, 300)}), 13: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e29e0>, {9: (38, 300), 11: (39, 750), 14: (40, 150)})})
defaultdict(<function <lambda> at 0x7fe0f28e2950>, {1: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e28c0>, {2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e2830>, {0: [1, 2], 1: [1, 3, 2], 2: [1, 8, 7, 5, 4, 2], 3: [1, 3, 6, 5, 4, 2], 4: [1, 8, 9, 12, 11, 4, 2], 5: [1, 8, 9, 13, 11, 4, 2], 6: [1, 8, 9, 10, 7, 5, 4, 2], 7: [1, 8, 9, 13, 14, 12, 11, 4, 2], 8: [1, 8, 7, 5, 6, 3, 2], 9: [1, 8, 9, 12, 14, 13, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e27a0>, {0: [1, 3], 1: [1, 2, 3], 2: [1, 2, 4, 5, 6, 3], 3: [1, 8, 7, 5, 4, 2, 3], 4: [1, 8, 9, 10, 6, 3], 5: [1, 8, 7, 5, 6, 3], 6: [1, 2, 4, 5, 7, 10, 6, 3], 7: [1, 8, 9, 13, 14, 6, 3], 8: [1, 8, 7, 10, 6, 3], 9: [1, 8, 9, 12, 14, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e2710>, {0: [1, 2, 4], 1: [1, 3, 2, 4], 2: [1, 8, 7, 5, 4], 3: [1, 3, 6, 5, 4], 4: [1, 2, 3, 6, 5, 4], 5: [1, 8, 9, 12, 11, 4], 6: [1, 8, 9, 13, 11, 4], 7: [1, 8, 9, 10, 7, 5, 4], 8: [1, 8, 9, 13, 14, 12, 11, 4], 9: [1, 8, 9, 12, 14, 13, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e2680>, {0: [1, 2, 4, 5], 1: [1, 3, 2, 4, 5], 2: [1, 8, 7, 5], 3: [1, 3, 6, 5], 4: [1, 2, 3, 6, 5], 5: [1, 8, 9, 10, 7, 5], 6: [1, 8, 9, 10, 6, 5], 7: [1, 3, 6, 10, 7, 5], 8: [1, 2, 3, 6, 10, 7, 5], 9: [1, 8, 9, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e25f0>, {0: [1, 3, 6], 1: [1, 2, 3, 6], 2: [1, 2, 4, 5, 6], 3: [1, 3, 2, 4, 5, 6], 4: [1, 8, 7, 5, 6], 5: [1, 8, 9, 10, 6], 6: [1, 2, 4, 5, 7, 10, 6], 7: [1, 8, 9, 13, 14, 6], 8: [1, 8, 7, 10, 6], 9: [1, 8, 9, 12, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e2560>, {0: [1, 2, 4, 5, 7], 1: [1, 8, 7], 2: [1, 3, 2, 4, 5, 7], 3: [1, 3, 6, 5, 7], 4: [1, 2, 3, 6, 5, 7], 5: [1, 8, 9, 10, 7], 6: [1, 3, 6, 10, 7], 7: [1, 2, 3, 6, 10, 7], 8: [1, 2, 4, 5, 6, 10, 7], 9: [1, 2, 4, 11, 12, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e24d0>, {0: [1, 8], 1: [1, 2, 4, 5, 7, 8], 2: [1, 3, 2, 4, 5, 7, 8], 3: [1, 2, 4, 11, 12, 9, 8], 4: [1, 2, 4, 11, 13, 9, 8], 5: [1, 2, 4, 5, 7, 10, 9, 8], 6: [1, 3, 6, 5, 7, 8], 7: [1, 2, 4, 11, 12, 14, 13, 9, 8], 8: [1, 3, 6, 10, 9, 8], 9: [1, 2, 3, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e2440>, {0: [1, 8, 9], 1: [1, 2, 4, 5, 7, 8, 9], 2: [1, 2, 4, 11, 12, 9], 3: [1, 2, 4, 11, 13, 9], 4: [1, 3, 6, 10, 9], 5: [1, 2, 4, 5, 7, 10, 9], 6: [1, 2, 4, 11, 12, 14, 13, 9], 7: [1, 8, 7, 10, 9], 8: [1, 2, 3, 6, 10, 9], 9: [1, 2, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e23b0>, {0: [1, 8, 9, 10], 1: [1, 2, 4, 5, 7, 10], 2: [1, 3, 6, 10], 3: [1, 8, 7, 10], 4: [1, 2, 3, 6, 10], 5: [1, 2, 4, 5, 6, 10], 6: [1, 2, 4, 5, 7, 8, 9, 10], 7: [1, 2, 4, 11, 12, 9, 10], 8: [1, 3, 2, 4, 5, 7, 10], 9: [1, 2, 4, 11, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e2320>, {0: [1, 2, 4, 11], 1: [1, 8, 9, 12, 11], 2: [1, 8, 9, 13, 11], 3: [1, 8, 9, 13, 14, 12, 11], 4: [1, 8, 9, 12, 14, 13, 11], 5: [1, 3, 2, 4, 11], 6: [1, 2, 4, 5, 7, 8, 9, 12, 11], 7: [1, 2, 4, 5, 7, 8, 9, 13, 11], 8: [1, 2, 4, 5, 7, 8, 9, 13, 14, 12, 11], 9: [1, 3, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e2290>, {0: [1, 8, 9, 12], 1: [1, 8, 9, 13, 14, 12], 2: [1, 2, 4, 11, 12], 3: [1, 8, 9, 13, 11, 12], 4: [1, 2, 4, 5, 7, 8, 9, 12], 5: [1, 2, 4, 11, 13, 14, 12], 6: [1, 2, 4, 11, 13, 9, 12], 7: [1, 2, 4, 5, 7, 8, 9, 13, 14, 12], 8: [1, 3, 2, 4, 11, 12], 9: [1, 2, 4, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e2200>, {0: [1, 8, 9, 13], 1: [1, 8, 9, 12, 14, 13], 2: [1, 2, 4, 11, 13], 3: [1, 8, 9, 12, 11, 13], 4: [1, 2, 4, 5, 7, 8, 9, 13], 5: [1, 2, 4, 11, 12, 14, 13], 6: [1, 2, 4, 11, 12, 9, 13], 7: [1, 3, 6, 14, 13], 8: [1, 2, 4, 5, 7, 8, 9, 12, 14, 13], 9: [1, 2, 3, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e2170>, {0: [1, 8, 9, 13, 14], 1: [1, 8, 9, 12, 14], 2: [1, 2, 4, 11, 12, 14], 3: [1, 2, 4, 11, 13, 14], 4: [1, 8, 9, 12, 11, 13, 14], 5: [1, 2, 4, 5, 7, 8, 9, 13, 14], 6: [1, 8, 9, 13, 11, 12, 14], 7: [1, 3, 6, 14], 8: [1, 2, 4, 11, 12, 9, 13, 14], 9: [1, 2, 4, 5, 7, 8, 9, 12, 14]})}), 2: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e20e0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e2050>, {0: [2, 1], 1: [2, 3, 1], 2: [2, 4, 5, 7, 8, 1], 3: [2, 4, 5, 6, 3, 1], 4: [2, 4, 11, 12, 9, 8, 1], 5: [2, 4, 11, 13, 9, 8, 1], 6: [2, 4, 5, 7, 10, 9, 8, 1], 7: [2, 4, 11, 12, 14, 13, 9, 8, 1], 8: [2, 3, 6, 5, 7, 8, 1], 9: [2, 4, 11, 13, 14, 12, 9, 8, 1]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1fc0>, {0: [2, 3], 1: [2, 1, 3], 2: [2, 4, 5, 6, 3], 3: [2, 4, 5, 7, 10, 6, 3], 4: [2, 4, 5, 7, 8, 1, 3], 5: [2, 4, 5, 7, 8, 9, 10, 6, 3], 6: [2, 4, 11, 12, 14, 6, 3], 7: [2, 4, 11, 13, 14, 6, 3], 8: [2, 4, 11, 12, 9, 10, 6, 3], 9: [2, 4, 11, 13, 9, 10, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1f30>, {0: [2, 4], 1: [2, 3, 6, 5, 4], 2: [2, 1, 8, 7, 5, 4], 3: [2, 3, 6, 10, 7, 5, 4], 4: [2, 1, 3, 6, 5, 4], 5: [2, 3, 1, 8, 7, 5, 4], 6: [2, 3, 6, 10, 9, 8, 7, 5, 4], 7: [2, 1, 8, 9, 12, 11, 4], 8: [2, 3, 6, 14, 13, 11, 4], 9: [2, 3, 6, 10, 9, 12, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1ea0>, {0: [2, 4, 5], 1: [2, 3, 6, 5], 2: [2, 1, 8, 7, 5], 3: [2, 3, 6, 10, 7, 5], 4: [2, 1, 3, 6, 5], 5: [2, 4, 11, 12, 9, 8, 7, 5], 6: [2, 3, 1, 8, 7, 5], 7: [2, 4, 11, 13, 9, 8, 7, 5], 8: [2, 4, 11, 12, 14, 13, 9, 8, 7, 5], 9: [2, 3, 6, 10, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1e10>, {0: [2, 3, 6], 1: [2, 4, 5, 6], 2: [2, 1, 3, 6], 3: [2, 4, 5, 7, 10, 6], 4: [2, 4, 5, 7, 8, 9, 10, 6], 5: [2, 4, 11, 12, 14, 6], 6: [2, 4, 11, 13, 14, 6], 7: [2, 4, 11, 12, 9, 10, 6], 8: [2, 4, 11, 13, 9, 10, 6], 9: [2, 4, 5, 7, 8, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1d80>, {0: [2, 4, 5, 7], 1: [2, 1, 8, 7], 2: [2, 3, 6, 5, 7], 3: [2, 3, 6, 10, 7], 4: [2, 4, 5, 6, 10, 7], 5: [2, 4, 11, 12, 9, 8, 7], 6: [2, 3, 1, 8, 7], 7: [2, 4, 11, 13, 9, 8, 7], 8: [2, 4, 11, 12, 14, 13, 9, 8, 7], 9: [2, 3, 6, 10, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1cf0>, {0: [2, 4, 5, 7, 8], 1: [2, 1, 8], 2: [2, 4, 11, 12, 9, 8], 3: [2, 3, 1, 8], 4: [2, 4, 11, 13, 9, 8], 5: [2, 4, 5, 7, 10, 9, 8], 6: [2, 4, 11, 12, 14, 13, 9, 8], 7: [2, 3, 6, 5, 7, 8], 8: [2, 4, 11, 13, 14, 12, 9, 8], 9: [2, 3, 6, 10, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1c60>, {0: [2, 4, 5, 7, 8, 9], 1: [2, 4, 11, 12, 9], 2: [2, 4, 11, 13, 9], 3: [2, 4, 5, 7, 10, 9], 4: [2, 4, 11, 12, 14, 13, 9], 5: [2, 1, 8, 9], 6: [2, 4, 11, 13, 14, 12, 9], 7: [2, 3, 6, 10, 9], 8: [2, 4, 5, 6, 10, 9], 9: [2, 3, 6, 14, 13, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1bd0>, {0: [2, 4, 5, 7, 10], 1: [2, 3, 6, 10], 2: [2, 4, 5, 6, 10], 3: [2, 4, 5, 7, 8, 9, 10], 4: [2, 4, 11, 12, 9, 10], 5: [2, 4, 11, 13, 9, 10], 6: [2, 4, 11, 12, 14, 13, 9, 10], 7: [2, 1, 8, 9, 10], 8: [2, 4, 11, 13, 14, 12, 9, 10], 9: [2, 3, 6, 14, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1b40>, {0: [2, 4, 11], 1: [2, 4, 5, 7, 8, 9, 12, 11], 2: [2, 4, 5, 7, 8, 9, 13, 11], 3: [2, 4, 5, 7, 8, 9, 13, 14, 12, 11], 4: [2, 4, 5, 7, 10, 9, 12, 11], 5: [2, 4, 5, 7, 8, 9, 12, 14, 13, 11], 6: [2, 3, 6, 14, 13, 11], 7: [2, 4, 5, 7, 10, 9, 13, 11], 8: [2, 1, 8, 9, 12, 11], 9: [2, 3, 6, 10, 9, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1ab0>, {0: [2, 4, 11, 12], 1: [2, 4, 5, 7, 8, 9, 12], 2: [2, 4, 11, 13, 14, 12], 3: [2, 4, 11, 13, 9, 12], 4: [2, 4, 5, 7, 8, 9, 13, 14, 12], 5: [2, 4, 5, 7, 10, 9, 12], 6: [2, 1, 8, 9, 12], 7: [2, 3, 6, 10, 9, 12], 8: [2, 3, 6, 14, 12], 9: [2, 4, 5, 6, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1a20>, {0: [2, 4, 11, 13], 1: [2, 4, 5, 7, 8, 9, 13], 2: [2, 4, 11, 12, 14, 13], 3: [2, 4, 11, 12, 9, 13], 4: [2, 4, 5, 7, 8, 9, 12, 14, 13], 5: [2, 3, 6, 14, 13], 6: [2, 4, 5, 7, 10, 9, 13], 7: [2, 4, 5, 6, 14, 13], 8: [2, 1, 8, 9, 13], 9: [2, 3, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1990>, {0: [2, 4, 11, 12, 14], 1: [2, 4, 11, 13, 14], 2: [2, 4, 5, 7, 8, 9, 13, 14], 3: [2, 4, 11, 12, 9, 13, 14], 4: [2, 4, 5, 7, 8, 9, 12, 14], 5: [2, 3, 6, 14], 6: [2, 4, 11, 13, 9, 12, 14], 7: [2, 4, 5, 6, 14], 8: [2, 4, 5, 7, 10, 9, 13, 14], 9: [2, 1, 8, 9, 13, 14]})}), 3: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e1900>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1870>, {0: [3, 1], 1: [3, 2, 1], 2: [3, 6, 5, 4, 2, 1], 3: [3, 2, 4, 5, 7, 8, 1], 4: [3, 6, 10, 9, 8, 1], 5: [3, 6, 5, 7, 8, 1], 6: [3, 6, 14, 13, 9, 8, 1], 7: [3, 6, 10, 7, 5, 4, 2, 1], 8: [3, 2, 4, 11, 12, 9, 8, 1], 9: [3, 6, 14, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e17e0>, {0: [3, 2], 1: [3, 1, 2], 2: [3, 6, 5, 4, 2], 3: [3, 6, 10, 7, 5, 4, 2], 4: [3, 1, 8, 7, 5, 4, 2], 5: [3, 6, 10, 9, 8, 7, 5, 4, 2], 6: [3, 6, 14, 13, 11, 4, 2], 7: [3, 6, 10, 9, 12, 11, 4, 2], 8: [3, 6, 14, 12, 11, 4, 2], 9: [3, 6, 10, 9, 13, 11, 4, 2]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1750>, {0: [3, 2, 4], 1: [3, 1, 2, 4], 2: [3, 6, 5, 4], 3: [3, 6, 10, 7, 5, 4], 4: [3, 1, 8, 7, 5, 4], 5: [3, 2, 1, 8, 7, 5, 4], 6: [3, 6, 10, 9, 8, 7, 5, 4], 7: [3, 6, 14, 13, 11, 4], 8: [3, 6, 10, 9, 12, 11, 4], 9: [3, 6, 14, 12, 11, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e16c0>, {0: [3, 2, 4, 5], 1: [3, 6, 5], 2: [3, 1, 2, 4, 5], 3: [3, 6, 10, 7, 5], 4: [3, 1, 8, 7, 5], 5: [3, 2, 1, 8, 7, 5], 6: [3, 6, 10, 9, 8, 7, 5], 7: [3, 6, 14, 13, 9, 8, 7, 5], 8: [3, 2, 4, 11, 12, 9, 8, 7, 5], 9: [3, 6, 14, 12, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1630>, {0: [3, 6], 1: [3, 2, 4, 5, 6], 2: [3, 2, 4, 5, 7, 10, 6], 3: [3, 1, 2, 4, 5, 6], 4: [3, 2, 4, 5, 7, 8, 9, 10, 6], 5: [3, 2, 4, 11, 12, 14, 6], 6: [3, 2, 4, 11, 13, 14, 6], 7: [3, 2, 4, 11, 12, 9, 10, 6], 8: [3, 2, 4, 11, 13, 9, 10, 6], 9: [3, 2, 4, 5, 7, 8, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e15a0>, {0: [3, 2, 4, 5, 7], 1: [3, 6, 5, 7], 2: [3, 6, 10, 7], 3: [3, 1, 2, 4, 5, 7], 4: [3, 1, 8, 7], 5: [3, 2, 1, 8, 7], 6: [3, 6, 10, 9, 8, 7], 7: [3, 2, 4, 5, 6, 10, 7], 8: [3, 6, 14, 13, 9, 8, 7], 9: [3, 2, 4, 11, 12, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1510>, {0: [3, 2, 4, 5, 7, 8], 1: [3, 1, 8], 2: [3, 2, 1, 8], 3: [3, 6, 5, 7, 8], 4: [3, 6, 10, 9, 8], 5: [3, 6, 14, 13, 9, 8], 6: [3, 2, 4, 11, 12, 9, 8], 7: [3, 6, 10, 7, 8], 8: [3, 6, 14, 12, 9, 8], 9: [3, 2, 4, 11, 13, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1480>, {0: [3, 6, 10, 9], 1: [3, 2, 4, 5, 7, 8, 9], 2: [3, 6, 14, 13, 9], 3: [3, 2, 4, 11, 12, 9], 4: [3, 6, 14, 12, 9], 5: [3, 2, 4, 11, 13, 9], 6: [3, 1, 8, 9], 7: [3, 2, 4, 5, 7, 10, 9], 8: [3, 2, 4, 11, 12, 14, 13, 9], 9: [3, 2, 1, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e13f0>, {0: [3, 6, 10], 1: [3, 2, 4, 5, 7, 10], 2: [3, 2, 4, 5, 6, 10], 3: [3, 6, 14, 13, 9, 10], 4: [3, 2, 4, 5, 7, 8, 9, 10], 5: [3, 2, 4, 11, 12, 9, 10], 6: [3, 6, 5, 7, 10], 7: [3, 6, 14, 12, 9, 10], 8: [3, 2, 4, 11, 13, 9, 10], 9: [3, 1, 8, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1360>, {0: [3, 2, 4, 11], 1: [3, 6, 14, 13, 11], 2: [3, 6, 10, 9, 12, 11], 3: [3, 6, 14, 12, 11], 4: [3, 6, 10, 9, 13, 11], 5: [3, 2, 4, 5, 7, 8, 9, 12, 11], 6: [3, 6, 14, 13, 9, 12, 11], 7: [3, 6, 10, 9, 13, 14, 12, 11], 8: [3, 6, 10, 9, 12, 14, 13, 11], 9: [3, 2, 4, 5, 7, 8, 9, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e12d0>, {0: [3, 2, 4, 11, 12], 1: [3, 6, 10, 9, 12], 2: [3, 6, 14, 12], 3: [3, 2, 4, 5, 7, 8, 9, 12], 4: [3, 6, 10, 9, 13, 14, 12], 5: [3, 6, 14, 13, 9, 12], 6: [3, 2, 4, 11, 13, 14, 12], 7: [3, 2, 4, 11, 13, 9, 12], 8: [3, 2, 4, 5, 7, 8, 9, 13, 14, 12], 9: [3, 1, 8, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1240>, {0: [3, 6, 14, 13], 1: [3, 6, 10, 9, 13], 2: [3, 2, 4, 11, 13], 3: [3, 6, 10, 9, 12, 14, 13], 4: [3, 2, 4, 5, 7, 8, 9, 13], 5: [3, 2, 4, 11, 12, 14, 13], 6: [3, 6, 14, 12, 9, 13], 7: [3, 2, 4, 11, 12, 9, 13], 8: [3, 2, 4, 5, 7, 8, 9, 12, 14, 13], 9: [3, 1, 8, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e11b0>, {0: [3, 6, 14], 1: [3, 6, 10, 9, 13, 14], 2: [3, 2, 4, 11, 12, 14], 3: [3, 6, 10, 9, 12, 14], 4: [3, 2, 4, 11, 13, 14], 5: [3, 2, 4, 5, 7, 8, 9, 13, 14], 6: [3, 2, 4, 11, 12, 9, 13, 14], 7: [3, 2, 4, 5, 7, 8, 9, 12, 14], 8: [3, 2, 4, 11, 13, 9, 12, 14], 9: [3, 2, 4, 5, 6, 14]})}), 4: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e1120>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1090>, {0: [4, 2, 1], 1: [4, 2, 3, 1], 2: [4, 5, 7, 8, 1], 3: [4, 5, 6, 3, 1], 4: [4, 5, 6, 3, 2, 1], 5: [4, 11, 12, 9, 8, 1], 6: [4, 11, 13, 9, 8, 1], 7: [4, 5, 7, 10, 9, 8, 1], 8: [4, 11, 12, 14, 13, 9, 8, 1], 9: [4, 11, 13, 14, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e1000>, {0: [4, 2], 1: [4, 5, 6, 3, 2], 2: [4, 5, 7, 8, 1, 2], 3: [4, 5, 7, 10, 6, 3, 2], 4: [4, 5, 6, 3, 1, 2], 5: [4, 5, 7, 8, 1, 3, 2], 6: [4, 5, 7, 8, 9, 10, 6, 3, 2], 7: [4, 11, 12, 9, 8, 1, 2], 8: [4, 11, 13, 14, 6, 3, 2], 9: [4, 11, 12, 14, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0f70>, {0: [4, 2, 3], 1: [4, 2, 1, 3], 2: [4, 5, 6, 3], 3: [4, 5, 7, 10, 6, 3], 4: [4, 5, 7, 8, 1, 3], 5: [4, 5, 7, 8, 1, 2, 3], 6: [4, 5, 7, 8, 9, 10, 6, 3], 7: [4, 11, 12, 14, 6, 3], 8: [4, 11, 13, 14, 6, 3], 9: [4, 11, 12, 9, 10, 6, 3]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0ee0>, {0: [4, 5], 1: [4, 2, 3, 6, 5], 2: [4, 11, 12, 9, 8, 7, 5], 3: [4, 11, 13, 9, 8, 7, 5], 4: [4, 11, 12, 14, 13, 9, 8, 7, 5], 5: [4, 2, 1, 8, 7, 5], 6: [4, 11, 12, 9, 10, 7, 5], 7: [4, 11, 13, 14, 12, 9, 8, 7, 5], 8: [4, 11, 13, 9, 10, 7, 5], 9: [4, 11, 12, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0e50>, {0: [4, 5, 6], 1: [4, 2, 3, 6], 2: [4, 5, 7, 10, 6], 3: [4, 5, 7, 8, 9, 10, 6], 4: [4, 11, 12, 14, 6], 5: [4, 11, 13, 14, 6], 6: [4, 11, 12, 9, 10, 6], 7: [4, 11, 13, 9, 10, 6], 8: [4, 5, 7, 8, 9, 13, 14, 6], 9: [4, 2, 1, 3, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0dc0>, {0: [4, 5, 7], 1: [4, 5, 6, 10, 7], 2: [4, 11, 12, 9, 8, 7], 3: [4, 11, 13, 9, 8, 7], 4: [4, 11, 12, 14, 13, 9, 8, 7], 5: [4, 2, 1, 8, 7], 6: [4, 11, 12, 9, 10, 7], 7: [4, 11, 13, 14, 12, 9, 8, 7], 8: [4, 2, 3, 6, 5, 7], 9: [4, 5, 6, 10, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0d30>, {0: [4, 5, 7, 8], 1: [4, 11, 12, 9, 8], 2: [4, 11, 13, 9, 8], 3: [4, 5, 7, 10, 9, 8], 4: [4, 11, 12, 14, 13, 9, 8], 5: [4, 2, 1, 8], 6: [4, 11, 13, 14, 12, 9, 8], 7: [4, 5, 6, 10, 9, 8], 8: [4, 5, 6, 14, 13, 9, 8], 9: [4, 5, 6, 10, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0ca0>, {0: [4, 5, 7, 8, 9], 1: [4, 11, 12, 9], 2: [4, 11, 13, 9], 3: [4, 5, 7, 10, 9], 4: [4, 11, 12, 14, 13, 9], 5: [4, 11, 13, 14, 12, 9], 6: [4, 5, 6, 10, 9], 7: [4, 5, 6, 14, 13, 9], 8: [4, 5, 6, 14, 12, 9], 9: [4, 2, 1, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0c10>, {0: [4, 5, 7, 10], 1: [4, 5, 6, 10], 2: [4, 5, 7, 8, 9, 10], 3: [4, 11, 12, 9, 10], 4: [4, 11, 13, 9, 10], 5: [4, 11, 12, 14, 13, 9, 10], 6: [4, 2, 3, 6, 10], 7: [4, 11, 13, 14, 12, 9, 10], 8: [4, 5, 6, 14, 13, 9, 10], 9: [4, 5, 6, 14, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0b80>, {0: [4, 11], 1: [4, 5, 7, 8, 9, 12, 11], 2: [4, 5, 7, 8, 9, 13, 11], 3: [4, 5, 7, 8, 9, 13, 14, 12, 11], 4: [4, 5, 7, 10, 9, 12, 11], 5: [4, 5, 7, 8, 9, 12, 14, 13, 11], 6: [4, 5, 7, 10, 9, 13, 11], 7: [4, 5, 6, 14, 13, 11], 8: [4, 5, 6, 10, 9, 12, 11], 9: [4, 5, 6, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0af0>, {0: [4, 11, 12], 1: [4, 5, 7, 8, 9, 12], 2: [4, 11, 13, 14, 12], 3: [4, 11, 13, 9, 12], 4: [4, 5, 7, 8, 9, 13, 14, 12], 5: [4, 5, 7, 10, 9, 12], 6: [4, 5, 6, 10, 9, 12], 7: [4, 5, 6, 14, 12], 8: [4, 5, 7, 10, 9, 13, 14, 12], 9: [4, 5, 7, 8, 9, 13, 11, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0a60>, {0: [4, 11, 13], 1: [4, 5, 7, 8, 9, 13], 2: [4, 11, 12, 14, 13], 3: [4, 11, 12, 9, 13], 4: [4, 5, 7, 8, 9, 12, 14, 13], 5: [4, 5, 7, 10, 9, 13], 6: [4, 5, 6, 14, 13], 7: [4, 5, 6, 10, 9, 13], 8: [4, 5, 7, 10, 9, 12, 14, 13], 9: [4, 5, 7, 8, 9, 12, 11, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e09d0>, {0: [4, 11, 12, 14], 1: [4, 11, 13, 14], 2: [4, 5, 7, 8, 9, 13, 14], 3: [4, 11, 12, 9, 13, 14], 4: [4, 5, 7, 8, 9, 12, 14], 5: [4, 11, 13, 9, 12, 14], 6: [4, 5, 6, 14], 7: [4, 5, 7, 10, 9, 13, 14], 8: [4, 5, 7, 10, 9, 12, 14], 9: [4, 5, 6, 10, 9, 13, 14]})}), 5: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e0940>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e08b0>, {0: [5, 4, 2, 1], 1: [5, 4, 2, 3, 1], 2: [5, 7, 8, 1], 3: [5, 6, 3, 1], 4: [5, 6, 3, 2, 1], 5: [5, 7, 10, 9, 8, 1], 6: [5, 6, 10, 9, 8, 1], 7: [5, 7, 10, 6, 3, 1], 8: [5, 7, 10, 6, 3, 2, 1], 9: [5, 4, 11, 12, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0820>, {0: [5, 4, 2], 1: [5, 6, 3, 2], 2: [5, 7, 8, 1, 2], 3: [5, 7, 10, 6, 3, 2], 4: [5, 6, 3, 1, 2], 5: [5, 7, 8, 9, 12, 11, 4, 2], 6: [5, 7, 8, 1, 3, 2], 7: [5, 7, 8, 9, 13, 11, 4, 2], 8: [5, 7, 8, 9, 13, 14, 12, 11, 4, 2], 9: [5, 7, 10, 9, 12, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0790>, {0: [5, 4, 2, 3], 1: [5, 6, 3], 2: [5, 4, 2, 1, 3], 3: [5, 7, 10, 6, 3], 4: [5, 7, 8, 1, 3], 5: [5, 7, 8, 1, 2, 3], 6: [5, 7, 8, 9, 10, 6, 3], 7: [5, 7, 8, 9, 13, 14, 6, 3], 8: [5, 7, 8, 9, 12, 14, 6, 3], 9: [5, 7, 8, 9, 12, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0700>, {0: [5, 4], 1: [5, 6, 3, 2, 4], 2: [5, 7, 8, 9, 12, 11, 4], 3: [5, 7, 8, 9, 13, 11, 4], 4: [5, 7, 8, 9, 13, 14, 12, 11, 4], 5: [5, 7, 10, 9, 12, 11, 4], 6: [5, 7, 8, 1, 2, 4], 7: [5, 7, 8, 9, 12, 14, 13, 11, 4], 8: [5, 7, 10, 9, 13, 11, 4], 9: [5, 6, 14, 13, 11, 4]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0670>, {0: [5, 6], 1: [5, 7, 10, 6], 2: [5, 4, 2, 3, 6], 3: [5, 7, 8, 9, 10, 6], 4: [5, 7, 8, 9, 13, 14, 6], 5: [5, 7, 8, 9, 12, 14, 6], 6: [5, 7, 10, 9, 13, 14, 6], 7: [5, 7, 10, 9, 12, 14, 6], 8: [5, 4, 11, 12, 14, 6], 9: [5, 4, 11, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e05e0>, {0: [5, 7], 1: [5, 6, 10, 7], 2: [5, 6, 10, 9, 8, 7], 3: [5, 4, 11, 12, 9, 8, 7], 4: [5, 6, 14, 13, 9, 8, 7], 5: [5, 4, 11, 13, 9, 8, 7], 6: [5, 6, 14, 12, 9, 8, 7], 7: [5, 4, 11, 12, 14, 13, 9, 8, 7], 8: [5, 4, 2, 1, 8, 7], 9: [5, 4, 11, 12, 9, 10, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0550>, {0: [5, 7, 8], 1: [5, 7, 10, 9, 8], 2: [5, 6, 10, 9, 8], 3: [5, 4, 11, 12, 9, 8], 4: [5, 6, 14, 13, 9, 8], 5: [5, 6, 10, 7, 8], 6: [5, 4, 11, 13, 9, 8], 7: [5, 6, 14, 12, 9, 8], 8: [5, 4, 11, 12, 14, 13, 9, 8], 9: [5, 4, 2, 1, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e04c0>, {0: [5, 7, 8, 9], 1: [5, 7, 10, 9], 2: [5, 6, 10, 9], 3: [5, 4, 11, 12, 9], 4: [5, 6, 14, 13, 9], 5: [5, 4, 11, 13, 9], 6: [5, 6, 14, 12, 9], 7: [5, 4, 11, 12, 14, 13, 9], 8: [5, 4, 11, 13, 14, 12, 9], 9: [5, 6, 14, 13, 11, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0430>, {0: [5, 7, 10], 1: [5, 6, 10], 2: [5, 7, 8, 9, 10], 3: [5, 4, 11, 12, 9, 10], 4: [5, 6, 14, 13, 9, 10], 5: [5, 4, 11, 13, 9, 10], 6: [5, 6, 14, 12, 9, 10], 7: [5, 4, 11, 12, 14, 13, 9, 10], 8: [5, 4, 2, 3, 6, 10], 9: [5, 4, 11, 13, 14, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e03a0>, {0: [5, 4, 11], 1: [5, 7, 8, 9, 12, 11], 2: [5, 7, 8, 9, 13, 11], 3: [5, 7, 8, 9, 13, 14, 12, 11], 4: [5, 7, 10, 9, 12, 11], 5: [5, 7, 8, 9, 12, 14, 13, 11], 6: [5, 7, 10, 9, 13, 11], 7: [5, 6, 14, 13, 11], 8: [5, 6, 10, 9, 12, 11], 9: [5, 6, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0310>, {0: [5, 7, 8, 9, 12], 1: [5, 7, 8, 9, 13, 14, 12], 2: [5, 7, 10, 9, 12], 3: [5, 4, 11, 12], 4: [5, 6, 10, 9, 12], 5: [5, 6, 14, 12], 6: [5, 7, 10, 9, 13, 14, 12], 7: [5, 7, 8, 9, 13, 11, 12], 8: [5, 4, 11, 13, 14, 12], 9: [5, 6, 10, 9, 13, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0280>, {0: [5, 7, 8, 9, 13], 1: [5, 7, 8, 9, 12, 14, 13], 2: [5, 7, 10, 9, 13], 3: [5, 6, 14, 13], 4: [5, 4, 11, 13], 5: [5, 6, 10, 9, 13], 6: [5, 7, 10, 9, 12, 14, 13], 7: [5, 4, 11, 12, 14, 13], 8: [5, 7, 8, 9, 12, 11, 13], 9: [5, 6, 10, 9, 12, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e01f0>, {0: [5, 7, 8, 9, 13, 14], 1: [5, 7, 8, 9, 12, 14], 2: [5, 6, 14], 3: [5, 7, 10, 9, 13, 14], 4: [5, 7, 10, 9, 12, 14], 5: [5, 4, 11, 12, 14], 6: [5, 6, 10, 9, 13, 14], 7: [5, 4, 11, 13, 14], 8: [5, 6, 10, 9, 12, 14], 9: [5, 7, 8, 9, 12, 11, 13, 14]})}), 6: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28e0160>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e00d0>, {0: [6, 3, 1], 1: [6, 3, 2, 1], 2: [6, 5, 4, 2, 1], 3: [6, 5, 4, 2, 3, 1], 4: [6, 10, 9, 8, 1], 5: [6, 5, 7, 8, 1], 6: [6, 14, 13, 9, 8, 1], 7: [6, 10, 7, 5, 4, 2, 1], 8: [6, 14, 12, 9, 8, 1], 9: [6, 10, 7, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28e0040>, {0: [6, 3, 2], 1: [6, 5, 4, 2], 2: [6, 3, 1, 2], 3: [6, 10, 7, 5, 4, 2], 4: [6, 10, 9, 8, 7, 5, 4, 2], 5: [6, 14, 13, 11, 4, 2], 6: [6, 10, 9, 12, 11, 4, 2], 7: [6, 14, 12, 11, 4, 2], 8: [6, 10, 9, 13, 11, 4, 2], 9: [6, 14, 13, 9, 8, 7, 5, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2cb0>, {0: [6, 3], 1: [6, 5, 4, 2, 3], 2: [6, 10, 7, 5, 4, 2, 3], 3: [6, 5, 4, 2, 1, 3], 4: [6, 10, 9, 8, 7, 5, 4, 2, 3], 5: [6, 14, 13, 11, 4, 2, 3], 6: [6, 10, 9, 12, 11, 4, 2, 3], 7: [6, 14, 12, 11, 4, 2, 3], 8: [6, 10, 9, 13, 11, 4, 2, 3], 9: [6, 14, 13, 9, 8, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2c20>, {0: [6, 5, 4], 1: [6, 3, 2, 4], 2: [6, 10, 7, 5, 4], 3: [6, 10, 9, 8, 7, 5, 4], 4: [6, 14, 13, 11, 4], 5: [6, 10, 9, 12, 11, 4], 6: [6, 14, 12, 11, 4], 7: [6, 10, 9, 13, 11, 4], 8: [6, 14, 13, 9, 8, 7, 5, 4], 9: [6, 3, 1, 2, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2b90>, {0: [6, 5], 1: [6, 10, 7, 5], 2: [6, 3, 2, 4, 5], 3: [6, 10, 9, 8, 7, 5], 4: [6, 14, 13, 9, 8, 7, 5], 5: [6, 14, 12, 9, 8, 7, 5], 6: [6, 14, 13, 9, 10, 7, 5], 7: [6, 14, 12, 9, 10, 7, 5], 8: [6, 10, 9, 12, 11, 4, 5], 9: [6, 14, 13, 11, 4, 5]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2b00>, {0: [6, 5, 7], 1: [6, 10, 7], 2: [6, 10, 9, 8, 7], 3: [6, 14, 13, 9, 8, 7], 4: [6, 14, 12, 9, 8, 7], 5: [6, 3, 2, 4, 5, 7], 6: [6, 14, 13, 9, 10, 7], 7: [6, 14, 12, 9, 10, 7], 8: [6, 14, 13, 11, 12, 9, 8, 7], 9: [6, 14, 12, 11, 13, 9, 8, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2a70>, {0: [6, 5, 7, 8], 1: [6, 10, 9, 8], 2: [6, 14, 13, 9, 8], 3: [6, 10, 7, 8], 4: [6, 14, 12, 9, 8], 5: [6, 14, 13, 11, 12, 9, 8], 6: [6, 14, 12, 11, 13, 9, 8], 7: [6, 5, 7, 10, 9, 8], 8: [6, 3, 2, 4, 5, 7, 8], 9: [6, 14, 13, 9, 10, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d29e0>, {0: [6, 10, 9], 1: [6, 14, 13, 9], 2: [6, 14, 12, 9], 3: [6, 5, 7, 8, 9], 4: [6, 14, 13, 11, 12, 9], 5: [6, 14, 12, 11, 13, 9], 6: [6, 10, 7, 8, 9], 7: [6, 5, 7, 10, 9], 8: [6, 5, 4, 11, 12, 9], 9: [6, 5, 4, 11, 13, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2950>, {0: [6, 10], 1: [6, 14, 13, 9, 10], 2: [6, 5, 7, 10], 3: [6, 14, 12, 9, 10], 4: [6, 5, 7, 8, 9, 10], 5: [6, 14, 13, 11, 12, 9, 10], 6: [6, 14, 12, 11, 13, 9, 10], 7: [6, 14, 13, 9, 8, 7, 10], 8: [6, 14, 12, 9, 8, 7, 10], 9: [6, 5, 4, 11, 12, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d28c0>, {0: [6, 14, 13, 11], 1: [6, 10, 9, 12, 11], 2: [6, 14, 12, 11], 3: [6, 10, 9, 13, 11], 4: [6, 14, 13, 9, 12, 11], 5: [6, 10, 9, 13, 14, 12, 11], 6: [6, 10, 9, 12, 14, 13, 11], 7: [6, 14, 12, 9, 13, 11], 8: [6, 5, 4, 11], 9: [6, 5, 7, 8, 9, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2830>, {0: [6, 10, 9, 12], 1: [6, 14, 12], 2: [6, 10, 9, 13, 14, 12], 3: [6, 14, 13, 9, 12], 4: [6, 14, 13, 11, 12], 5: [6, 10, 9, 13, 11, 12], 6: [6, 5, 7, 8, 9, 12], 7: [6, 5, 7, 8, 9, 13, 14, 12], 8: [6, 10, 7, 8, 9, 12], 9: [6, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d27a0>, {0: [6, 14, 13], 1: [6, 10, 9, 13], 2: [6, 10, 9, 12, 14, 13], 3: [6, 14, 12, 9, 13], 4: [6, 10, 9, 12, 11, 13], 5: [6, 14, 12, 11, 13], 6: [6, 5, 7, 8, 9, 13], 7: [6, 5, 7, 8, 9, 12, 14, 13], 8: [6, 10, 7, 8, 9, 13], 9: [6, 5, 7, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2710>, {0: [6, 14], 1: [6, 10, 9, 13, 14], 2: [6, 10, 9, 12, 14], 3: [6, 10, 9, 12, 11, 13, 14], 4: [6, 5, 7, 8, 9, 13, 14], 5: [6, 10, 9, 13, 11, 12, 14], 6: [6, 5, 7, 8, 9, 12, 14], 7: [6, 10, 7, 8, 9, 13, 14], 8: [6, 5, 7, 10, 9, 13, 14], 9: [6, 10, 7, 8, 9, 12, 14]})}), 7: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28d2680>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d25f0>, {0: [7, 5, 4, 2, 1], 1: [7, 8, 1], 2: [7, 5, 4, 2, 3, 1], 3: [7, 5, 6, 3, 1], 4: [7, 10, 9, 8, 1], 5: [7, 5, 6, 3, 2, 1], 6: [7, 10, 6, 3, 1], 7: [7, 10, 6, 3, 2, 1], 8: [7, 10, 6, 5, 4, 2, 1], 9: [7, 8, 9, 12, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2560>, {0: [7, 5, 4, 2], 1: [7, 8, 1, 2], 2: [7, 5, 6, 3, 2], 3: [7, 10, 6, 3, 2], 4: [7, 10, 6, 5, 4, 2], 5: [7, 8, 9, 12, 11, 4, 2], 6: [7, 8, 1, 3, 2], 7: [7, 8, 9, 13, 11, 4, 2], 8: [7, 8, 9, 13, 14, 12, 11, 4, 2], 9: [7, 10, 9, 12, 11, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d24d0>, {0: [7, 5, 4, 2, 3], 1: [7, 5, 6, 3], 2: [7, 10, 6, 3], 3: [7, 5, 4, 2, 1, 3], 4: [7, 8, 1, 3], 5: [7, 8, 1, 2, 3], 6: [7, 8, 9, 10, 6, 3], 7: [7, 10, 6, 5, 4, 2, 3], 8: [7, 8, 9, 13, 14, 6, 3], 9: [7, 8, 9, 12, 14, 6, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2440>, {0: [7, 5, 4], 1: [7, 10, 6, 5, 4], 2: [7, 8, 9, 12, 11, 4], 3: [7, 8, 9, 13, 11, 4], 4: [7, 8, 9, 13, 14, 12, 11, 4], 5: [7, 5, 6, 3, 2, 4], 6: [7, 10, 9, 12, 11, 4], 7: [7, 8, 1, 2, 4], 8: [7, 8, 9, 12, 14, 13, 11, 4], 9: [7, 8, 9, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d23b0>, {0: [7, 5], 1: [7, 10, 6, 5], 2: [7, 8, 9, 10, 6, 5], 3: [7, 8, 9, 13, 14, 6, 5], 4: [7, 8, 9, 12, 11, 4, 5], 5: [7, 8, 9, 13, 11, 4, 5], 6: [7, 8, 9, 12, 14, 6, 5], 7: [7, 8, 9, 13, 14, 12, 11, 4, 5], 8: [7, 10, 9, 13, 14, 6, 5], 9: [7, 8, 1, 2, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2320>, {0: [7, 5, 6], 1: [7, 10, 6], 2: [7, 8, 9, 10, 6], 3: [7, 8, 9, 13, 14, 6], 4: [7, 8, 9, 12, 14, 6], 5: [7, 5, 4, 2, 3, 6], 6: [7, 10, 9, 13, 14, 6], 7: [7, 10, 9, 12, 14, 6], 8: [7, 8, 9, 12, 11, 13, 14, 6], 9: [7, 8, 9, 13, 11, 12, 14, 6]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2290>, {0: [7, 8], 1: [7, 10, 9, 8], 2: [7, 5, 6, 10, 9, 8], 3: [7, 5, 4, 11, 12, 9, 8], 4: [7, 5, 6, 14, 13, 9, 8], 5: [7, 5, 4, 11, 13, 9, 8], 6: [7, 5, 6, 14, 12, 9, 8], 7: [7, 5, 4, 11, 12, 14, 13, 9, 8], 8: [7, 10, 6, 14, 13, 9, 8], 9: [7, 5, 4, 2, 1, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2200>, {0: [7, 8, 9], 1: [7, 10, 9], 2: [7, 5, 6, 10, 9], 3: [7, 5, 4, 11, 12, 9], 4: [7, 5, 6, 14, 13, 9], 5: [7, 5, 4, 11, 13, 9], 6: [7, 5, 6, 14, 12, 9], 7: [7, 5, 4, 11, 12, 14, 13, 9], 8: [7, 10, 6, 14, 13, 9], 9: [7, 5, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2170>, {0: [7, 10], 1: [7, 8, 9, 10], 2: [7, 5, 6, 10], 3: [7, 8, 9, 13, 14, 6, 10], 4: [7, 5, 4, 11, 12, 9, 10], 5: [7, 5, 6, 14, 13, 9, 10], 6: [7, 8, 9, 12, 14, 6, 10], 7: [7, 5, 4, 11, 13, 9, 10], 8: [7, 5, 6, 14, 12, 9, 10], 9: [7, 5, 4, 11, 12, 14, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d20e0>, {0: [7, 8, 9, 12, 11], 1: [7, 8, 9, 13, 11], 2: [7, 8, 9, 13, 14, 12, 11], 3: [7, 10, 9, 12, 11], 4: [7, 8, 9, 12, 14, 13, 11], 5: [7, 5, 4, 11], 6: [7, 10, 9, 13, 11], 7: [7, 10, 9, 13, 14, 12, 11], 8: [7, 10, 9, 12, 14, 13, 11], 9: [7, 5, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2050>, {0: [7, 8, 9, 12], 1: [7, 8, 9, 13, 14, 12], 2: [7, 10, 9, 12], 3: [7, 10, 9, 13, 14, 12], 4: [7, 8, 9, 13, 11, 12], 5: [7, 5, 4, 11, 12], 6: [7, 10, 9, 13, 11, 12], 7: [7, 5, 6, 10, 9, 12], 8: [7, 5, 6, 14, 12], 9: [7, 5, 4, 11, 13, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1fc0>, {0: [7, 8, 9, 13], 1: [7, 8, 9, 12, 14, 13], 2: [7, 10, 9, 13], 3: [7, 10, 9, 12, 14, 13], 4: [7, 8, 9, 12, 11, 13], 5: [7, 5, 6, 14, 13], 6: [7, 10, 9, 12, 11, 13], 7: [7, 5, 4, 11, 13], 8: [7, 5, 6, 10, 9, 13], 9: [7, 5, 4, 11, 12, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1f30>, {0: [7, 8, 9, 13, 14], 1: [7, 8, 9, 12, 14], 2: [7, 10, 9, 13, 14], 3: [7, 10, 9, 12, 14], 4: [7, 8, 9, 12, 11, 13, 14], 5: [7, 8, 9, 13, 11, 12, 14], 6: [7, 5, 6, 14], 7: [7, 10, 9, 12, 11, 13, 14], 8: [7, 10, 9, 13, 11, 12, 14], 9: [7, 5, 4, 11, 12, 14]})}), 8: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28d1ea0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1e10>, {0: [8, 1], 1: [8, 7, 5, 4, 2, 1], 2: [8, 7, 5, 4, 2, 3, 1], 3: [8, 9, 12, 11, 4, 2, 1], 4: [8, 9, 13, 11, 4, 2, 1], 5: [8, 7, 5, 6, 3, 1], 6: [8, 9, 10, 6, 3, 1], 7: [8, 9, 13, 14, 12, 11, 4, 2, 1], 8: [8, 9, 10, 7, 5, 4, 2, 1], 9: [8, 9, 12, 14, 13, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1d80>, {0: [8, 7, 5, 4, 2], 1: [8, 1, 2], 2: [8, 9, 12, 11, 4, 2], 3: [8, 1, 3, 2], 4: [8, 9, 13, 11, 4, 2], 5: [8, 9, 10, 7, 5, 4, 2], 6: [8, 9, 13, 14, 12, 11, 4, 2], 7: [8, 7, 5, 6, 3, 2], 8: [8, 9, 12, 14, 13, 11, 4, 2], 9: [8, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1cf0>, {0: [8, 7, 5, 4, 2, 3], 1: [8, 1, 3], 2: [8, 1, 2, 3], 3: [8, 7, 5, 6, 3], 4: [8, 9, 10, 6, 3], 5: [8, 9, 13, 14, 6, 3], 6: [8, 7, 10, 6, 3], 7: [8, 9, 12, 14, 6, 3], 8: [8, 9, 12, 11, 4, 2, 3], 9: [8, 9, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1c60>, {0: [8, 7, 5, 4], 1: [8, 9, 12, 11, 4], 2: [8, 9, 13, 11, 4], 3: [8, 9, 10, 7, 5, 4], 4: [8, 9, 13, 14, 12, 11, 4], 5: [8, 1, 2, 4], 6: [8, 9, 12, 14, 13, 11, 4], 7: [8, 9, 10, 6, 5, 4], 8: [8, 9, 13, 14, 6, 5, 4], 9: [8, 7, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1bd0>, {0: [8, 7, 5], 1: [8, 9, 10, 7, 5], 2: [8, 9, 10, 6, 5], 3: [8, 9, 13, 14, 6, 5], 4: [8, 9, 12, 11, 4, 5], 5: [8, 7, 10, 6, 5], 6: [8, 9, 13, 11, 4, 5], 7: [8, 9, 12, 14, 6, 5], 8: [8, 9, 13, 14, 12, 11, 4, 5], 9: [8, 1, 2, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1b40>, {0: [8, 7, 5, 6], 1: [8, 9, 10, 6], 2: [8, 9, 13, 14, 6], 3: [8, 7, 10, 6], 4: [8, 9, 12, 14, 6], 5: [8, 9, 12, 11, 13, 14, 6], 6: [8, 9, 13, 11, 12, 14, 6], 7: [8, 9, 10, 7, 5, 6], 8: [8, 7, 5, 4, 2, 3, 6], 9: [8, 7, 10, 9, 13, 14, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3f40>, {0: [8, 7], 1: [8, 9, 10, 7], 2: [8, 9, 10, 6, 5, 7], 3: [8, 9, 13, 14, 6, 5, 7], 4: [8, 9, 12, 11, 4, 5, 7], 5: [8, 9, 13, 11, 4, 5, 7], 6: [8, 9, 12, 14, 6, 5, 7], 7: [8, 9, 13, 14, 12, 11, 4, 5, 7], 8: [8, 1, 2, 4, 5, 7], 9: [8, 9, 13, 14, 6, 10, 7]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3eb0>, {0: [8, 9], 1: [8, 7, 10, 9], 2: [8, 7, 5, 6, 10, 9], 3: [8, 7, 5, 4, 11, 12, 9], 4: [8, 7, 5, 6, 14, 13, 9], 5: [8, 7, 5, 4, 11, 13, 9], 6: [8, 7, 5, 6, 14, 12, 9], 7: [8, 7, 5, 4, 11, 12, 14, 13, 9], 8: [8, 7, 10, 6, 14, 13, 9], 9: [8, 7, 5, 4, 11, 13, 14, 12, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3e20>, {0: [8, 9, 10], 1: [8, 7, 10], 2: [8, 7, 5, 6, 10], 3: [8, 9, 13, 14, 6, 10], 4: [8, 9, 12, 14, 6, 10], 5: [8, 9, 12, 11, 13, 14, 6, 10], 6: [8, 7, 5, 4, 11, 12, 9, 10], 7: [8, 7, 5, 6, 14, 13, 9, 10], 8: [8, 9, 13, 11, 12, 14, 6, 10], 9: [8, 7, 5, 4, 11, 13, 9, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3d90>, {0: [8, 9, 12, 11], 1: [8, 9, 13, 11], 2: [8, 9, 13, 14, 12, 11], 3: [8, 9, 12, 14, 13, 11], 4: [8, 7, 10, 9, 12, 11], 5: [8, 7, 5, 4, 11], 6: [8, 7, 10, 9, 13, 11], 7: [8, 7, 10, 9, 13, 14, 12, 11], 8: [8, 7, 10, 9, 12, 14, 13, 11], 9: [8, 9, 10, 6, 14, 13, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3d00>, {0: [8, 9, 12], 1: [8, 9, 13, 14, 12], 2: [8, 9, 13, 11, 12], 3: [8, 7, 10, 9, 12], 4: [8, 7, 10, 9, 13, 14, 12], 5: [8, 7, 5, 4, 11, 12], 6: [8, 7, 10, 9, 13, 11, 12], 7: [8, 9, 10, 6, 14, 12], 8: [8, 7, 5, 6, 10, 9, 12], 9: [8, 7, 5, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3c70>, {0: [8, 9, 13], 1: [8, 9, 12, 14, 13], 2: [8, 9, 12, 11, 13], 3: [8, 7, 10, 9, 13], 4: [8, 7, 10, 9, 12, 14, 13], 5: [8, 9, 10, 6, 14, 13], 6: [8, 7, 5, 6, 14, 13], 7: [8, 7, 10, 9, 12, 11, 13], 8: [8, 7, 5, 4, 11, 13], 9: [8, 7, 5, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3be0>, {0: [8, 9, 13, 14], 1: [8, 9, 12, 14], 2: [8, 9, 12, 11, 13, 14], 3: [8, 9, 13, 11, 12, 14], 4: [8, 7, 10, 9, 13, 14], 5: [8, 7, 10, 9, 12, 14], 6: [8, 9, 10, 6, 14], 7: [8, 7, 5, 6, 14], 8: [8, 7, 10, 9, 12, 11, 13, 14], 9: [8, 7, 10, 9, 13, 11, 12, 14]})}), 9: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28d1990>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3b50>, {0: [9, 8, 1], 1: [9, 8, 7, 5, 4, 2, 1], 2: [9, 12, 11, 4, 2, 1], 3: [9, 13, 11, 4, 2, 1], 4: [9, 10, 6, 3, 1], 5: [9, 13, 14, 12, 11, 4, 2, 1], 6: [9, 10, 7, 5, 4, 2, 1], 7: [9, 12, 14, 13, 11, 4, 2, 1], 8: [9, 10, 6, 3, 2, 1], 9: [9, 10, 7, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1900>, {0: [9, 8, 7, 5, 4, 2], 1: [9, 12, 11, 4, 2], 2: [9, 13, 11, 4, 2], 3: [9, 10, 7, 5, 4, 2], 4: [9, 13, 14, 12, 11, 4, 2], 5: [9, 8, 1, 2], 6: [9, 12, 14, 13, 11, 4, 2], 7: [9, 10, 6, 3, 2], 8: [9, 10, 6, 5, 4, 2], 9: [9, 13, 14, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3ac0>, {0: [9, 10, 6, 3], 1: [9, 13, 14, 6, 3], 2: [9, 8, 7, 5, 4, 2, 3], 3: [9, 12, 14, 6, 3], 4: [9, 12, 11, 4, 2, 3], 5: [9, 13, 11, 4, 2, 3], 6: [9, 10, 7, 5, 4, 2, 3], 7: [9, 13, 14, 12, 11, 4, 2, 3], 8: [9, 8, 1, 3], 9: [9, 12, 14, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3a30>, {0: [9, 8, 7, 5, 4], 1: [9, 12, 11, 4], 2: [9, 13, 11, 4], 3: [9, 10, 7, 5, 4], 4: [9, 13, 14, 12, 11, 4], 5: [9, 12, 14, 13, 11, 4], 6: [9, 10, 6, 5, 4], 7: [9, 13, 14, 6, 5, 4], 8: [9, 12, 14, 6, 5, 4], 9: [9, 8, 1, 2, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d39a0>, {0: [9, 8, 7, 5], 1: [9, 10, 7, 5], 2: [9, 10, 6, 5], 3: [9, 13, 14, 6, 5], 4: [9, 12, 11, 4, 5], 5: [9, 13, 11, 4, 5], 6: [9, 12, 14, 6, 5], 7: [9, 13, 14, 12, 11, 4, 5], 8: [9, 12, 14, 13, 11, 4, 5], 9: [9, 12, 11, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3910>, {0: [9, 10, 6], 1: [9, 13, 14, 6], 2: [9, 12, 14, 6], 3: [9, 8, 7, 5, 6], 4: [9, 12, 11, 13, 14, 6], 5: [9, 13, 11, 12, 14, 6], 6: [9, 10, 7, 5, 6], 7: [9, 8, 7, 10, 6], 8: [9, 12, 11, 4, 5, 6], 9: [9, 13, 11, 4, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3880>, {0: [9, 8, 7], 1: [9, 10, 7], 2: [9, 10, 6, 5, 7], 3: [9, 13, 14, 6, 5, 7], 4: [9, 12, 11, 4, 5, 7], 5: [9, 13, 11, 4, 5, 7], 6: [9, 12, 14, 6, 5, 7], 7: [9, 13, 14, 12, 11, 4, 5, 7], 8: [9, 13, 14, 6, 10, 7], 9: [9, 12, 14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1870>, {0: [9, 8], 1: [9, 10, 7, 8], 2: [9, 10, 6, 5, 7, 8], 3: [9, 13, 14, 6, 5, 7, 8], 4: [9, 12, 11, 4, 5, 7, 8], 5: [9, 13, 11, 4, 5, 7, 8], 6: [9, 12, 14, 6, 5, 7, 8], 7: [9, 13, 14, 12, 11, 4, 5, 7, 8], 8: [9, 13, 14, 6, 10, 7, 8], 9: [9, 12, 14, 13, 11, 4, 5, 7, 8]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d37f0>, {0: [9, 10], 1: [9, 8, 7, 10], 2: [9, 13, 14, 6, 10], 3: [9, 12, 14, 6, 10], 4: [9, 8, 7, 5, 6, 10], 5: [9, 12, 11, 13, 14, 6, 10], 6: [9, 13, 11, 12, 14, 6, 10], 7: [9, 13, 14, 6, 5, 7, 10], 8: [9, 12, 11, 4, 5, 7, 10], 9: [9, 12, 14, 6, 5, 7, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3760>, {0: [9, 12, 11], 1: [9, 13, 11], 2: [9, 13, 14, 12, 11], 3: [9, 12, 14, 13, 11], 4: [9, 10, 6, 14, 13, 11], 5: [9, 10, 6, 14, 12, 11], 6: [9, 8, 7, 5, 4, 11], 7: [9, 10, 7, 5, 4, 11], 8: [9, 10, 6, 5, 4, 11], 9: [9, 13, 14, 6, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d36d0>, {0: [9, 12], 1: [9, 13, 14, 12], 2: [9, 13, 11, 12], 3: [9, 10, 6, 14, 12], 4: [9, 10, 6, 14, 13, 11, 12], 5: [9, 8, 7, 5, 4, 11, 12], 6: [9, 8, 7, 5, 6, 14, 12], 7: [9, 10, 7, 5, 4, 11, 12], 8: [9, 8, 7, 5, 4, 11, 13, 14, 12], 9: [9, 8, 7, 10, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3640>, {0: [9, 13], 1: [9, 12, 14, 13], 2: [9, 12, 11, 13], 3: [9, 10, 6, 14, 13], 4: [9, 8, 7, 5, 6, 14, 13], 5: [9, 10, 6, 14, 12, 11, 13], 6: [9, 8, 7, 5, 4, 11, 13], 7: [9, 8, 7, 5, 4, 11, 12, 14, 13], 8: [9, 10, 7, 5, 6, 14, 13], 9: [9, 8, 7, 10, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d17e0>, {0: [9, 13, 14], 1: [9, 12, 14], 2: [9, 12, 11, 13, 14], 3: [9, 13, 11, 12, 14], 4: [9, 10, 6, 14], 5: [9, 8, 7, 5, 6, 14], 6: [9, 8, 7, 5, 4, 11, 12, 14], 7: [9, 8, 7, 5, 4, 11, 13, 14], 8: [9, 10, 7, 5, 6, 14], 9: [9, 8, 7, 10, 6, 14]})}), 10: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28d35b0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3520>, {0: [10, 9, 8, 1], 1: [10, 6, 3, 1], 2: [10, 7, 5, 4, 2, 1], 3: [10, 6, 3, 2, 1], 4: [10, 7, 8, 1], 5: [10, 6, 5, 4, 2, 1], 6: [10, 9, 8, 7, 5, 4, 2, 1], 7: [10, 9, 12, 11, 4, 2, 1], 8: [10, 7, 5, 4, 2, 3, 1], 9: [10, 9, 13, 11, 4, 2, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3490>, {0: [10, 7, 5, 4, 2], 1: [10, 6, 3, 2], 2: [10, 6, 5, 4, 2], 3: [10, 9, 8, 7, 5, 4, 2], 4: [10, 9, 12, 11, 4, 2], 5: [10, 9, 13, 11, 4, 2], 6: [10, 9, 13, 14, 12, 11, 4, 2], 7: [10, 9, 8, 1, 2], 8: [10, 9, 12, 14, 13, 11, 4, 2], 9: [10, 6, 3, 1, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1a20>, {0: [10, 6, 3], 1: [10, 7, 5, 4, 2, 3], 2: [10, 6, 5, 4, 2, 3], 3: [10, 9, 13, 14, 6, 3], 4: [10, 9, 8, 7, 5, 4, 2, 3], 5: [10, 7, 5, 6, 3], 6: [10, 9, 12, 14, 6, 3], 7: [10, 9, 12, 11, 4, 2, 3], 8: [10, 9, 13, 11, 4, 2, 3], 9: [10, 9, 13, 14, 12, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3400>, {0: [10, 7, 5, 4], 1: [10, 6, 5, 4], 2: [10, 9, 8, 7, 5, 4], 3: [10, 9, 12, 11, 4], 4: [10, 9, 13, 11, 4], 5: [10, 9, 13, 14, 12, 11, 4], 6: [10, 6, 3, 2, 4], 7: [10, 9, 12, 14, 13, 11, 4], 8: [10, 9, 13, 14, 6, 5, 4], 9: [10, 9, 12, 14, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1ab0>, {0: [10, 7, 5], 1: [10, 6, 5], 2: [10, 9, 8, 7, 5], 3: [10, 9, 13, 14, 6, 5], 4: [10, 9, 12, 11, 4, 5], 5: [10, 9, 13, 11, 4, 5], 6: [10, 9, 12, 14, 6, 5], 7: [10, 9, 13, 14, 12, 11, 4, 5], 8: [10, 6, 3, 2, 4, 5], 9: [10, 9, 12, 14, 13, 11, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3370>, {0: [10, 6], 1: [10, 9, 13, 14, 6], 2: [10, 7, 5, 6], 3: [10, 9, 12, 14, 6], 4: [10, 9, 8, 7, 5, 6], 5: [10, 9, 12, 11, 13, 14, 6], 6: [10, 9, 13, 11, 12, 14, 6], 7: [10, 7, 8, 9, 13, 14, 6], 8: [10, 7, 8, 9, 12, 14, 6], 9: [10, 9, 12, 11, 4, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d32e0>, {0: [10, 7], 1: [10, 9, 8, 7], 2: [10, 6, 5, 7], 3: [10, 9, 13, 14, 6, 5, 7], 4: [10, 6, 14, 13, 9, 8, 7], 5: [10, 9, 12, 11, 4, 5, 7], 6: [10, 9, 13, 11, 4, 5, 7], 7: [10, 6, 14, 12, 9, 8, 7], 8: [10, 9, 12, 14, 6, 5, 7], 9: [10, 9, 13, 14, 12, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3250>, {0: [10, 9, 8], 1: [10, 7, 8], 2: [10, 6, 5, 7, 8], 3: [10, 6, 14, 13, 9, 8], 4: [10, 6, 14, 12, 9, 8], 5: [10, 6, 14, 13, 11, 12, 9, 8], 6: [10, 9, 13, 14, 6, 5, 7, 8], 7: [10, 6, 14, 12, 11, 13, 9, 8], 8: [10, 9, 12, 11, 4, 5, 7, 8], 9: [10, 9, 13, 11, 4, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d31c0>, {0: [10, 9], 1: [10, 7, 8, 9], 2: [10, 6, 14, 13, 9], 3: [10, 6, 14, 12, 9], 4: [10, 6, 5, 7, 8, 9], 5: [10, 6, 14, 13, 11, 12, 9], 6: [10, 6, 14, 12, 11, 13, 9], 7: [10, 7, 5, 4, 11, 12, 9], 8: [10, 7, 5, 6, 14, 13, 9], 9: [10, 7, 5, 4, 11, 13, 9]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3130>, {0: [10, 9, 12, 11], 1: [10, 9, 13, 11], 2: [10, 9, 13, 14, 12, 11], 3: [10, 9, 12, 14, 13, 11], 4: [10, 6, 14, 13, 11], 5: [10, 7, 8, 9, 12, 11], 6: [10, 6, 14, 12, 11], 7: [10, 7, 8, 9, 13, 11], 8: [10, 6, 14, 13, 9, 12, 11], 9: [10, 7, 8, 9, 13, 14, 12, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d30a0>, {0: [10, 9, 12], 1: [10, 9, 13, 14, 12], 2: [10, 9, 13, 11, 12], 3: [10, 7, 8, 9, 12], 4: [10, 6, 14, 12], 5: [10, 7, 8, 9, 13, 14, 12], 6: [10, 6, 14, 13, 9, 12], 7: [10, 6, 14, 13, 11, 12], 8: [10, 7, 8, 9, 13, 11, 12], 9: [10, 6, 5, 7, 8, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d3010>, {0: [10, 9, 13], 1: [10, 9, 12, 14, 13], 2: [10, 9, 12, 11, 13], 3: [10, 6, 14, 13], 4: [10, 7, 8, 9, 13], 5: [10, 7, 8, 9, 12, 14, 13], 6: [10, 6, 14, 12, 9, 13], 7: [10, 7, 8, 9, 12, 11, 13], 8: [10, 6, 14, 12, 11, 13], 9: [10, 6, 5, 7, 8, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d1750>, {0: [10, 9, 13, 14], 1: [10, 9, 12, 14], 2: [10, 9, 12, 11, 13, 14], 3: [10, 9, 13, 11, 12, 14], 4: [10, 6, 14], 5: [10, 7, 8, 9, 13, 14], 6: [10, 7, 8, 9, 12, 14], 7: [10, 7, 8, 9, 12, 11, 13, 14], 8: [10, 6, 5, 7, 8, 9, 13, 14], 9: [10, 7, 8, 9, 13, 11, 12, 14]})}), 11: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f28d2f80>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2ef0>, {0: [11, 4, 2, 1], 1: [11, 12, 9, 8, 1], 2: [11, 13, 9, 8, 1], 3: [11, 12, 14, 13, 9, 8, 1], 4: [11, 13, 14, 12, 9, 8, 1], 5: [11, 4, 2, 3, 1], 6: [11, 12, 9, 8, 7, 5, 4, 2, 1], 7: [11, 13, 9, 8, 7, 5, 4, 2, 1], 8: [11, 12, 14, 13, 9, 8, 7, 5, 4, 2, 1], 9: [11, 12, 9, 10, 6, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d16c0>, {0: [11, 4, 2], 1: [11, 12, 9, 8, 7, 5, 4, 2], 2: [11, 13, 9, 8, 7, 5, 4, 2], 3: [11, 12, 14, 13, 9, 8, 7, 5, 4, 2], 4: [11, 12, 9, 10, 7, 5, 4, 2], 5: [11, 13, 14, 12, 9, 8, 7, 5, 4, 2], 6: [11, 12, 9, 8, 1, 2], 7: [11, 13, 9, 10, 7, 5, 4, 2], 8: [11, 12, 14, 6, 3, 2], 9: [11, 12, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2e60>, {0: [11, 4, 2, 3], 1: [11, 12, 14, 6, 3], 2: [11, 13, 14, 6, 3], 3: [11, 12, 9, 10, 6, 3], 4: [11, 13, 9, 10, 6, 3], 5: [11, 12, 14, 13, 9, 10, 6, 3], 6: [11, 12, 9, 13, 14, 6, 3], 7: [11, 12, 9, 8, 7, 5, 4, 2, 3], 8: [11, 13, 14, 12, 9, 10, 6, 3], 9: [11, 13, 9, 8, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2dd0>, {0: [11, 4], 1: [11, 12, 9, 8, 7, 5, 4], 2: [11, 13, 9, 8, 7, 5, 4], 3: [11, 12, 14, 13, 9, 8, 7, 5, 4], 4: [11, 12, 9, 10, 7, 5, 4], 5: [11, 13, 14, 12, 9, 8, 7, 5, 4], 6: [11, 13, 9, 10, 7, 5, 4], 7: [11, 12, 14, 6, 5, 4], 8: [11, 12, 9, 10, 6, 5, 4], 9: [11, 13, 14, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f28d2d40>, {0: [11, 4, 5], 1: [11, 12, 9, 8, 7, 5], 2: [11, 13, 9, 8, 7, 5], 3: [11, 12, 14, 13, 9, 8, 7, 5], 4: [11, 12, 9, 10, 7, 5], 5: [11, 13, 14, 12, 9, 8, 7, 5], 6: [11, 13, 9, 10, 7, 5], 7: [11, 12, 14, 6, 5], 8: [11, 12, 9, 10, 6, 5], 9: [11, 13, 14, 6, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0ef86b6d0>, {0: [11, 12, 14, 6], 1: [11, 13, 14, 6], 2: [11, 12, 9, 10, 6], 3: [11, 13, 9, 10, 6], 4: [11, 12, 14, 13, 9, 10, 6], 5: [11, 12, 9, 13, 14, 6], 6: [11, 13, 14, 12, 9, 10, 6], 7: [11, 13, 9, 12, 14, 6], 8: [11, 4, 5, 6], 9: [11, 12, 9, 8, 7, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0ef86b520>, {0: [11, 12, 9, 8, 7], 1: [11, 13, 9, 8, 7], 2: [11, 12, 14, 13, 9, 8, 7], 3: [11, 12, 9, 10, 7], 4: [11, 13, 14, 12, 9, 8, 7], 5: [11, 4, 5, 7], 6: [11, 13, 9, 10, 7], 7: [11, 12, 14, 13, 9, 10, 7], 8: [11, 13, 14, 12, 9, 10, 7], 9: [11, 12, 14, 6, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0ef86b5b0>, {0: [11, 12, 9, 8], 1: [11, 13, 9, 8], 2: [11, 12, 14, 13, 9, 8], 3: [11, 13, 14, 12, 9, 8], 4: [11, 12, 9, 10, 7, 8], 5: [11, 4, 5, 7, 8], 6: [11, 13, 9, 10, 7, 8], 7: [11, 12, 14, 13, 9, 10, 7, 8], 8: [11, 13, 14, 12, 9, 10, 7, 8], 9: [11, 12, 14, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0ef86b640>, {0: [11, 12, 9], 1: [11, 13, 9], 2: [11, 12, 14, 13, 9], 3: [11, 13, 14, 12, 9], 4: [11, 12, 14, 6, 10, 9], 5: [11, 13, 14, 6, 10, 9], 6: [11, 4, 5, 7, 8, 9], 7: [11, 4, 5, 7, 10, 9], 8: [11, 4, 5, 6, 10, 9], 9: [11, 12, 14, 6, 5, 7, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0ef86b490>, {0: [11, 12, 9, 10], 1: [11, 13, 9, 10], 2: [11, 12, 14, 13, 9, 10], 3: [11, 13, 14, 12, 9, 10], 4: [11, 12, 9, 8, 7, 10], 5: [11, 12, 14, 6, 10], 6: [11, 13, 14, 6, 10], 7: [11, 13, 9, 8, 7, 10], 8: [11, 12, 14, 13, 9, 8, 7, 10], 9: [11, 12, 9, 13, 14, 6, 10]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0ef86b400>, {0: [11, 12], 1: [11, 13, 14, 12], 2: [11, 13, 9, 12], 3: [11, 13, 14, 6, 10, 9, 12], 4: [11, 4, 5, 7, 8, 9, 12], 5: [11, 13, 9, 10, 6, 14, 12], 6: [11, 4, 5, 7, 8, 9, 13, 14, 12], 7: [11, 4, 5, 7, 10, 9, 12], 8: [11, 4, 5, 6, 10, 9, 12], 9: [11, 4, 5, 6, 14, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0ef86b370>, {0: [11, 13], 1: [11, 12, 14, 13], 2: [11, 12, 9, 13], 3: [11, 12, 9, 10, 6, 14, 13], 4: [11, 12, 14, 6, 10, 9, 13], 5: [11, 4, 5, 7, 8, 9, 13], 6: [11, 4, 5, 7, 8, 9, 12, 14, 13], 7: [11, 4, 5, 7, 10, 9, 13], 8: [11, 4, 5, 6, 14, 13], 9: [11, 4, 5, 6, 10, 9, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0ef86b2e0>, {0: [11, 12, 14], 1: [11, 13, 14], 2: [11, 12, 9, 13, 14], 3: [11, 13, 9, 12, 14], 4: [11, 12, 9, 10, 6, 14], 5: [11, 13, 9, 10, 6, 14], 6: [11, 4, 5, 7, 8, 9, 13, 14], 7: [11, 4, 5, 7, 8, 9, 12, 14], 8: [11, 4, 5, 6, 14], 9: [11, 4, 5, 7, 10, 9, 13, 14]})}), 12: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f2900ee0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2900f70>, {0: [12, 9, 8, 1], 1: [12, 14, 13, 9, 8, 1], 2: [12, 11, 4, 2, 1], 3: [12, 9, 8, 7, 5, 4, 2, 1], 4: [12, 11, 13, 9, 8, 1], 5: [12, 14, 13, 11, 4, 2, 1], 6: [12, 9, 13, 11, 4, 2, 1], 7: [12, 14, 13, 9, 8, 7, 5, 4, 2, 1], 8: [12, 14, 6, 3, 1], 9: [12, 11, 4, 2, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2900dc0>, {0: [12, 11, 4, 2], 1: [12, 9, 8, 7, 5, 4, 2], 2: [12, 14, 13, 11, 4, 2], 3: [12, 9, 13, 11, 4, 2], 4: [12, 14, 13, 9, 8, 7, 5, 4, 2], 5: [12, 9, 10, 7, 5, 4, 2], 6: [12, 9, 8, 1, 2], 7: [12, 14, 6, 3, 2], 8: [12, 9, 10, 6, 3, 2], 9: [12, 14, 6, 5, 4, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2900e50>, {0: [12, 14, 6, 3], 1: [12, 9, 10, 6, 3], 2: [12, 11, 4, 2, 3], 3: [12, 14, 13, 9, 10, 6, 3], 4: [12, 9, 13, 14, 6, 3], 5: [12, 9, 8, 7, 5, 4, 2, 3], 6: [12, 14, 13, 11, 4, 2, 3], 7: [12, 9, 13, 11, 4, 2, 3], 8: [12, 14, 13, 9, 8, 7, 5, 4, 2, 3], 9: [12, 9, 10, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f29004c0>, {0: [12, 11, 4], 1: [12, 9, 8, 7, 5, 4], 2: [12, 14, 13, 11, 4], 3: [12, 9, 13, 11, 4], 4: [12, 14, 13, 9, 8, 7, 5, 4], 5: [12, 9, 10, 7, 5, 4], 6: [12, 14, 6, 5, 4], 7: [12, 9, 10, 6, 5, 4], 8: [12, 14, 13, 9, 10, 7, 5, 4], 9: [12, 11, 13, 9, 8, 7, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2900160>, {0: [12, 9, 8, 7, 5], 1: [12, 14, 13, 9, 8, 7, 5], 2: [12, 9, 10, 7, 5], 3: [12, 11, 4, 5], 4: [12, 14, 6, 5], 5: [12, 9, 10, 6, 5], 6: [12, 14, 13, 9, 10, 7, 5], 7: [12, 14, 13, 11, 4, 5], 8: [12, 9, 13, 14, 6, 5], 9: [12, 11, 13, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2900c10>, {0: [12, 14, 6], 1: [12, 9, 10, 6], 2: [12, 14, 13, 9, 10, 6], 3: [12, 9, 13, 14, 6], 4: [12, 11, 13, 14, 6], 5: [12, 11, 13, 9, 10, 6], 6: [12, 9, 8, 7, 5, 6], 7: [12, 14, 13, 9, 8, 7, 5, 6], 8: [12, 9, 10, 7, 5, 6], 9: [12, 9, 8, 7, 10, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2900ca0>, {0: [12, 9, 8, 7], 1: [12, 14, 13, 9, 8, 7], 2: [12, 9, 10, 7], 3: [12, 14, 13, 9, 10, 7], 4: [12, 11, 13, 9, 8, 7], 5: [12, 11, 4, 5, 7], 6: [12, 11, 13, 9, 10, 7], 7: [12, 14, 6, 5, 7], 8: [12, 9, 10, 6, 5, 7], 9: [12, 14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f29003a0>, {0: [12, 9, 8], 1: [12, 14, 13, 9, 8], 2: [12, 11, 13, 9, 8], 3: [12, 9, 10, 7, 8], 4: [12, 14, 13, 9, 10, 7, 8], 5: [12, 11, 4, 5, 7, 8], 6: [12, 11, 13, 9, 10, 7, 8], 7: [12, 14, 6, 5, 7, 8], 8: [12, 9, 10, 6, 5, 7, 8], 9: [12, 14, 6, 10, 9, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901000>, {0: [12, 9], 1: [12, 14, 13, 9], 2: [12, 11, 13, 9], 3: [12, 14, 6, 10, 9], 4: [12, 11, 13, 14, 6, 10, 9], 5: [12, 11, 4, 5, 7, 8, 9], 6: [12, 14, 6, 5, 7, 8, 9], 7: [12, 14, 13, 11, 4, 5, 7, 8, 9], 8: [12, 11, 4, 5, 7, 10, 9], 9: [12, 14, 6, 10, 7, 8, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2900d30>, {0: [12, 9, 10], 1: [12, 14, 13, 9, 10], 2: [12, 11, 13, 9, 10], 3: [12, 9, 8, 7, 10], 4: [12, 14, 6, 10], 5: [12, 14, 13, 9, 8, 7, 10], 6: [12, 9, 13, 14, 6, 10], 7: [12, 11, 13, 14, 6, 10], 8: [12, 11, 13, 9, 8, 7, 10], 9: [12, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2900310>, {0: [12, 11], 1: [12, 14, 13, 11], 2: [12, 9, 13, 11], 3: [12, 9, 10, 6, 14, 13, 11], 4: [12, 14, 6, 10, 9, 13, 11], 5: [12, 9, 8, 7, 5, 4, 11], 6: [12, 14, 13, 9, 8, 7, 5, 4, 11], 7: [12, 9, 10, 7, 5, 4, 11], 8: [12, 9, 10, 6, 5, 4, 11], 9: [12, 14, 6, 5, 4, 11]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901090>, {0: [12, 14, 13], 1: [12, 9, 13], 2: [12, 11, 13], 3: [12, 9, 10, 6, 14, 13], 4: [12, 14, 6, 10, 9, 13], 5: [12, 11, 4, 5, 7, 8, 9, 13], 6: [12, 9, 8, 7, 5, 6, 14, 13], 7: [12, 14, 6, 5, 7, 8, 9, 13], 8: [12, 9, 8, 7, 5, 4, 11, 13], 9: [12, 9, 10, 7, 5, 6, 14, 13]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901120>, {0: [12, 14], 1: [12, 9, 13, 14], 2: [12, 11, 13, 14], 3: [12, 9, 10, 6, 14], 4: [12, 11, 13, 9, 10, 6, 14], 5: [12, 9, 8, 7, 5, 6, 14], 6: [12, 11, 4, 5, 7, 8, 9, 13, 14], 7: [12, 9, 8, 7, 5, 4, 11, 13, 14], 8: [12, 9, 10, 7, 5, 6, 14], 9: [12, 9, 8, 7, 10, 6, 14]})}), 13: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f29011b0>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901240>, {0: [13, 9, 8, 1], 1: [13, 14, 12, 9, 8, 1], 2: [13, 11, 4, 2, 1], 3: [13, 9, 8, 7, 5, 4, 2, 1], 4: [13, 14, 12, 11, 4, 2, 1], 5: [13, 11, 12, 9, 8, 1], 6: [13, 9, 12, 11, 4, 2, 1], 7: [13, 14, 6, 3, 1], 8: [13, 14, 12, 9, 8, 7, 5, 4, 2, 1], 9: [13, 9, 10, 6, 3, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f29012d0>, {0: [13, 11, 4, 2], 1: [13, 14, 12, 11, 4, 2], 2: [13, 9, 8, 7, 5, 4, 2], 3: [13, 9, 12, 11, 4, 2], 4: [13, 14, 12, 9, 8, 7, 5, 4, 2], 5: [13, 14, 6, 3, 2], 6: [13, 9, 10, 7, 5, 4, 2], 7: [13, 9, 8, 1, 2], 8: [13, 14, 6, 5, 4, 2], 9: [13, 9, 10, 6, 3, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901360>, {0: [13, 14, 6, 3], 1: [13, 9, 10, 6, 3], 2: [13, 11, 4, 2, 3], 3: [13, 14, 12, 9, 10, 6, 3], 4: [13, 9, 8, 7, 5, 4, 2, 3], 5: [13, 14, 12, 11, 4, 2, 3], 6: [13, 9, 12, 14, 6, 3], 7: [13, 9, 12, 11, 4, 2, 3], 8: [13, 14, 12, 9, 8, 7, 5, 4, 2, 3], 9: [13, 9, 10, 7, 5, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f29013f0>, {0: [13, 11, 4], 1: [13, 14, 12, 11, 4], 2: [13, 9, 8, 7, 5, 4], 3: [13, 9, 12, 11, 4], 4: [13, 14, 12, 9, 8, 7, 5, 4], 5: [13, 9, 10, 7, 5, 4], 6: [13, 14, 6, 5, 4], 7: [13, 9, 10, 6, 5, 4], 8: [13, 14, 12, 9, 10, 7, 5, 4], 9: [13, 11, 12, 9, 8, 7, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901480>, {0: [13, 9, 8, 7, 5], 1: [13, 14, 12, 9, 8, 7, 5], 2: [13, 9, 10, 7, 5], 3: [13, 14, 6, 5], 4: [13, 11, 4, 5], 5: [13, 9, 10, 6, 5], 6: [13, 14, 12, 9, 10, 7, 5], 7: [13, 14, 12, 11, 4, 5], 8: [13, 9, 12, 11, 4, 5], 9: [13, 11, 12, 9, 8, 7, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901510>, {0: [13, 14, 6], 1: [13, 9, 10, 6], 2: [13, 14, 12, 9, 10, 6], 3: [13, 9, 12, 14, 6], 4: [13, 11, 12, 14, 6], 5: [13, 11, 12, 9, 10, 6], 6: [13, 9, 8, 7, 5, 6], 7: [13, 14, 12, 9, 8, 7, 5, 6], 8: [13, 9, 10, 7, 5, 6], 9: [13, 9, 8, 7, 10, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f29015a0>, {0: [13, 9, 8, 7], 1: [13, 14, 12, 9, 8, 7], 2: [13, 9, 10, 7], 3: [13, 14, 12, 9, 10, 7], 4: [13, 11, 12, 9, 8, 7], 5: [13, 14, 6, 5, 7], 6: [13, 11, 12, 9, 10, 7], 7: [13, 9, 10, 6, 5, 7], 8: [13, 11, 4, 5, 7], 9: [13, 14, 12, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901630>, {0: [13, 9, 8], 1: [13, 14, 12, 9, 8], 2: [13, 11, 12, 9, 8], 3: [13, 9, 10, 7, 8], 4: [13, 14, 12, 9, 10, 7, 8], 5: [13, 14, 6, 5, 7, 8], 6: [13, 11, 12, 9, 10, 7, 8], 7: [13, 14, 6, 10, 9, 8], 8: [13, 11, 4, 5, 7, 8], 9: [13, 9, 10, 6, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f29016c0>, {0: [13, 9], 1: [13, 14, 12, 9], 2: [13, 11, 12, 9], 3: [13, 14, 6, 10, 9], 4: [13, 11, 12, 14, 6, 10, 9], 5: [13, 14, 6, 5, 7, 8, 9], 6: [13, 11, 4, 5, 7, 8, 9], 7: [13, 14, 12, 11, 4, 5, 7, 8, 9], 8: [13, 14, 6, 10, 7, 8, 9], 9: [13, 14, 6, 5, 7, 10, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901750>, {0: [13, 9, 10], 1: [13, 14, 12, 9, 10], 2: [13, 11, 12, 9, 10], 3: [13, 14, 6, 10], 4: [13, 9, 8, 7, 10], 5: [13, 14, 12, 9, 8, 7, 10], 6: [13, 9, 12, 14, 6, 10], 7: [13, 11, 12, 14, 6, 10], 8: [13, 11, 12, 9, 8, 7, 10], 9: [13, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f29017e0>, {0: [13, 11], 1: [13, 14, 12, 11], 2: [13, 9, 12, 11], 3: [13, 14, 6, 10, 9, 12, 11], 4: [13, 9, 10, 6, 14, 12, 11], 5: [13, 9, 8, 7, 5, 4, 11], 6: [13, 14, 12, 9, 8, 7, 5, 4, 11], 7: [13, 9, 10, 7, 5, 4, 11], 8: [13, 14, 6, 5, 4, 11], 9: [13, 9, 10, 6, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901870>, {0: [13, 14, 12], 1: [13, 9, 12], 2: [13, 11, 12], 3: [13, 14, 6, 10, 9, 12], 4: [13, 9, 10, 6, 14, 12], 5: [13, 14, 6, 5, 7, 8, 9, 12], 6: [13, 9, 8, 7, 5, 4, 11, 12], 7: [13, 11, 4, 5, 7, 8, 9, 12], 8: [13, 9, 8, 7, 5, 6, 14, 12], 9: [13, 14, 6, 10, 7, 8, 9, 12]}), 14: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901900>, {0: [13, 14], 1: [13, 9, 12, 14], 2: [13, 11, 12, 14], 3: [13, 9, 10, 6, 14], 4: [13, 11, 12, 9, 10, 6, 14], 5: [13, 9, 8, 7, 5, 6, 14], 6: [13, 9, 8, 7, 5, 4, 11, 12, 14], 7: [13, 11, 4, 5, 7, 8, 9, 12, 14], 8: [13, 9, 10, 7, 5, 6, 14], 9: [13, 9, 8, 7, 10, 6, 14]})}), 14: defaultdict(<function <lambda>.<locals>.<lambda> at 0x7fe0f2901990>, {1: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901a20>, {0: [14, 13, 9, 8, 1], 1: [14, 12, 9, 8, 1], 2: [14, 13, 11, 4, 2, 1], 3: [14, 12, 11, 4, 2, 1], 4: [14, 13, 9, 8, 7, 5, 4, 2, 1], 5: [14, 13, 11, 12, 9, 8, 1], 6: [14, 13, 9, 12, 11, 4, 2, 1], 7: [14, 6, 3, 1], 8: [14, 12, 9, 8, 7, 5, 4, 2, 1], 9: [14, 12, 11, 13, 9, 8, 1]}), 2: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901ab0>, {0: [14, 13, 11, 4, 2], 1: [14, 12, 11, 4, 2], 2: [14, 13, 9, 8, 7, 5, 4, 2], 3: [14, 12, 9, 8, 7, 5, 4, 2], 4: [14, 13, 9, 12, 11, 4, 2], 5: [14, 6, 3, 2], 6: [14, 12, 9, 13, 11, 4, 2], 7: [14, 6, 5, 4, 2], 8: [14, 13, 9, 10, 7, 5, 4, 2], 9: [14, 13, 9, 8, 1, 2]}), 3: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901b40>, {0: [14, 6, 3], 1: [14, 13, 9, 10, 6, 3], 2: [14, 12, 9, 10, 6, 3], 3: [14, 13, 11, 4, 2, 3], 4: [14, 12, 11, 4, 2, 3], 5: [14, 13, 9, 8, 7, 5, 4, 2, 3], 6: [14, 12, 9, 8, 7, 5, 4, 2, 3], 7: [14, 13, 9, 12, 11, 4, 2, 3], 8: [14, 6, 5, 4, 2, 3], 9: [14, 12, 9, 13, 11, 4, 2, 3]}), 4: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901bd0>, {0: [14, 13, 11, 4], 1: [14, 12, 11, 4], 2: [14, 13, 9, 8, 7, 5, 4], 3: [14, 12, 9, 8, 7, 5, 4], 4: [14, 13, 9, 12, 11, 4], 5: [14, 6, 5, 4], 6: [14, 12, 9, 13, 11, 4], 7: [14, 13, 9, 10, 7, 5, 4], 8: [14, 12, 9, 10, 7, 5, 4], 9: [14, 13, 9, 10, 6, 5, 4]}), 5: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901c60>, {0: [14, 13, 9, 8, 7, 5], 1: [14, 12, 9, 8, 7, 5], 2: [14, 6, 5], 3: [14, 13, 9, 10, 7, 5], 4: [14, 12, 9, 10, 7, 5], 5: [14, 13, 11, 4, 5], 6: [14, 12, 11, 4, 5], 7: [14, 13, 9, 10, 6, 5], 8: [14, 12, 9, 10, 6, 5], 9: [14, 13, 9, 12, 11, 4, 5]}), 6: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901cf0>, {0: [14, 6], 1: [14, 13, 9, 10, 6], 2: [14, 12, 9, 10, 6], 3: [14, 13, 11, 12, 9, 10, 6], 4: [14, 13, 9, 8, 7, 5, 6], 5: [14, 12, 11, 13, 9, 10, 6], 6: [14, 12, 9, 8, 7, 5, 6], 7: [14, 13, 9, 10, 7, 5, 6], 8: [14, 13, 9, 8, 7, 10, 6], 9: [14, 12, 9, 10, 7, 5, 6]}), 7: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901d80>, {0: [14, 13, 9, 8, 7], 1: [14, 12, 9, 8, 7], 2: [14, 13, 9, 10, 7], 3: [14, 12, 9, 10, 7], 4: [14, 13, 11, 12, 9, 8, 7], 5: [14, 12, 11, 13, 9, 8, 7], 6: [14, 6, 5, 7], 7: [14, 13, 11, 12, 9, 10, 7], 8: [14, 13, 9, 10, 6, 5, 7], 9: [14, 13, 11, 4, 5, 7]}), 8: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901e10>, {0: [14, 13, 9, 8], 1: [14, 12, 9, 8], 2: [14, 13, 11, 12, 9, 8], 3: [14, 12, 11, 13, 9, 8], 4: [14, 13, 9, 10, 7, 8], 5: [14, 12, 9, 10, 7, 8], 6: [14, 6, 5, 7, 8], 7: [14, 6, 10, 9, 8], 8: [14, 13, 11, 12, 9, 10, 7, 8], 9: [14, 13, 11, 4, 5, 7, 8]}), 9: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901ea0>, {0: [14, 13, 9], 1: [14, 12, 9], 2: [14, 13, 11, 12, 9], 3: [14, 12, 11, 13, 9], 4: [14, 6, 10, 9], 5: [14, 6, 5, 7, 8, 9], 6: [14, 13, 11, 4, 5, 7, 8, 9], 7: [14, 12, 11, 4, 5, 7, 8, 9], 8: [14, 6, 10, 7, 8, 9], 9: [14, 6, 5, 7, 10, 9]}), 10: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901f30>, {0: [14, 13, 9, 10], 1: [14, 12, 9, 10], 2: [14, 13, 11, 12, 9, 10], 3: [14, 12, 11, 13, 9, 10], 4: [14, 6, 10], 5: [14, 13, 9, 8, 7, 10], 6: [14, 12, 9, 8, 7, 10], 7: [14, 13, 11, 12, 9, 8, 7, 10], 8: [14, 12, 11, 13, 9, 8, 7, 10], 9: [14, 13, 9, 8, 7, 5, 6, 10]}), 11: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2901fc0>, {0: [14, 13, 11], 1: [14, 12, 11], 2: [14, 13, 9, 12, 11], 3: [14, 12, 9, 13, 11], 4: [14, 6, 10, 9, 12, 11], 5: [14, 6, 10, 9, 13, 11], 6: [14, 13, 9, 8, 7, 5, 4, 11], 7: [14, 12, 9, 8, 7, 5, 4, 11], 8: [14, 6, 5, 4, 11], 9: [14, 13, 9, 10, 7, 5, 4, 11]}), 12: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f2902050>, {0: [14, 12], 1: [14, 13, 9, 12], 2: [14, 13, 11, 12], 3: [14, 6, 10, 9, 12], 4: [14, 6, 10, 9, 13, 11, 12], 5: [14, 6, 5, 7, 8, 9, 12], 6: [14, 13, 9, 8, 7, 5, 4, 11, 12], 7: [14, 13, 11, 4, 5, 7, 8, 9, 12], 8: [14, 6, 10, 7, 8, 9, 12], 9: [14, 6, 5, 7, 10, 9, 12]}), 13: defaultdict(<function <lambda>.<locals>.<lambda>.<locals>.<lambda> at 0x7fe0f29020e0>, {0: [14, 13], 1: [14, 12, 9, 13], 2: [14, 12, 11, 13], 3: [14, 6, 10, 9, 13], 4: [14, 6, 10, 9, 12, 11, 13], 5: [14, 6, 5, 7, 8, 9, 13], 6: [14, 12, 11, 4, 5, 7, 8, 9, 13], 7: [14, 12, 9, 8, 7, 5, 4, 11, 13], 8: [14, 6, 10, 7, 8, 9, 13], 9: [14, 6, 5, 7, 10, 9, 13]})})})
/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/keras/engine/base_layer_v1.py:1694: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  warnings.warn('`layer.apply` is deprecated and '
Starting agent_0
Starting agent_1
Starting agent_2
stored successfully!
Episode Count =  4
Blocking Probability =  0.447
Mean Resource Utilization = 0.3222968181818182
----
Episode Count =  5
Blocking Probability =  0.454
Mean Resource Utilization = 0.33481431818181817
----
Episode Count =  6
Blocking Probability =  0.417
Mean Resource Utilization = 0.3136111363636363
----
Episode Count =  7
Blocking Probability =  0.425
Mean Resource Utilization = 0.3167420454545455
----
Episode Count =  8
Blocking Probability =  0.461
Mean Resource Utilization = 0.3251890909090909
----
Episode Count =  9
Blocking Probability =  0.468
Mean Resource Utilization = 0.3044440909090909
----
Episode Count =  10
Blocking Probability =  0.452
Mean Resource Utilization = 0.32431431818181816
----
Episode Count =  11
Blocking Probability =  0.464
Mean Resource Utilization = 0.3288047727272727
----
Episode Count =  12
Blocking Probability =  0.468
Mean Resource Utilization = 0.33593181818181816
----
Episode Count =  13
Blocking Probability =  0.429
Mean Resource Utilization = 0.32717727272727276
----
Episode Count =  14
Blocking Probability =  0.444
Mean Resource Utilization = 0.31269136363636363
----
Episode Count =  15
Blocking Probability =  0.422
Mean Resource Utilization = 0.3234081818181819
----
Episode Count =  16
Blocking Probability =  0.426
Mean Resource Utilization = 0.31324772727272726
----
Episode Count =  17
Blocking Probability =  0.444
Mean Resource Utilization = 0.31446818181818187
----
Episode Count =  18
Blocking Probability =  0.428
Mean Resource Utilization = 0.3075115909090909
----
Episode Count =  19
Blocking Probability =  0.445
Mean Resource Utilization = 0.31589181818181816
----
Episode Count =  20
Blocking Probability =  0.459
Mean Resource Utilization = 0.32145954545454547
----
Episode Count =  21
Blocking Probability =  0.456
Mean Resource Utilization = 0.3174259090909091
----
Episode Count =  22
Blocking Probability =  0.435
Mean Resource Utilization = 0.32077431818181823
----
Episode Count =  23
Blocking Probability =  0.45
Mean Resource Utilization = 0.3358404545454546
----
Episode Count =  24
Blocking Probability =  0.436
Mean Resource Utilization = 0.3173488636363636
----
Episode Count =  25
Blocking Probability =  0.458
Mean Resource Utilization = 0.33265159090909097
----
Episode Count =  26
Blocking Probability =  0.435
Mean Resource Utilization = 0.33021136363636366
----
Episode Count =  27
Blocking Probability =  0.409
Mean Resource Utilization = 0.3275181818181818
----
Episode Count =  28
Blocking Probability =  0.436
Mean Resource Utilization = 0.3169786363636364
----
Episode Count =  29
Blocking Probability =  0.419
Mean Resource Utilization = 0.31119204545454543
----
Episode Count =  30
Blocking Probability =  0.434
Mean Resource Utilization = 0.33677454545454544
----
Episode Count =  31
Blocking Probability =  0.44
Mean Resource Utilization = 0.33581863636363635
----
Episode Count =  32
Blocking Probability =  0.397
Mean Resource Utilization = 0.32373477272727275
----
Episode Count =  33
Blocking Probability =  0.435
Mean Resource Utilization = 0.3365325
----
Episode Count =  34
Blocking Probability =  0.444
Mean Resource Utilization = 0.33748977272727276
----
Episode Count =  35
Blocking Probability =  0.402
Mean Resource Utilization = 0.31618022727272727
----
Episode Count =  36
Blocking Probability =  0.448
Mean Resource Utilization = 0.3305263636363636
----
Episode Count =  37
Blocking Probability =  0.419
Mean Resource Utilization = 0.32565681818181813
----
Episode Count =  38
Blocking Probability =  0.443
Mean Resource Utilization = 0.3329747727272727
----
Episode Count =  39
Blocking Probability =  0.417
Mean Resource Utilization = 0.3372531818181818
----
Episode Count =  40
Blocking Probability =  0.437
Mean Resource Utilization = 0.3109656818181818
----
Episode Count =  41
Blocking Probability =  0.421
Mean Resource Utilization = 0.31022795454545454
----
Episode Count =  42
Blocking Probability =  0.428
Mean Resource Utilization = 0.32650022727272726
----
Episode Count =  43
Blocking Probability =  0.463
Mean Resource Utilization = 0.35103477272727274
----
Episode Count =  44
Blocking Probability =  0.432
Mean Resource Utilization = 0.32500090909090906
----
Episode Count =  45
Blocking Probability =  0.4
Mean Resource Utilization = 0.3252688636363636
----
Episode Count =  46
Blocking Probability =  0.411
Mean Resource Utilization = 0.32522249999999997
----
Episode Count =  47
Blocking Probability =  0.4
Mean Resource Utilization = 0.34026204545454547
----
Episode Count =  48
Blocking Probability =  0.388
Mean Resource Utilization = 0.3346002272727273
----
Episode Count =  49
Blocking Probability =  0.409
Mean Resource Utilization = 0.33572795454545457
----
Episode Count =  50
Blocking Probability =  0.403
Mean Resource Utilization = 0.33750545454545455
----
Episode Count =  51
Blocking Probability =  0.385
Mean Resource Utilization = 0.3327886363636363
----
Episode Count =  52
Blocking Probability =  0.414
Mean Resource Utilization = 0.3254795454545455
----
Episode Count =  53
Blocking Probability =  0.399
Mean Resource Utilization = 0.3420102272727273
----
Episode Count =  54
Blocking Probability =  0.399
Mean Resource Utilization = 0.3403288636363636
----
Episode Count =  55
Blocking Probability =  0.376
Mean Resource Utilization = 0.33070022727272724
----
Episode Count =  56
Blocking Probability =  0.403
Mean Resource Utilization = 0.34901659090909093
----
Episode Count =  57
Blocking Probability =  0.395
Mean Resource Utilization = 0.3266965909090909
----
Episode Count =  58
Blocking Probability =  0.401
Mean Resource Utilization = 0.3531497727272727
----
Episode Count =  59
Blocking Probability =  0.37
Mean Resource Utilization = 0.3548781818181818
----
Episode Count =  60
Blocking Probability =  0.389
Mean Resource Utilization = 0.3504715909090909
----
Episode Count =  61
Blocking Probability =  0.36
Mean Resource Utilization = 0.3333790909090909
----
Episode Count =  62
Blocking Probability =  0.369
Mean Resource Utilization = 0.3361615909090909
----
Episode Count =  63
Blocking Probability =  0.344
Mean Resource Utilization = 0.3282640909090909
----
Episode Count =  64
Blocking Probability =  0.344
Mean Resource Utilization = 0.34720909090909097
----
Episode Count =  65
Blocking Probability =  0.376
Mean Resource Utilization = 0.33981340909090907
----
Episode Count =  66
Blocking Probability =  0.343
Mean Resource Utilization = 0.33135886363636363
----
Episode Count =  67
Blocking Probability =  0.379
Mean Resource Utilization = 0.3402886363636363
----
Episode Count =  68
Blocking Probability =  0.346
Mean Resource Utilization = 0.34472727272727277
----
Episode Count =  69
Blocking Probability =  0.327
Mean Resource Utilization = 0.33406090909090913
----
Episode Count =  70
Blocking Probability =  0.339
Mean Resource Utilization = 0.3411981818181818
----
Episode Count =  71
Blocking Probability =  0.346
Mean Resource Utilization = 0.34394454545454545
----
Episode Count =  72
Blocking Probability =  0.355
Mean Resource Utilization = 0.358871590909091
----
Episode Count =  73
Blocking Probability =  0.328
Mean Resource Utilization = 0.33504954545454546
----
Episode Count =  74
Blocking Probability =  0.361
Mean Resource Utilization = 0.3494570454545454
----
Episode Count =  75
Blocking Probability =  0.34
Mean Resource Utilization = 0.34972227272727274
----
Episode Count =  76
Blocking Probability =  0.344
Mean Resource Utilization = 0.35468181818181815
----
Episode Count =  77
Blocking Probability =  0.302
Mean Resource Utilization = 0.3302522727272727
----
Episode Count =  78
Blocking Probability =  0.319
Mean Resource Utilization = 0.3498443181818182
----
Episode Count =  79
Blocking Probability =  0.342
Mean Resource Utilization = 0.3458529545454545
----
Episode Count =  80
Blocking Probability =  0.303
Mean Resource Utilization = 0.34452954545454545
----
Episode Count =  81
Blocking Probability =  0.314
Mean Resource Utilization = 0.3352234090909091
----
Episode Count =  82
Blocking Probability =  0.321
Mean Resource Utilization = 0.3459940909090909
----
Episode Count =  83
Blocking Probability =  0.332
Mean Resource Utilization = 0.3550315909090909
----
Episode Count =  84
Blocking Probability =  0.293
Mean Resource Utilization = 0.3496875
----
Episode Count =  85
Blocking Probability =  0.298
Mean Resource Utilization = 0.3372722727272728
----
Episode Count =  86
Blocking Probability =  0.299
Mean Resource Utilization = 0.3292704545454545
----
Episode Count =  87
Blocking Probability =  0.28
Mean Resource Utilization = 0.3437706818181818
----
Episode Count =  88
Blocking Probability =  0.291
Mean Resource Utilization = 0.33263590909090907
----
Episode Count =  89
Blocking Probability =  0.286
Mean Resource Utilization = 0.3233515909090909
----
Episode Count =  90
Blocking Probability =  0.312
Mean Resource Utilization = 0.36017795454545454
----
Episode Count =  91
Blocking Probability =  0.321
Mean Resource Utilization = 0.3527195454545455
----
Episode Count =  92
Blocking Probability =  0.29
Mean Resource Utilization = 0.3406977272727273
----
Episode Count =  93
Blocking Probability =  0.273
Mean Resource Utilization = 0.3408804545454545
----
Episode Count =  94
Blocking Probability =  0.297
Mean Resource Utilization = 0.3421684090909091
----
Episode Count =  95
Blocking Probability =  0.319
Mean Resource Utilization = 0.34323000000000004
----
Episode Count =  96
Blocking Probability =  0.281
Mean Resource Utilization = 0.3454336363636364
----
Episode Count =  97
Blocking Probability =  0.316
Mean Resource Utilization = 0.3368161363636364
----
Episode Count =  98
Blocking Probability =  0.304
Mean Resource Utilization = 0.34484863636363633
----
Episode Count =  99
Blocking Probability =  0.299
Mean Resource Utilization = 0.3404515909090909
----
Episode Count =  100
Blocking Probability =  0.312
Mean Resource Utilization = 0.3444579545454545
----
Model Saved
stored successfully!
Episode Count =  101
Blocking Probability =  0.298
Mean Resource Utilization = 0.34150840909090907
----
Episode Count =  102
Blocking Probability =  0.298
Mean Resource Utilization = 0.3338515909090909
----
Episode Count =  103
Blocking Probability =  0.281
Mean Resource Utilization = 0.34429977272727275
----
Episode Count =  104
Blocking Probability =  0.298
Mean Resource Utilization = 0.3298418181818182
----
Episode Count =  105
Blocking Probability =  0.27
Mean Resource Utilization = 0.3375722727272727
----
Episode Count =  106
Blocking Probability =  0.305
Mean Resource Utilization = 0.34217386363636365
----
Episode Count =  107
Blocking Probability =  0.275
Mean Resource Utilization = 0.3481854545454545
----
Episode Count =  108
Blocking Probability =  0.267
Mean Resource Utilization = 0.34496113636363634
----
Episode Count =  109
Blocking Probability =  0.314
Mean Resource Utilization = 0.32628409090909094
----
Episode Count =  110
Blocking Probability =  0.3
Mean Resource Utilization = 0.33221999999999996
----
Episode Count =  111
Blocking Probability =  0.268
Mean Resource Utilization = 0.3547615909090908
----
Episode Count =  112
Blocking Probability =  0.274
Mean Resource Utilization = 0.3410325
----
Episode Count =  113
Blocking Probability =  0.274
Mean Resource Utilization = 0.3356781818181818
----
Episode Count =  114
Blocking Probability =  0.267
Mean Resource Utilization = 0.3358288636363636
----
Episode Count =  115
Blocking Probability =  0.282
Mean Resource Utilization = 0.3421984090909091
----
Episode Count =  116
Blocking Probability =  0.253
Mean Resource Utilization = 0.35082613636363635
----
Episode Count =  117
Blocking Probability =  0.264
Mean Resource Utilization = 0.33827795454545456
----
Episode Count =  118
Blocking Probability =  0.297
Mean Resource Utilization = 0.347655
----
Episode Count =  119
Blocking Probability =  0.276
Mean Resource Utilization = 0.3464502272727273
----
Episode Count =  120
Blocking Probability =  0.28
Mean Resource Utilization = 0.34647954545454546
----
Episode Count =  121
Blocking Probability =  0.253
Mean Resource Utilization = 0.3259615909090909
----
Episode Count =  122
Blocking Probability =  0.264
Mean Resource Utilization = 0.3241984090909091
----
Episode Count =  123
Blocking Probability =  0.263
Mean Resource Utilization = 0.34112590909090906
----
Episode Count =  124
Blocking Probability =  0.282
Mean Resource Utilization = 0.34425204545454546
----
Episode Count =  125
Blocking Probability =  0.246
Mean Resource Utilization = 0.34248886363636366
----
Episode Count =  126
Blocking Probability =  0.317
Mean Resource Utilization = 0.3375170454545454
----
Episode Count =  127
Blocking Probability =  0.257
Mean Resource Utilization = 0.35214204545454547
----
Episode Count =  128
Blocking Probability =  0.301
Mean Resource Utilization = 0.3438620454545454
----
Episode Count =  129
Blocking Probability =  0.275
Mean Resource Utilization = 0.33360136363636367
----
Episode Count =  130
Blocking Probability =  0.29
Mean Resource Utilization = 0.33448227272727277
----
Episode Count =  131
Blocking Probability =  0.257
Mean Resource Utilization = 0.33832022727272726
----
Episode Count =  132
Blocking Probability =  0.265
Mean Resource Utilization = 0.34297022727272725
----
Episode Count =  133
Blocking Probability =  0.277
Mean Resource Utilization = 0.34845340909090905
----
Episode Count =  134
Blocking Probability =  0.259
Mean Resource Utilization = 0.31762704545454545
----
Episode Count =  135
Blocking Probability =  0.27
Mean Resource Utilization = 0.3383631818181818
----
Episode Count =  136
Blocking Probability =  0.278
Mean Resource Utilization = 0.33241909090909094
----
Episode Count =  137
Blocking Probability =  0.277
Mean Resource Utilization = 0.3276
----
Episode Count =  138
Blocking Probability =  0.277
Mean Resource Utilization = 0.3285013636363636
----
Episode Count =  139
Blocking Probability =  0.291
Mean Resource Utilization = 0.33783681818181815
----
Episode Count =  140
Blocking Probability =  0.264
Mean Resource Utilization = 0.3364002272727272
----
Episode Count =  141
Blocking Probability =  0.256
Mean Resource Utilization = 0.3518815909090909
----
Episode Count =  142
Blocking Probability =  0.28
Mean Resource Utilization = 0.33055090909090906
----
Episode Count =  143
Blocking Probability =  0.283
Mean Resource Utilization = 0.3549115909090909
----
Episode Count =  144
Blocking Probability =  0.29
Mean Resource Utilization = 0.3289275
----
Episode Count =  145
Blocking Probability =  0.293
Mean Resource Utilization = 0.33689795454545457
----
Episode Count =  146
Blocking Probability =  0.239
Mean Resource Utilization = 0.3398495454545455
----
Episode Count =  147
Blocking Probability =  0.276
Mean Resource Utilization = 0.33354545454545453
----
Episode Count =  148
Blocking Probability =  0.246
Mean Resource Utilization = 0.33354136363636366
----
Episode Count =  149
Blocking Probability =  0.293
Mean Resource Utilization = 0.33999613636363635
----
Episode Count =  150
Blocking Probability =  0.266
Mean Resource Utilization = 0.35499204545454544
----
Episode Count =  151
Blocking Probability =  0.266
Mean Resource Utilization = 0.33581795454545454
----
Episode Count =  152
Blocking Probability =  0.282
Mean Resource Utilization = 0.33433636363636365
----
Episode Count =  153
Blocking Probability =  0.255
Mean Resource Utilization = 0.34574659090909093
----
Episode Count =  154
Blocking Probability =  0.289
Mean Resource Utilization = 0.3444334090909091
----
Episode Count =  155
Blocking Probability =  0.258
Mean Resource Utilization = 0.32906863636363637
----
Episode Count =  156
Blocking Probability =  0.288
Mean Resource Utilization = 0.3538343181818182
----
Episode Count =  157
Blocking Probability =  0.29
Mean Resource Utilization = 0.3420940909090909
----
Episode Count =  158
Blocking Probability =  0.269
Mean Resource Utilization = 0.328395
----
Episode Count =  159
Blocking Probability =  0.265
Mean Resource Utilization = 0.3417306818181818
----
Episode Count =  160
Blocking Probability =  0.283
Mean Resource Utilization = 0.34889045454545453
----
Episode Count =  161
Blocking Probability =  0.239
Mean Resource Utilization = 0.33613159090909084
----
Episode Count =  162
Blocking Probability =  0.254
Mean Resource Utilization = 0.33096000000000003
----
Episode Count =  163
Blocking Probability =  0.282
Mean Resource Utilization = 0.34818068181818185
----
Episode Count =  164
Blocking Probability =  0.247
Mean Resource Utilization = 0.3418677272727273
----
Episode Count =  165
Blocking Probability =  0.268
Mean Resource Utilization = 0.3386802272727273
----
Episode Count =  166
Blocking Probability =  0.286
Mean Resource Utilization = 0.3338318181818182
----
Episode Count =  167
Blocking Probability =  0.274
Mean Resource Utilization = 0.3435347727272727
----
Episode Count =  168
Blocking Probability =  0.275
Mean Resource Utilization = 0.3288709090909091
----
Episode Count =  169
Blocking Probability =  0.28
Mean Resource Utilization = 0.3429102272727273
----
Episode Count =  170
Blocking Probability =  0.258
Mean Resource Utilization = 0.33795409090909095
----
Episode Count =  171
Blocking Probability =  0.269
Mean Resource Utilization = 0.32991545454545457
----
Episode Count =  172
Blocking Probability =  0.269
Mean Resource Utilization = 0.32452363636363635
----
Episode Count =  173
Blocking Probability =  0.261
Mean Resource Utilization = 0.3265002272727273
----
Episode Count =  174
Blocking Probability =  0.241
Mean Resource Utilization = 0.3348940909090909
----
Episode Count =  175
Blocking Probability =  0.304
Mean Resource Utilization = 0.35072522727272726
----
Episode Count =  176
Blocking Probability =  0.269
Mean Resource Utilization = 0.3162075
----
Episode Count =  177
Blocking Probability =  0.243
Mean Resource Utilization = 0.3167986363636364
----
Episode Count =  178
Blocking Probability =  0.297
Mean Resource Utilization = 0.32995295454545454
----
Episode Count =  179
Blocking Probability =  0.263
Mean Resource Utilization = 0.3402
----
Episode Count =  180
Blocking Probability =  0.261
Mean Resource Utilization = 0.3311134090909091
----
Episode Count =  181
Blocking Probability =  0.259
Mean Resource Utilization = 0.34436795454545455
----
Episode Count =  182
Blocking Probability =  0.294
Mean Resource Utilization = 0.3514936363636364
----
Episode Count =  183
Blocking Probability =  0.277
Mean Resource Utilization = 0.33958636363636363
----
Episode Count =  184
Blocking Probability =  0.256
Mean Resource Utilization = 0.3411265909090909
----
Episode Count =  185
Blocking Probability =  0.245
Mean Resource Utilization = 0.3420456818181818
----
Episode Count =  186
Blocking Probability =  0.261
Mean Resource Utilization = 0.3401168181818182
----
Episode Count =  187
Blocking Probability =  0.27
Mean Resource Utilization = 0.34840840909090914
----
Episode Count =  188
Blocking Probability =  0.277
Mean Resource Utilization = 0.3464284090909091
----
Episode Count =  189
Blocking Probability =  0.277
Mean Resource Utilization = 0.32218227272727273
----
Episode Count =  190
Blocking Probability =  0.267
Mean Resource Utilization = 0.3474245454545455
----
Episode Count =  191
Blocking Probability =  0.287
Mean Resource Utilization = 0.3417197727272727
----
Episode Count =  192
Blocking Probability =  0.258
Mean Resource Utilization = 0.35003999999999996
----
Episode Count =  193
Blocking Probability =  0.261
Mean Resource Utilization = 0.3498552272727273
----
Episode Count =  194
Blocking Probability =  0.251
Mean Resource Utilization = 0.33721909090909086
----
Episode Count =  195
Blocking Probability =  0.26
Mean Resource Utilization = 0.3395297727272727
----
Episode Count =  196
Blocking Probability =  0.251
Mean Resource Utilization = 0.33482386363636363
----
Episode Count =  197
Blocking Probability =  0.29
Mean Resource Utilization = 0.3354490909090909
----
Episode Count =  198
Blocking Probability =  0.264
Mean Resource Utilization = 0.34481727272727275
----
Episode Count =  199
Blocking Probability =  0.249
Mean Resource Utilization = 0.3240886363636364
----
Episode Count =  200
Blocking Probability =  0.249
Mean Resource Utilization = 0.3376179545454545
----
Model Saved
stored successfully!
Episode Count =  201
Blocking Probability =  0.286
Mean Resource Utilization = 0.3323168181818182
----
Episode Count =  202
Blocking Probability =  0.274
Mean Resource Utilization = 0.34946727272727274
----
Episode Count =  203
Blocking Probability =  0.247
Mean Resource Utilization = 0.3425140909090909
----
Episode Count =  204
Blocking Probability =  0.265
Mean Resource Utilization = 0.34199795454545456
----
Episode Count =  205
Blocking Probability =  0.252
Mean Resource Utilization = 0.3228927272727273
----
Episode Count =  206
Blocking Probability =  0.275
Mean Resource Utilization = 0.3193397727272727
----
Episode Count =  207
Blocking Probability =  0.267
Mean Resource Utilization = 0.34947
----
Episode Count =  208
Blocking Probability =  0.281
Mean Resource Utilization = 0.3548304545454545
----
Episode Count =  209
Blocking Probability =  0.29
Mean Resource Utilization = 0.334069090909091
----
Episode Count =  210
Blocking Probability =  0.243
Mean Resource Utilization = 0.3355779545454545
----
Episode Count =  211
Blocking Probability =  0.254
Mean Resource Utilization = 0.3493629545454545
----
Episode Count =  212
Blocking Probability =  0.279
Mean Resource Utilization = 0.35207931818181815
----
Episode Count =  213
Blocking Probability =  0.249
Mean Resource Utilization = 0.3353325
----
Episode Count =  214
Blocking Probability =  0.265
Mean Resource Utilization = 0.3339504545454546
----
Episode Count =  215
Blocking Probability =  0.319
Mean Resource Utilization = 0.35558386363636363
----
Episode Count =  216
Blocking Probability =  0.268
Mean Resource Utilization = 0.35205818181818177
----
Episode Count =  217
Blocking Probability =  0.264
Mean Resource Utilization = 0.3326740909090909
----
Episode Count =  218
Blocking Probability =  0.234
Mean Resource Utilization = 0.35446568181818183
----
Episode Count =  219
Blocking Probability =  0.26
Mean Resource Utilization = 0.34485954545454545
----
Episode Count =  220
Blocking Probability =  0.241
Mean Resource Utilization = 0.35224568181818183
----
Episode Count =  221
Blocking Probability =  0.278
Mean Resource Utilization = 0.32894454545454543
----
Episode Count =  222
Blocking Probability =  0.272
Mean Resource Utilization = 0.33388090909090906
----
Episode Count =  223
Blocking Probability =  0.264
Mean Resource Utilization = 0.3294770454545454
----
Episode Count =  224
Blocking Probability =  0.277
Mean Resource Utilization = 0.3374672727272728
----
Episode Count =  225
Blocking Probability =  0.219
Mean Resource Utilization = 0.3149925
----
Episode Count =  226
Blocking Probability =  0.274
Mean Resource Utilization = 0.34492022727272725
----
Episode Count =  227
Blocking Probability =  0.278
Mean Resource Utilization = 0.34916250000000004
----
Episode Count =  228
Blocking Probability =  0.272
Mean Resource Utilization = 0.35458022727272726
----
Episode Count =  229
Blocking Probability =  0.273
Mean Resource Utilization = 0.3516968181818182
----
Episode Count =  230
Blocking Probability =  0.268
Mean Resource Utilization = 0.3475575
----
Episode Count =  231
Blocking Probability =  0.272
Mean Resource Utilization = 0.34873227272727275
----
Episode Count =  232
Blocking Probability =  0.228
Mean Resource Utilization = 0.35912045454545455
----
Episode Count =  233
Blocking Probability =  0.285
Mean Resource Utilization = 0.3559029545454545
----
Episode Count =  234
Blocking Probability =  0.269
Mean Resource Utilization = 0.34316454545454544
----
Episode Count =  235
Blocking Probability =  0.246
Mean Resource Utilization = 0.3419481818181818
----
Episode Count =  236
Blocking Probability =  0.285
Mean Resource Utilization = 0.3467665909090909
----
Episode Count =  237
Blocking Probability =  0.291
Mean Resource Utilization = 0.33530454545454547
----
Episode Count =  238
Blocking Probability =  0.243
Mean Resource Utilization = 0.3300702272727273
----
Episode Count =  239
Blocking Probability =  0.28
Mean Resource Utilization = 0.33253636363636363
----
Episode Count =  240
Blocking Probability =  0.288
Mean Resource Utilization = 0.35159727272727276
----
Episode Count =  241
Blocking Probability =  0.269
Mean Resource Utilization = 0.3307234090909091
----
Episode Count =  242
Blocking Probability =  0.27
Mean Resource Utilization = 0.3190275
----
Episode Count =  243
Blocking Probability =  0.258
Mean Resource Utilization = 0.3274977272727273
----
Episode Count =  244
Blocking Probability =  0.24
Mean Resource Utilization = 0.32398363636363636
----
Episode Count =  245
Blocking Probability =  0.268
Mean Resource Utilization = 0.3443979545454545
----
Episode Count =  246
Blocking Probability =  0.274
Mean Resource Utilization = 0.33672272727272723
----
Episode Count =  247
Blocking Probability =  0.253
Mean Resource Utilization = 0.3454009090909091
----
Episode Count =  248
Blocking Probability =  0.254
Mean Resource Utilization = 0.33951886363636363
----
Episode Count =  249
Blocking Probability =  0.257
Mean Resource Utilization = 0.32765999999999995
----
Episode Count =  250
Blocking Probability =  0.255
Mean Resource Utilization = 0.3388363636363636
----
Episode Count =  251
Blocking Probability =  0.262
Mean Resource Utilization = 0.34916590909090905
----
Episode Count =  252
Blocking Probability =  0.249
Mean Resource Utilization = 0.3522020454545454
----
Episode Count =  253
Blocking Probability =  0.261
Mean Resource Utilization = 0.3350665909090909
----
Episode Count =  254
Blocking Probability =  0.255
Mean Resource Utilization = 0.3464365909090909
----
Episode Count =  255
Blocking Probability =  0.259
Mean Resource Utilization = 0.3473365909090909
----
Episode Count =  256
Blocking Probability =  0.261
Mean Resource Utilization = 0.3426947727272727
----
Episode Count =  257
Blocking Probability =  0.288
Mean Resource Utilization = 0.3412247727272727
----
Episode Count =  258
Blocking Probability =  0.267
Mean Resource Utilization = 0.3466309090909091
----
Episode Count =  259
Blocking Probability =  0.266
Mean Resource Utilization = 0.3400063636363636
----
Episode Count =  260
Blocking Probability =  0.263
Mean Resource Utilization = 0.3565779545454546
----
Episode Count =  261
Blocking Probability =  0.294
Mean Resource Utilization = 0.3542720454545455
----
Episode Count =  262
Blocking Probability =  0.272
Mean Resource Utilization = 0.3434454545454546
----
Episode Count =  263
Blocking Probability =  0.274
Mean Resource Utilization = 0.35212227272727276
----
Episode Count =  264
Blocking Probability =  0.279
Mean Resource Utilization = 0.3520234090909091
----
Episode Count =  265
Blocking Probability =  0.257
Mean Resource Utilization = 0.3527502272727272
----
Episode Count =  266
Blocking Probability =  0.259
Mean Resource Utilization = 0.3545386363636363
----
Episode Count =  267
Blocking Probability =  0.271
Mean Resource Utilization = 0.35229136363636365
----
Episode Count =  268
Blocking Probability =  0.28
Mean Resource Utilization = 0.3599679545454545
----
Episode Count =  269
Blocking Probability =  0.277
Mean Resource Utilization = 0.33434522727272725
----
Episode Count =  270
Blocking Probability =  0.263
Mean Resource Utilization = 0.3340506818181818
----
Episode Count =  271
Blocking Probability =  0.264
Mean Resource Utilization = 0.33778022727272733
----
Episode Count =  272
Blocking Probability =  0.261
Mean Resource Utilization = 0.3326993181818182
----
Episode Count =  273
Blocking Probability =  0.276
Mean Resource Utilization = 0.33948886363636366
----
Episode Count =  274
Blocking Probability =  0.243
Mean Resource Utilization = 0.33388636363636365
----
Episode Count =  275
Blocking Probability =  0.279
Mean Resource Utilization = 0.34886795454545455
----
Episode Count =  276
Blocking Probability =  0.249
Mean Resource Utilization = 0.3384497727272727
----
Episode Count =  277
Blocking Probability =  0.272
Mean Resource Utilization = 0.33640977272727274
----
Episode Count =  278
Blocking Probability =  0.254
Mean Resource Utilization = 0.3489518181818182
----
Episode Count =  279
Blocking Probability =  0.23
Mean Resource Utilization = 0.3343881818181818
----
Episode Count =  280
Blocking Probability =  0.262
Mean Resource Utilization = 0.32959295454545456
----
Episode Count =  281
Blocking Probability =  0.267
Mean Resource Utilization = 0.3463506818181818
----
Episode Count =  282
Blocking Probability =  0.226
Mean Resource Utilization = 0.32960727272727275
----
Episode Count =  283
Blocking Probability =  0.264
Mean Resource Utilization = 0.35829136363636366
----
Episode Count =  284
Blocking Probability =  0.289
Mean Resource Utilization = 0.3567013636363637
----
Episode Count =  285
Blocking Probability =  0.231
Mean Resource Utilization = 0.3608215909090909
----
Episode Count =  286
Blocking Probability =  0.254
Mean Resource Utilization = 0.3390784090909091
----
Episode Count =  287
Blocking Probability =  0.252
Mean Resource Utilization = 0.3307015909090909
----
Episode Count =  288
Blocking Probability =  0.289
Mean Resource Utilization = 0.3457568181818182
----
Episode Count =  289
Blocking Probability =  0.233
Mean Resource Utilization = 0.3398515909090909
----
Episode Count =  290
Blocking Probability =  0.24
Mean Resource Utilization = 0.3213354545454546
----
Episode Count =  291
Blocking Probability =  0.277
Mean Resource Utilization = 0.35636863636363636
----
Episode Count =  292
Blocking Probability =  0.283
Mean Resource Utilization = 0.35444863636363644
----
Episode Count =  293
Blocking Probability =  0.257
Mean Resource Utilization = 0.3475520454545455
----
Episode Count =  294
Blocking Probability =  0.271
Mean Resource Utilization = 0.3299365909090909
----
Episode Count =  295
Blocking Probability =  0.253
Mean Resource Utilization = 0.3308297727272727
----
Episode Count =  296
Blocking Probability =  0.28
Mean Resource Utilization = 0.33762613636363636
----
Episode Count =  297
Blocking Probability =  0.224
Mean Resource Utilization = 0.33439295454545453
----
Episode Count =  298
Blocking Probability =  0.25
Mean Resource Utilization = 0.33373909090909093
----
Episode Count =  299
Blocking Probability =  0.246
Mean Resource Utilization = 0.33933204545454543
----
Episode Count =  300
Blocking Probability =  0.248
Mean Resource Utilization = 0.34337113636363636
----
Model Saved
stored successfully!
Episode Count =  301
Blocking Probability =  0.262
Mean Resource Utilization = 0.3471027272727273
----
Episode Count =  302
Blocking Probability =  0.256
Mean Resource Utilization = 0.3433861363636364
----
Episode Count =  303
Blocking Probability =  0.233
Mean Resource Utilization = 0.3412963636363637
----
Episode Count =  304
Blocking Probability =  0.223
Mean Resource Utilization = 0.34882909090909087
----
Episode Count =  305
Blocking Probability =  0.254
Mean Resource Utilization = 0.3478125
----
Episode Count =  306
Blocking Probability =  0.229
Mean Resource Utilization = 0.3319227272727272
----
Episode Count =  307
Blocking Probability =  0.261
Mean Resource Utilization = 0.3497740909090909
----
Episode Count =  308
Blocking Probability =  0.275
Mean Resource Utilization = 0.34726090909090906
----
Episode Count =  309
Blocking Probability =  0.262
Mean Resource Utilization = 0.3393511363636364
----
Episode Count =  310
Blocking Probability =  0.262
Mean Resource Utilization = 0.3566618181818182
----
Episode Count =  311
Blocking Probability =  0.265
Mean Resource Utilization = 0.35285249999999996
----
Episode Count =  312
Blocking Probability =  0.278
Mean Resource Utilization = 0.3391309090909091
----
Episode Count =  313
Blocking Probability =  0.295
Mean Resource Utilization = 0.3579415909090909
----
Episode Count =  314
Blocking Probability =  0.256
Mean Resource Utilization = 0.34966295454545454
----
Episode Count =  315
Blocking Probability =  0.254
Mean Resource Utilization = 0.34322181818181813
----
Episode Count =  316
Blocking Probability =  0.235
Mean Resource Utilization = 0.32196749999999996
----
Episode Count =  317
Blocking Probability =  0.284
Mean Resource Utilization = 0.3459313636363636
----
Episode Count =  318
Blocking Probability =  0.299
Mean Resource Utilization = 0.3480177272727273
----
Episode Count =  319
Blocking Probability =  0.251
Mean Resource Utilization = 0.33583431818181814
----
Episode Count =  320
Blocking Probability =  0.235
Mean Resource Utilization = 0.3386788636363636
----
Episode Count =  321
Blocking Probability =  0.253
Mean Resource Utilization = 0.33967909090909093
----
Episode Count =  322
Blocking Probability =  0.261
Mean Resource Utilization = 0.3365345454545454
----
Episode Count =  323
Blocking Probability =  0.265
Mean Resource Utilization = 0.3368815909090909
----
Episode Count =  324
Blocking Probability =  0.249
Mean Resource Utilization = 0.3524318181818182
----
Episode Count =  325
Blocking Probability =  0.277
Mean Resource Utilization = 0.34914
----
Episode Count =  326
Blocking Probability =  0.25
Mean Resource Utilization = 0.3356120454545454
----
Episode Count =  327
Blocking Probability =  0.288
Mean Resource Utilization = 0.3429845454545455
----
Episode Count =  328
Blocking Probability =  0.278
Mean Resource Utilization = 0.34973045454545454
----
Episode Count =  329
Blocking Probability =  0.261
Mean Resource Utilization = 0.3502663636363636
----
Episode Count =  330
Blocking Probability =  0.25
Mean Resource Utilization = 0.3522640909090909
----
Episode Count =  331
Blocking Probability =  0.257
Mean Resource Utilization = 0.3437590909090909
----
Episode Count =  332
Blocking Probability =  0.263
Mean Resource Utilization = 0.33803318181818187
----
Episode Count =  333
Blocking Probability =  0.272
Mean Resource Utilization = 0.3513552272727273
----
Episode Count =  334
Blocking Probability =  0.274
Mean Resource Utilization = 0.3510361363636364
----
Episode Count =  335
Blocking Probability =  0.232
Mean Resource Utilization = 0.33482727272727275
----
Episode Count =  336
Blocking Probability =  0.272
Mean Resource Utilization = 0.3544554545454546
----
Episode Count =  337
Blocking Probability =  0.271
Mean Resource Utilization = 0.35631613636363635
----
Episode Count =  338
Blocking Probability =  0.256
Mean Resource Utilization = 0.35465659090909096
----
Episode Count =  339
Blocking Probability =  0.262
Mean Resource Utilization = 0.34582772727272726
----
Episode Count =  340
Blocking Probability =  0.263
Mean Resource Utilization = 0.3558865909090909
----
Episode Count =  341
Blocking Probability =  0.296
Mean Resource Utilization = 0.3537286363636364
----
Episode Count =  342
Blocking Probability =  0.242
Mean Resource Utilization = 0.35478681818181823
----
Episode Count =  343
Blocking Probability =  0.26
Mean Resource Utilization = 0.34892863636363636
----
Episode Count =  344
Blocking Probability =  0.234
Mean Resource Utilization = 0.3374747727272728
----
Episode Count =  345
Blocking Probability =  0.309
Mean Resource Utilization = 0.3427834090909091
----
Episode Count =  346
Blocking Probability =  0.267
Mean Resource Utilization = 0.3637172727272728
----
Episode Count =  347
Blocking Probability =  0.237
Mean Resource Utilization = 0.33695181818181824
----
Episode Count =  348
Blocking Probability =  0.245
Mean Resource Utilization = 0.34387977272727277
----
Episode Count =  349
Blocking Probability =  0.267
Mean Resource Utilization = 0.3508970454545454
----
Episode Count =  350
Blocking Probability =  0.252
Mean Resource Utilization = 0.3586131818181818
----
Episode Count =  351
Blocking Probability =  0.246
Mean Resource Utilization = 0.3519402272727273
----
Episode Count =  352
Blocking Probability =  0.29
Mean Resource Utilization = 0.34438295454545453
----
Episode Count =  353
Blocking Probability =  0.257
Mean Resource Utilization = 0.3697581818181818
----
Episode Count =  354
Blocking Probability =  0.279
Mean Resource Utilization = 0.3498081818181818
----
Episode Count =  355
Blocking Probability =  0.258
Mean Resource Utilization = 0.352545
----
Episode Count =  356
Blocking Probability =  0.254
Mean Resource Utilization = 0.3443447727272727
----
Episode Count =  357
Blocking Probability =  0.237
Mean Resource Utilization = 0.3564095454545455
----
Episode Count =  358
Blocking Probability =  0.288
Mean Resource Utilization = 0.3708668181818182
----
Episode Count =  359
Blocking Probability =  0.261
Mean Resource Utilization = 0.3393136363636364
----
Episode Count =  360
Blocking Probability =  0.268
Mean Resource Utilization = 0.36571022727272723
----
Episode Count =  361
Blocking Probability =  0.293
Mean Resource Utilization = 0.3508697727272727
----
Episode Count =  362
Blocking Probability =  0.221
Mean Resource Utilization = 0.34112045454545453
----
Episode Count =  363
Blocking Probability =  0.255
Mean Resource Utilization = 0.36730772727272726
----
Episode Count =  364
Blocking Probability =  0.267
Mean Resource Utilization = 0.3603177272727273
----
Episode Count =  365
Blocking Probability =  0.295
Mean Resource Utilization = 0.3538881818181818
----
Episode Count =  366
Blocking Probability =  0.264
Mean Resource Utilization = 0.3539393181818182
----
Episode Count =  367
Blocking Probability =  0.261
Mean Resource Utilization = 0.3460418181818181
----
Episode Count =  368
Blocking Probability =  0.281
Mean Resource Utilization = 0.34873977272727275
----
Episode Count =  369
Blocking Probability =  0.24
Mean Resource Utilization = 0.3406029545454546
----
Episode Count =  370
Blocking Probability =  0.277
Mean Resource Utilization = 0.3499540909090909
----
Episode Count =  371
Blocking Probability =  0.269
Mean Resource Utilization = 0.3655288636363636
----
Episode Count =  372
Blocking Probability =  0.256
Mean Resource Utilization = 0.34726772727272726
----
Episode Count =  373
Blocking Probability =  0.276
Mean Resource Utilization = 0.35347636363636364
----
Episode Count =  374
Blocking Probability =  0.268
Mean Resource Utilization = 0.34568045454545454
----
Episode Count =  375
Blocking Probability =  0.246
Mean Resource Utilization = 0.34790795454545453
----
Episode Count =  376
Blocking Probability =  0.23
Mean Resource Utilization = 0.3444027272727273
----
Episode Count =  377
Blocking Probability =  0.261
Mean Resource Utilization = 0.341560909090909
----
Episode Count =  378
Blocking Probability =  0.245
Mean Resource Utilization = 0.35823204545454546
----
Episode Count =  379
Blocking Probability =  0.269
Mean Resource Utilization = 0.36257999999999996
----
Episode Count =  380
Blocking Probability =  0.265
Mean Resource Utilization = 0.3623215909090909
----
Episode Count =  381
Blocking Probability =  0.278
Mean Resource Utilization = 0.3416563636363636
----
Episode Count =  382
Blocking Probability =  0.268
Mean Resource Utilization = 0.3664384090909091
----
Episode Count =  383
Blocking Probability =  0.23
Mean Resource Utilization = 0.35058818181818185
----
Episode Count =  384
Blocking Probability =  0.242
Mean Resource Utilization = 0.32237045454545454
----
Episode Count =  385
Blocking Probability =  0.244
Mean Resource Utilization = 0.32643
----
Episode Count =  386
Blocking Probability =  0.258
Mean Resource Utilization = 0.34301454545454546
----
Episode Count =  387
Blocking Probability =  0.248
Mean Resource Utilization = 0.3459402272727273
----
Episode Count =  388
Blocking Probability =  0.29
Mean Resource Utilization = 0.3588538636363637
----
Episode Count =  389
Blocking Probability =  0.259
Mean Resource Utilization = 0.35153522727272724
----
Episode Count =  390
Blocking Probability =  0.267
Mean Resource Utilization = 0.3538554545454546
----
Episode Count =  391
Blocking Probability =  0.263
Mean Resource Utilization = 0.3596106818181818
----
Episode Count =  392
Blocking Probability =  0.275
Mean Resource Utilization = 0.34702227272727276
----
Episode Count =  393
Blocking Probability =  0.229
Mean Resource Utilization = 0.34625795454545455
----
Episode Count =  394
Blocking Probability =  0.267
Mean Resource Utilization = 0.3440829545454545
----
Episode Count =  395
Blocking Probability =  0.248
Mean Resource Utilization = 0.3445909090909091
----
Episode Count =  396
Blocking Probability =  0.264
Mean Resource Utilization = 0.3507259090909091
----
Episode Count =  397
Blocking Probability =  0.243
Mean Resource Utilization = 0.3545393181818182
----
Episode Count =  398
Blocking Probability =  0.219
Mean Resource Utilization = 0.3431515909090909
----
Episode Count =  399
Blocking Probability =  0.259
Mean Resource Utilization = 0.3316561363636364
----
Episode Count =  400
Blocking Probability =  0.297
Mean Resource Utilization = 0.3544568181818182
----
Model Saved
stored successfully!
Episode Count =  401
Blocking Probability =  0.26
Mean Resource Utilization = 0.36354068181818183
----
Episode Count =  402
Blocking Probability =  0.254
Mean Resource Utilization = 0.3540818181818182
----
Episode Count =  403
Blocking Probability =  0.241
Mean Resource Utilization = 0.3483143181818182
----
Episode Count =  404
Blocking Probability =  0.25
Mean Resource Utilization = 0.34859931818181816
----
Episode Count =  405
Blocking Probability =  0.233
Mean Resource Utilization = 0.35459795454545456
----
Episode Count =  406
Blocking Probability =  0.242
Mean Resource Utilization = 0.3457936363636363
----
Episode Count =  407
Blocking Probability =  0.292
Mean Resource Utilization = 0.35104704545454546
----
Episode Count =  408
Blocking Probability =  0.273
Mean Resource Utilization = 0.3544765909090909
----
Episode Count =  409
Blocking Probability =  0.259
Mean Resource Utilization = 0.34596818181818184
----
Episode Count =  410
Blocking Probability =  0.225
Mean Resource Utilization = 0.3544868181818182
----
Episode Count =  411
Blocking Probability =  0.255
Mean Resource Utilization = 0.33703295454545457
----
Episode Count =  412
Blocking Probability =  0.279
Mean Resource Utilization = 0.35640409090909086
----
Episode Count =  413
Blocking Probability =  0.254
Mean Resource Utilization = 0.3546415909090909
----
Episode Count =  414
Blocking Probability =  0.256
Mean Resource Utilization = 0.33875727272727274
----
Episode Count =  415
Blocking Probability =  0.234
Mean Resource Utilization = 0.34717159090909094
----
Episode Count =  416
Blocking Probability =  0.238
Mean Resource Utilization = 0.32987659090909094
----
Episode Count =  417
Blocking Probability =  0.278
Mean Resource Utilization = 0.35749159090909094
----
Episode Count =  418
Blocking Probability =  0.298
Mean Resource Utilization = 0.35307613636363633
----
Episode Count =  419
Blocking Probability =  0.256
Mean Resource Utilization = 0.34284818181818183
----
Episode Count =  420
Blocking Probability =  0.241
Mean Resource Utilization = 0.33102681818181817
----
Episode Count =  421
Blocking Probability =  0.255
Mean Resource Utilization = 0.3333934090909091
----
Episode Count =  422
Blocking Probability =  0.276
Mean Resource Utilization = 0.35819727272727275
----
Episode Count =  423
Blocking Probability =  0.273
Mean Resource Utilization = 0.34844727272727277
----
Episode Count =  424
Blocking Probability =  0.26
Mean Resource Utilization = 0.3462647727272728
----
Episode Count =  425
Blocking Probability =  0.262
Mean Resource Utilization = 0.36343363636363635
----
Episode Count =  426
Blocking Probability =  0.251
Mean Resource Utilization = 0.3448397727272727
----
Episode Count =  427
Blocking Probability =  0.238
Mean Resource Utilization = 0.3478131818181818
----
Episode Count =  428
Blocking Probability =  0.236
Mean Resource Utilization = 0.3576470454545455
----
Episode Count =  429
Blocking Probability =  0.236
Mean Resource Utilization = 0.34662068181818184
----
Episode Count =  430
Blocking Probability =  0.241
Mean Resource Utilization = 0.3286602272727273
----
Episode Count =  431
Blocking Probability =  0.244
Mean Resource Utilization = 0.3405647727272727
----
Episode Count =  432
Blocking Probability =  0.241
Mean Resource Utilization = 0.3405886363636364
----
Episode Count =  433
Blocking Probability =  0.275
Mean Resource Utilization = 0.34423159090909095
----
Episode Count =  434
Blocking Probability =  0.268
Mean Resource Utilization = 0.3532220454545455
----
Episode Count =  435
Blocking Probability =  0.249
Mean Resource Utilization = 0.36947863636363637
----
Episode Count =  436
Blocking Probability =  0.229
Mean Resource Utilization = 0.3331915909090909
----
Episode Count =  437
Blocking Probability =  0.254
Mean Resource Utilization = 0.3457861363636363
----
Episode Count =  438
Blocking Probability =  0.232
Mean Resource Utilization = 0.35723727272727274
----
Episode Count =  439
Blocking Probability =  0.28
Mean Resource Utilization = 0.35924181818181816
----
Episode Count =  440
Blocking Probability =  0.258
Mean Resource Utilization = 0.3567640909090909
----
Episode Count =  441
Blocking Probability =  0.246
Mean Resource Utilization = 0.3461134090909091
----
Episode Count =  442
Blocking Probability =  0.272
Mean Resource Utilization = 0.34431
----
Episode Count =  443
Blocking Probability =  0.256
Mean Resource Utilization = 0.35691545454545454
----
Episode Count =  444
Blocking Probability =  0.23
Mean Resource Utilization = 0.3327920454545455
----
Episode Count =  445
Blocking Probability =  0.246
Mean Resource Utilization = 0.33480204545454545
----
Episode Count =  446
Blocking Probability =  0.247
Mean Resource Utilization = 0.34034318181818185
----
Episode Count =  447
Blocking Probability =  0.255
Mean Resource Utilization = 0.33663
----
Episode Count =  448
Blocking Probability =  0.254
Mean Resource Utilization = 0.3518761363636364
----
Episode Count =  449
Blocking Probability =  0.227
Mean Resource Utilization = 0.3432845454545454
----
Episode Count =  450
Blocking Probability =  0.265
Mean Resource Utilization = 0.35685272727272727
----
Episode Count =  451
Blocking Probability =  0.291
Mean Resource Utilization = 0.3556125
----
Episode Count =  452
Blocking Probability =  0.271
Mean Resource Utilization = 0.33543136363636367
----
Episode Count =  453
Blocking Probability =  0.285
Mean Resource Utilization = 0.3539509090909091
----
Episode Count =  454
Blocking Probability =  0.254
Mean Resource Utilization = 0.3542079545454545
----
Episode Count =  455
Blocking Probability =  0.215
Mean Resource Utilization = 0.33277568181818185
----
Episode Count =  456
Blocking Probability =  0.256
Mean Resource Utilization = 0.3419011363636364
----
Episode Count =  457
Blocking Probability =  0.234
Mean Resource Utilization = 0.3416877272727273
----
Episode Count =  458
Blocking Probability =  0.262
Mean Resource Utilization = 0.35468727272727274
----
Episode Count =  459
Blocking Probability =  0.223
Mean Resource Utilization = 0.34508113636363635
----
Episode Count =  460
Blocking Probability =  0.26
Mean Resource Utilization = 0.3412165909090909
----
Episode Count =  461
Blocking Probability =  0.308
Mean Resource Utilization = 0.3691677272727273
----
Episode Count =  462
Blocking Probability =  0.263
Mean Resource Utilization = 0.3451452272727273
----
Episode Count =  463
Blocking Probability =  0.236
Mean Resource Utilization = 0.33598704545454544
----
Episode Count =  464
Blocking Probability =  0.243
Mean Resource Utilization = 0.3490131818181818
----
Episode Count =  465
Blocking Probability =  0.28
Mean Resource Utilization = 0.3584434090909091
----
Episode Count =  466
Blocking Probability =  0.254
Mean Resource Utilization = 0.34055931818181817
----
Episode Count =  467
Blocking Probability =  0.253
Mean Resource Utilization = 0.3327975
----
Episode Count =  468
Blocking Probability =  0.249
Mean Resource Utilization = 0.34587409090909094
----
Episode Count =  469
Blocking Probability =  0.255
Mean Resource Utilization = 0.36016363636363635
----
Episode Count =  470
Blocking Probability =  0.225
Mean Resource Utilization = 0.34297704545454544
----
Episode Count =  471
Blocking Probability =  0.25
Mean Resource Utilization = 0.3627409090909091
----
Episode Count =  472
Blocking Probability =  0.262
Mean Resource Utilization = 0.34191954545454545
----
Episode Count =  473
Blocking Probability =  0.245
Mean Resource Utilization = 0.3484547727272727
----
Episode Count =  474
Blocking Probability =  0.24
Mean Resource Utilization = 0.3484820454545454
----
Episode Count =  475
Blocking Probability =  0.268
Mean Resource Utilization = 0.3464802272727273
----
Episode Count =  476
Blocking Probability =  0.254
Mean Resource Utilization = 0.3404468181818182
----
Episode Count =  477
Blocking Probability =  0.232
Mean Resource Utilization = 0.3454465909090909
----
Episode Count =  478
Blocking Probability =  0.252
Mean Resource Utilization = 0.352665
----
Episode Count =  479
Blocking Probability =  0.23
Mean Resource Utilization = 0.3484881818181818
----
Episode Count =  480
Blocking Probability =  0.251
Mean Resource Utilization = 0.34050136363636363
----
Episode Count =  481
Blocking Probability =  0.245
Mean Resource Utilization = 0.3387013636363636
----
Episode Count =  482
Blocking Probability =  0.265
Mean Resource Utilization = 0.35193545454545455
----
Episode Count =  483
Blocking Probability =  0.221
Mean Resource Utilization = 0.33924545454545457
----
Episode Count =  484
Blocking Probability =  0.258
Mean Resource Utilization = 0.3518529545454545
----
Episode Count =  485
Blocking Probability =  0.23
Mean Resource Utilization = 0.33497113636363635
----
Episode Count =  486
Blocking Probability =  0.25
Mean Resource Utilization = 0.3485747727272727
----
Episode Count =  487
Blocking Probability =  0.243
Mean Resource Utilization = 0.34270022727272725
----
Episode Count =  488
Blocking Probability =  0.273
Mean Resource Utilization = 0.3520295454545454
----
Episode Count =  489
Blocking Probability =  0.279
Mean Resource Utilization = 0.34817999999999993
----
Episode Count =  490
Blocking Probability =  0.266
Mean Resource Utilization = 0.34906363636363635
----
Episode Count =  491
Blocking Probability =  0.237
Mean Resource Utilization = 0.3532643181818182
----
Episode Count =  492
Blocking Probability =  0.255
Mean Resource Utilization = 0.35996931818181815
----
Episode Count =  493
Blocking Probability =  0.28
Mean Resource Utilization = 0.34836
----
Episode Count =  494
Blocking Probability =  0.239
Mean Resource Utilization = 0.35441181818181816
----
Episode Count =  495
Blocking Probability =  0.223
Mean Resource Utilization = 0.36746795454545456
----
Episode Count =  496
Blocking Probability =  0.23
Mean Resource Utilization = 0.34358999999999995
----
Episode Count =  497
Blocking Probability =  0.248
Mean Resource Utilization = 0.34283181818181824
----
Episode Count =  498
Blocking Probability =  0.228
Mean Resource Utilization = 0.33766909090909086
----
Episode Count =  499
Blocking Probability =  0.248
Mean Resource Utilization = 0.32731090909090904
----
Episode Count =  500
Blocking Probability =  0.246
Mean Resource Utilization = 0.34471431818181814
----
Model Saved
stored successfully!
Episode Count =  501
Blocking Probability =  0.219
Mean Resource Utilization = 0.33706977272727273
----
Episode Count =  502
Blocking Probability =  0.227
Mean Resource Utilization = 0.3568554545454546
----
Episode Count =  503
Blocking Probability =  0.266
Mean Resource Utilization = 0.3547363636363636
----
Episode Count =  504
Blocking Probability =  0.226
Mean Resource Utilization = 0.3503025
----
Episode Count =  505
Blocking Probability =  0.221
Mean Resource Utilization = 0.34464545454545453
----
Episode Count =  506
Blocking Probability =  0.233
Mean Resource Utilization = 0.3496438636363637
----
Episode Count =  507
Blocking Probability =  0.227
Mean Resource Utilization = 0.3380925
----
Episode Count =  508
Blocking Probability =  0.242
Mean Resource Utilization = 0.3482243181818182
----
Episode Count =  509
Blocking Probability =  0.216
Mean Resource Utilization = 0.34453090909090905
----
Episode Count =  510
Blocking Probability =  0.219
Mean Resource Utilization = 0.33391159090909095
----
Episode Count =  511
Blocking Probability =  0.245
Mean Resource Utilization = 0.3519409090909091
----
Episode Count =  512
Blocking Probability =  0.249
Mean Resource Utilization = 0.3594920454545454
----
Episode Count =  513
Blocking Probability =  0.262
Mean Resource Utilization = 0.34872
----
Episode Count =  514
Blocking Probability =  0.274
Mean Resource Utilization = 0.34263340909090906
----
Episode Count =  515
Blocking Probability =  0.262
Mean Resource Utilization = 0.34017068181818183
----
Exception in thread Thread-6 (agent_rmsa):
Traceback (most recent call last):
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
Exception in thread Thread-4 (agent_rmsa):
Traceback (most recent call last):
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
Exception in thread Thread-5 (agent_rmsa):
Traceback (most recent call last):
          File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
self.run()self.run()
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 953, in run
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 953, in run
            self._target(*self._args, **self._kwargs)
self._target(*self._args, **self._kwargs)  File "/Users/emil/Documents/MyRMSA/My_Deep_RMSA_A3C.py", line 240, in agent_rmsa
self.run()
  File "/Users/emil/Documents/MyRMSA/My_Deep_RMSA_A3C.py", line 240, in agent_rmsa
      File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/threading.py", line 953, in run
agent.rmsa(sess, coord, saver)
agent.rmsa(sess, coord, saver)  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 669, in rmsa
self._target(*self._args, **self._kwargs)  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 669, in rmsa
        prob_dist, value, entro = sess.run(prob_dist, value, entro = sess.run(
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 967, in run
  File "/Users/emil/Documents/MyRMSA/My_Deep_RMSA_A3C.py", line 240, in agent_rmsa
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 967, in run
        result = self._run(None, fetches, feed_dict, options_ptr,agent.rmsa(sess, coord, saver)
      File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 1115, in _run
  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 765, in rmsa
result = self._run(None, fetches, feed_dict, options_ptr,
raise RuntimeError('Attempted to use a closed Session.')
    regu_loss_value = self.train(episode_buffer, sess, 0.0)RuntimeError
  File "/Users/emil/Documents/MyRMSA/My_DeepRMSA_Agent.py", line 433, in train
: Attempted to use a closed Session.
    var_norms_value, _, _, regu_loss_policy, regu_loss_value = sess.run(  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 1115, in _run
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 967, in run
        result = self._run(None, fetches, feed_dict, options_ptr,
  File "/Users/emil/opt/anaconda3/envs/emilsenv/lib/python3.10/site-packages/tensorflow/python/client/session.py", line 1115, in _run
    raise RuntimeError('Attempted to use a closed Session.')
raise RuntimeError('Attempted to use a closed Session.')RuntimeError
: RuntimeErrorAttempted to use a closed Session.
